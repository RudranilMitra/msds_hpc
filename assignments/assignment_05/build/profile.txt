Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00     8285     0.00     0.00  std::operator&(std::memory_order, std::__memory_order_modifier)
  0.00      0.00     0.00     8258     0.00     0.00  async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::is_unique_ref(std::memory_order)
  0.00      0.00     0.00     8250     0.00     0.00  __gthread_yield()
  0.00      0.00     0.00     8250     0.00     0.00  std::this_thread::yield()
  0.00      0.00     0.00      101     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr()
  0.00      0.00     0.00       84     0.00     0.00  async::detail::compressed_ptr<3ul, true>* std::__addressof<async::detail::compressed_ptr<3ul, true> >(async::detail::compressed_ptr<3ul, true>&)
  0.00      0.00     0.00       78     0.00     0.00  async::detail::task_state const* std::__addressof<async::detail::task_state const>(async::detail::task_state const&)
  0.00      0.00     0.00       64     0.00     0.00  async::detail::compressed_ptr<3ul, true>::get_flags() const
  0.00      0.00     0.00       62     0.00     0.00  std::atomic<async::detail::task_state>::load(std::memory_order) const
  0.00      0.00     0.00       58     0.00     0.00  std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&)
  0.00      0.00     0.00       53     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&)
  0.00      0.00     0.00       39     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::get() const
  0.00      0.00     0.00       33     0.00     0.00  async::detail::task_state* std::__addressof<async::detail::task_state>(async::detail::task_state&)
  0.00      0.00     0.00       32     0.00     0.00  std::atomic<async::detail::compressed_ptr<3ul, true> >::load(std::memory_order) const
  0.00      0.00     0.00       32     0.00     0.00  async::detail::compressed_ptr<3ul, true> const* std::__addressof<async::detail::compressed_ptr<3ul, true> const>(async::detail::compressed_ptr<3ul, true> const&)
  0.00      0.00     0.00       31     0.00     0.00  __gthread_active_p()
  0.00      0.00     0.00       30     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*)
  0.00      0.00     0.00       27     0.00     0.00  async::detail::task_base* async::detail::compressed_ptr<3ul, true>::get_ptr<async::detail::task_base>() const
  0.00      0.00     0.00       27     0.00     0.00  main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&)
  0.00      0.00     0.00       24     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.00     0.00       23     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const
  0.00      0.00     0.00       21     0.00     0.00  async::detail::is_finished(async::detail::task_state)
  0.00      0.00     0.00       21     0.00     0.00  _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE
  0.00      0.00     0.00       19     0.00     0.00  async::detail::compressed_ptr<3ul, true>::compressed_ptr(void*, unsigned long)
  0.00      0.00     0.00       18     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::operator->() const
  0.00      0.00     0.00       18     0.00     0.00  std::atomic<async::detail::compressed_ptr<3ul, true> >::compare_exchange_weak(async::detail::compressed_ptr<3ul, true>&, async::detail::compressed_ptr<3ul, true>, std::memory_order, std::memory_order)
  0.00      0.00     0.00       17     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr()
  0.00      0.00     0.00       17     0.00     0.00  std::thread::id::id()
  0.00      0.00     0.00       16     0.00     0.00  std::__atomic_base<unsigned long>::__atomic_base(unsigned long)
  0.00      0.00     0.00       16     0.00     0.00  std::atomic<unsigned long>::atomic(unsigned long)
  0.00      0.00     0.00       15     0.00     0.00  async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::ref_count_base(unsigned long)
  0.00      0.00     0.00       15     0.00     0.00  void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&)
  0.00      0.00     0.00       15     0.00     0.00  async::detail::continuation_vector::continuation_vector()
  0.00      0.00     0.00       15     0.00     0.00  async::detail::task_base::run_continuations()
  0.00      0.00     0.00       15     0.00     0.00  async::detail::task_base::wait()
  0.00      0.00     0.00       15     0.00     0.00  async::detail::task_base::finish()
  0.00      0.00     0.00       15     0.00     0.00  async::detail::task_base::task_base()
  0.00      0.00     0.00       15     0.00     0.00  std::atomic<async::detail::task_state>::store(async::detail::task_state, std::memory_order)
  0.00      0.00     0.00       15     0.00     0.00  std::atomic<async::detail::task_state>::atomic(async::detail::task_state)
  0.00      0.00     0.00       15     0.00     0.00  std::atomic<async::detail::compressed_ptr<3ul, true> >::store(async::detail::compressed_ptr<3ul, true>, std::memory_order)
  0.00      0.00     0.00       14     0.00     0.00  async::task_run_handle::task_run_handle(async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00       14     0.00     0.00  async::task_run_handle::~task_run_handle()
  0.00      0.00     0.00       14     0.00     0.00  async::task<void>::~task()
  0.00      0.00     0.00       14     0.00     0.00  async::detail::basic_task<void>::~basic_task()
  0.00      0.00     0.00       14     0.00     0.00  async::detail::compressed_ptr<3ul, true>::set_flags(unsigned long)
  0.00      0.00     0.00       14     0.00     0.00  async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked()
  0.00      0.00     0.00       14     0.00     0.00  async::detail::continuation_vector::~continuation_vector()
  0.00      0.00     0.00       14     0.00     0.00  async::detail::task_base::~task_base()
  0.00      0.00     0.00       13     0.00     0.00  std::iterator_traits<async::int_range<int>::iterator>::iterator_category std::__iterator_category<async::int_range<int>::iterator>(async::int_range<int>::iterator const&)
  0.00      0.00     0.00       13     0.00     0.00  async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&)
  0.00      0.00     0.00       12     0.00     0.00  __gthread_mutex_lock(pthread_mutex_t*)
  0.00      0.00     0.00       12     0.00     0.00  __gthread_mutex_unlock(pthread_mutex_t*)
  0.00      0.00     0.00       12     0.00     0.00  void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00       12     0.00     0.00  async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::end() const
  0.00      0.00     0.00       12     0.00     0.00  async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::begin() const
  0.00      0.00     0.00       12     0.00     0.00  std::mutex::lock()
  0.00      0.00     0.00       12     0.00     0.00  std::mutex::unlock()
  0.00      0.00     0.00       12     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      0.00     0.00       11     0.00     0.00  async::task<int>::~task()
  0.00      0.00     0.00       11     0.00     0.00  async::detail::basic_task<int>::~basic_task()
  0.00      0.00     0.00       11     0.00     0.00  async::task<void>::internal_task_type* async::detail::get_internal_task<async::task<void> >(async::task<void> const&)
  0.00      0.00     0.00       11     0.00     0.00  async::detail::auto_partitioner_impl<int const*>::end() const
  0.00      0.00     0.00       11     0.00     0.00  async::detail::auto_partitioner_impl<int const*>::begin() const
  0.00      0.00     0.00       11     0.00     0.00  std::iterator_traits<int const*>::iterator_category std::__iterator_category<int const*>(int const* const&)
  0.00      0.00     0.00       10     0.00     0.00  async::task<void>::task()
  0.00      0.00     0.00       10     0.00     0.00  async::detail::basic_task<void>::basic_task()
  0.00      0.00     0.00       10     0.00     0.00  async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::remove_ref(unsigned long)
  0.00      0.00     0.00       10     0.00     0.00  std::remove_reference<async::task<int>&>::type&& std::move<async::task<int>&>(async::task<int>&)
  0.00      0.00     0.00       10     0.00     0.00  int&& std::forward<int>(std::remove_reference<int>::type&)
  0.00      0.00     0.00        9     0.00     0.00  async::detail::task_result<async::detail::fake_void>::task_result()
  0.00      0.00     0.00        9     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::operator=(async::detail::ref_count_ptr<async::detail::task_base>&&)
  0.00      0.00     0.00        9     0.00     0.00  async::detail::task_result_holder<async::detail::fake_void>::set_result(async::detail::fake_void)
  0.00      0.00     0.00        9     0.00     0.00  async::detail::task_result_holder<async::detail::fake_void>::task_result_holder()
  0.00      0.00     0.00        9     0.00     0.00  async::operator!=(async::int_range<int>::iterator, async::int_range<int>::iterator)
  0.00      0.00     0.00        9     0.00     0.00  async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&)
  0.00      0.00     0.00        9     0.00     0.00  std::iterator_traits<async::int_range<int>::iterator>::difference_type std::distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator)
  0.00      0.00     0.00        9     0.00     0.00  async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const
  0.00      0.00     0.00        8     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, void>::get_func()
  0.00      0.00     0.00        8     0.00     0.00  async::detail::task_result<async::detail::fake_void>::~task_result()
  0.00      0.00     0.00        8     0.00     0.00  async::detail::task_result_holder<async::detail::fake_void>::~task_result_holder()
  0.00      0.00     0.00        8     0.00     0.00  async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::split()
  0.00      0.00     0.00        8     0.00     0.00  async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::auto_partitioner_impl(async::int_range<int>::iterator, async::int_range<int>::iterator, unsigned long)
  0.00      0.00     0.00        8     0.00     0.00  async::detail::auto_partitioner_impl<int const*>::auto_partitioner_impl(int const*, int const*, unsigned long)
  0.00      0.00     0.00        8     0.00     0.00  async::operator==(async::int_range<int>::iterator, async::int_range<int>::iterator)
  0.00      0.00     0.00        8     0.00     0.00  async::operator-(async::int_range<int>::iterator, async::int_range<int>::iterator)
  0.00      0.00     0.00        8     0.00     0.00  std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>::_M_head(std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>&)
  0.00      0.00     0.00        8     0.00     0.00  std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&)
  0.00      0.00     0.00        8     0.00     0.00  std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr()
  0.00      0.00     0.00        8     0.00     0.00  std::iterator_traits<async::int_range<int>::iterator>::difference_type std::__distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator, std::random_access_iterator_tag)
  0.00      0.00     0.00        8     0.00     0.00  std::iterator_traits<int const*>::difference_type std::__distance<int const*>(int const*, int const*, std::random_access_iterator_tag)
  0.00      0.00     0.00        8     0.00     0.00  async::detail::continuation_vector::vector_data*& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&)
  0.00      0.00     0.00        8     0.00     0.00  std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&)
  0.00      0.00     0.00        8     0.00     0.00  std::remove_reference<async::task<void>&>::type&& std::move<async::task<void>&>(async::task<void>&)
  0.00      0.00     0.00        8     0.00     0.00  int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
  0.00      0.00     0.00        8     0.00     0.00  main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&)
  0.00      0.00     0.00        8     0.00     0.00  main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&)
  0.00      0.00     0.00        8     0.00     0.00  std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*)
  0.00      0.00     0.00        7     0.00     0.00  __gthread_self()
  0.00      0.00     0.00        7     0.00     0.00  async::default_scheduler()
  0.00      0.00     0.00        7     0.00     0.00  async::task<int>::internal_task_type* async::detail::get_internal_task<async::task<int> >(async::task<int> const&)
  0.00      0.00     0.00        7     0.00     0.00  async::detail::task_base_deleter::do_delete(async::detail::task_base*)
  0.00      0.00     0.00        7     0.00     0.00  async::detail::auto_partitioner_impl<int const*>::split()
  0.00      0.00     0.00        7     0.00     0.00  async::detail::task_base::operator delete(void*)
  0.00      0.00     0.00        7     0.00     0.00  async::detail::task_base::operator new(unsigned long)
  0.00      0.00     0.00        7     0.00     0.00  std::this_thread::get_id()
  0.00      0.00     0.00        7     0.00     0.00  std::remove_reference<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>::type&& std::move<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>(async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&)
  0.00      0.00     0.00        7     0.00     0.00  async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&)
  0.00      0.00     0.00        7     0.00     0.00  async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&)
  0.00      0.00     0.00        7     0.00     0.00  main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&)
  0.00      0.00     0.00        7     0.00     0.00  main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&)
  0.00      0.00     0.00        7     0.00     0.00  main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&)
  0.00      0.00     0.00        7     0.00     0.00  main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&)
  0.00      0.00     0.00        7     0.00     0.00  main::{lambda(int, int)#8}::operator()(int, int) const
  0.00      0.00     0.00        6     0.00     0.00  async::task<int>::task()
  0.00      0.00     0.00        6     0.00     0.00  async::detail::basic_task<int>::basic_task()
  0.00      0.00     0.00        6     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, void>::get_func()
  0.00      0.00     0.00        6     0.00     0.00  async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::~ref_count_ptr()
  0.00      0.00     0.00        6     0.00     0.00  async::detail::fake_void_to_void(async::detail::fake_void)
  0.00      0.00     0.00        6     0.00     0.00  async::detail::fake_void async::detail::task_result_holder<async::detail::fake_void>::get_result<void>(async::task<void> const&)
  0.00      0.00     0.00        6     0.00     0.00  std::thread::id::id(unsigned long)
  0.00      0.00     0.00        6     0.00     0.00  std::remove_reference<async::detail::auto_partitioner_impl<int const*>&>::type&& std::move<async::detail::auto_partitioner_impl<int const*>&>(async::detail::auto_partitioner_impl<int const*>&)
  0.00      0.00     0.00        6     0.00     0.00  main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&)
  0.00      0.00     0.00        6     0.00     0.00  std::operator==(std::thread::id, std::thread::id)
  0.00      0.00     0.00        6     0.00     0.00  std::operator!=(std::thread::id, std::thread::id)
  0.00      0.00     0.00        5     0.00     0.00  async::task<int>::task(async::task<int>&&)
  0.00      0.00     0.00        5     0.00     0.00  async::detail::basic_task<int>::basic_task(async::detail::basic_task<int>&&)
  0.00      0.00     0.00        5     0.00     0.00  async::detail::task_result<async::detail::fake_void>::wait_and_throw()
  0.00      0.00     0.00        5     0.00     0.00  async::detail::task_result<int>::task_result()
  0.00      0.00     0.00        5     0.00     0.00  async::detail::task_result<int>::~task_result()
  0.00      0.00     0.00        5     0.00     0.00  int&& async::detail::task_result_holder<int>::get_result<int>(async::task<int> const&)
  0.00      0.00     0.00        5     0.00     0.00  void async::detail::task_result_holder<int>::set_result<int>(int&&)
  0.00      0.00     0.00        5     0.00     0.00  async::detail::task_result_holder<int>::task_result_holder()
  0.00      0.00     0.00        5     0.00     0.00  async::detail::task_result_holder<int>::~task_result_holder()
  0.00      0.00     0.00        5     0.00     0.00  async::int_range<int>::iterator::operator++()
  0.00      0.00     0.00        4     0.00     0.00  _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_
  0.00      0.00     0.00        4     0.00     0.00  async::local_task<main::{lambda(int)#7}, async::threadpool_scheduler&> async::local_spawn<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(async::threadpool_scheduler, async::threadpool_scheduler&)
  0.00      0.00     0.00        4     0.00     0.00  async::task<void>::task(async::task<void>&&)
  0.00      0.00     0.00        4     0.00     0.00  async::detail::basic_task<void>::basic_task(async::detail::basic_task<void>&&)
  0.00      0.00     0.00        4     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, void>::destroy_func()
  0.00      0.00     0.00        4     0.00     0.00  _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS3_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEEvE9init_funcIJSI_EEEvDpOT_
  0.00      0.00     0.00        4     0.00     0.00  async::detail::task_result<int>::wait_and_throw()
  0.00      0.00     0.00        4     0.00     0.00  async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&&)
  0.00      0.00     0.00        4     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::release()
  0.00      0.00     0.00        4     0.00     0.00  _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEC1ISH_EEOSB_
  0.00      0.00     0.00        4     0.00     0.00  async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*)
  0.00      0.00     0.00        4     0.00     0.00  int async::detail::fake_void_to_void<int>(int&&)
  0.00      0.00     0.00        4     0.00     0.00  void async::detail::set_internal_task<async::task<void> >(async::task<void>&, async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00        4     0.00     0.00  async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&)
  0.00      0.00     0.00        4     0.00     0.00  void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)
  0.00      0.00     0.00        4     0.00     0.00  int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)
  0.00      0.00     0.00        4     0.00     0.00  _ZN5async6detail9func_baseIZNS0_21internal_parallel_forINS_20threadpool_schedulerENS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_vEC2ISG_EEOSA_
  0.00      0.00     0.00        4     0.00     0.00  _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEES4_EC1IJSI_EEEDpOT_
  0.00      0.00     0.00        4     0.00     0.00  async::int_range<int>::iterator::iterator(int)
  0.00      0.00     0.00        4     0.00     0.00  async::int_range<int>::iterator::operator+=(long)
  0.00      0.00     0.00        4     0.00     0.00  int const& async::detail::default_map::operator()<int const&>(int const&) const
  0.00      0.00     0.00        4     0.00     0.00  async::int_range<int>::iterator::operator*() const
  0.00      0.00     0.00        4     0.00     0.00  std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::get() const
  0.00      0.00     0.00        4     0.00     0.00  std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr() const
  0.00      0.00     0.00        4     0.00     0.00  std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>::_M_head(std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false> const&)
  0.00      0.00     0.00        4     0.00     0.00  std::_Head_base<1ul, async::task<int>, false>::_M_head(std::_Head_base<1ul, async::task<int>, false>&)
  0.00      0.00     0.00        4     0.00     0.00  std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::release()
  0.00      0.00     0.00        4     0.00     0.00  std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::~unique_ptr()
  0.00      0.00     0.00        4     0.00     0.00  std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&)
  0.00      0.00     0.00        4     0.00     0.00  std::_Tuple_impl<1ul, async::task<int> >::_M_head(std::_Tuple_impl<1ul, async::task<int> >&)
  0.00      0.00     0.00        4     0.00     0.00  async::detail::continuation_vector::vector_data* const& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&)
  0.00      0.00     0.00        4     0.00     0.00  std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type const& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&)
  0.00      0.00     0.00        4     0.00     0.00  void std::advance<async::int_range<int>::iterator, unsigned long>(async::int_range<int>::iterator&, unsigned long)
  0.00      0.00     0.00        4     0.00     0.00  async::task<std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::task<std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > > >::type&)
  0.00      0.00     0.00        4     0.00     0.00  int&& std::forward<int&&>(std::remove_reference<int&&>::type&)
  0.00      0.00     0.00        4     0.00     0.00  void std::__advance<async::int_range<int>::iterator, long>(async::int_range<int>::iterator&, long, std::random_access_iterator_tag)
  0.00      0.00     0.00        4     0.00     0.00  main::{lambda(int)#7}::operator()(int) const
  0.00      0.00     0.00        3     0.00     0.00  async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::get()
  0.00      0.00     0.00        3     0.00     0.00  async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::wait()
  0.00      0.00     0.00        3     0.00     0.00  async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::~local_task()
  0.00      0.00     0.00        3     0.00     0.00  async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::get()
  0.00      0.00     0.00        3     0.00     0.00  async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::wait()
  0.00      0.00     0.00        3     0.00     0.00  _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_
  0.00      0.00     0.00        3     0.00     0.00  async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::~local_task()
  0.00      0.00     0.00        3     0.00     0.00  _ZN5async11local_spawnINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EENS_10local_taskISB_SD_EESC_OSD_
  0.00      0.00     0.00        3     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, void>::destroy_func()
  0.00      0.00     0.00        3     0.00     0.00  _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS3_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEvE9init_funcIJSL_EEEvDpOT_
  0.00      0.00     0.00        3     0.00     0.00  _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_Lb0EEC1ISK_EEOSB_
  0.00      0.00     0.00        3     0.00     0.00  async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*)
  0.00      0.00     0.00        3     0.00     0.00  async::detail::fake_void async::detail::invoke_fake_void<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>(main::{lambda(int)#7}&&)
  0.00      0.00     0.00        3     0.00     0.00  _ZN5async6detail16invoke_fake_voidIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEEDTclcl7declvalISB_EEEEOSB_
  0.00      0.00     0.00        3     0.00     0.00  async::detail::func_base<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>::get_func()
  0.00      0.00     0.00        3     0.00     0.00  async::detail::func_base<int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, void>::get_func()
  0.00      0.00     0.00        3     0.00     0.00  _ZN5async6detail9func_baseIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEC2ISK_EEOSB_
  0.00      0.00     0.00        3     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func()
  0.00      0.00     0.00        3     0.00     0.00  _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_iZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEiEC1IJSL_EEEDpOT_
  0.00      0.00     0.00        3     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, int>::~task_func()
  0.00      0.00     0.00        3     0.00     0.00  std::_Head_base<0ul, async::task<void>, false>::_M_head(std::_Head_base<0ul, async::task<void>, false>&)
  0.00      0.00     0.00        3     0.00     0.00  std::_Head_base<0ul, async::task<void>, false>::~_Head_base()
  0.00      0.00     0.00        3     0.00     0.00  std::_Head_base<1ul, async::task<int>, false>::~_Head_base()
  0.00      0.00     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_head(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&)
  0.00      0.00     0.00        3     0.00     0.00  std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::~_Tuple_impl()
  0.00      0.00     0.00        3     0.00     0.00  std::_Tuple_impl<1ul, async::task<int> >::~_Tuple_impl()
  0.00      0.00     0.00        3     0.00     0.00  std::tuple<async::task<void>, async::task<int> >::~tuple()
  0.00      0.00     0.00        3     0.00     0.00  std::remove_reference<std::tuple<async::task<void>, async::task<int> >&>::type&& std::move<std::tuple<async::task<void>, async::task<int> >&>(std::tuple<async::task<void>, async::task<int> >&)
  0.00      0.00     0.00        3     0.00     0.00  std::remove_reference<main::{lambda(int)#7}>::type&& std::move<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}&>(main::{lambda(int)#7}&&)
  0.00      0.00     0.00        3     0.00     0.00  _ZSt4moveIRZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EONSt16remove_referenceISB_E4typeEOSB_
  0.00      0.00     0.00        3     0.00     0.00  void std::advance<int const*, unsigned long>(int const*&, unsigned long)
  0.00      0.00     0.00        3     0.00     0.00  std::tuple<async::task<void>, async::task<int> >&& std::forward<std::tuple<async::task<void>, async::task<int> > >(std::remove_reference<std::tuple<async::task<void>, async::task<int> > >::type&)
  0.00      0.00     0.00        3     0.00     0.00  void std::__advance<int const*, long>(int const*&, long, std::random_access_iterator_tag)
  0.00      0.00     0.00        3     0.00     0.00  void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}::operator()() const
  0.00      0.00     0.00        3     0.00     0.00  int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}::operator()() const
  0.00      0.00     0.00        2     0.00     0.00  async::task_run_handle::run()
  0.00      0.00     0.00        2     0.00     0.00  async::inline_scheduler()
  0.00      0.00     0.00        2     0.00     0.00  async::task<std::tuple<async::task<void>, async::task<int> > >::~task()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::~basic_task()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*)
  0.00      0.00     0.00        2     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::operator=(decltype(nullptr))
  0.00      0.00     0.00        2     0.00     0.00  void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00        2     0.00     0.00  async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::remove_ref(unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  async::detail::auto_grain_size(unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  async::task<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&)
  0.00      0.00     0.00        2     0.00     0.00  void async::detail::set_internal_task<async::task<int> >(async::task<int>&, async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00        2     0.00     0.00  async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::inline_scheduler_impl::schedule(async::task_run_handle)
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_base<main::{lambda(int)#3}, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_base<main::{lambda()#2}, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  async::detail::func_base<main::{lambda()#1}, void>::get_func()
  0.00      0.00     0.00        2     0.00     0.00  void async::detail::task_base::add_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00        2     0.00     0.00  void async::detail::task_base::add_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00        2     0.00     0.00  void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&)
  0.00      0.00     0.00        2     0.00     0.00  void async::detail::task_base::run_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>&&)
  0.00      0.00     0.00        2     0.00     0.00  async::range<int const*>::end() const
  0.00      0.00     0.00        2     0.00     0.00  async::range<int const*>::begin() const
  0.00      0.00     0.00        2     0.00     0.00  async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::operator->() const
  0.00      0.00     0.00        2     0.00     0.00  async::int_range<int>::end() const
  0.00      0.00     0.00        2     0.00     0.00  async::int_range<int>::begin() const
  0.00      0.00     0.00        2     0.00     0.00  std::initializer_list<int>::begin() const
  0.00      0.00     0.00        2     0.00     0.00  std::_Head_base<0ul, async::task<void>, false>::_Head_base<async::task<void> >(async::task<void>&&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Head_base<1ul, async::task<int>, false>::_Head_base<async::task<int> >(async::task<int>&&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_tail(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl(std::_Tuple_impl<1ul, async::task<int> >&&)
  0.00      0.00     0.00        2     0.00     0.00  std::tuple<async::task<void>, async::task<int> >::tuple(std::tuple<async::task<void>, async::task<int> >&&)
  0.00      0.00     0.00        2     0.00     0.00  async::threadpool_scheduler* std::__addressof<async::threadpool_scheduler>(async::threadpool_scheduler&)
  0.00      0.00     0.00        2     0.00     0.00  async::detail::inline_scheduler_impl* std::__addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&)
  0.00      0.00     0.00        2     0.00     0.00  async::task<int>& std::__get_helper<1ul, async::task<int>>(std::_Tuple_impl<1ul, async::task<int>>&)
  0.00      0.00     0.00        2     0.00     0.00  decltype (({parm#1}.end)()) std::end<async::range<int const*> >(async::range<int const*>&)
  0.00      0.00     0.00        2     0.00     0.00  decltype (({parm#1}.end)()) std::end<async::int_range<int> >(async::int_range<int>&)
  0.00      0.00     0.00        2     0.00     0.00  std::tuple_element<1ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<1ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&)
  0.00      0.00     0.00        2     0.00     0.00  std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::task<std::tuple<async::task<void>, async::task<int> > >&>(async::task<std::tuple<async::task<void>, async::task<int> > >&)
  0.00      0.00     0.00        2     0.00     0.00  std::remove_reference<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>::type&& std::move<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&)
  0.00      0.00     0.00        2     0.00     0.00  std::remove_reference<std::_Tuple_impl<1ul, async::task<int> >&>::type&& std::move<std::_Tuple_impl<1ul, async::task<int> >&>(std::_Tuple_impl<1ul, async::task<int> >&)
  0.00      0.00     0.00        2     0.00     0.00  decltype (({parm#1}.begin)()) std::begin<async::range<int const*> >(async::range<int const*>&)
  0.00      0.00     0.00        2     0.00     0.00  decltype (({parm#1}.begin)()) std::begin<async::int_range<int> >(async::int_range<int>&)
  0.00      0.00     0.00        2     0.00     0.00  async::task<int>& std::forward<async::task<int>&>(std::remove_reference<async::task<int>&>::type&)
  0.00      0.00     0.00        2     0.00     0.00  async::range<int const*>& std::forward<async::range<int const*>&>(std::remove_reference<async::range<int const*>&>::type&)
  0.00      0.00     0.00        2     0.00     0.00  async::int_range<int>& std::forward<async::int_range<int>&>(std::remove_reference<async::int_range<int>&>::type&)
  0.00      0.00     0.00        2     0.00     0.00  async::threadpool_scheduler* std::addressof<async::threadpool_scheduler>(async::threadpool_scheduler&)
  0.00      0.00     0.00        2     0.00     0.00  async::detail::inline_scheduler_impl* std::addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&)
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  async::event_task<std::tuple<async::task<void>, async::task<int> > >::event_task()
  0.00      0.00     0.00        1     0.00     0.00  async::event_task<std::tuple<async::task<void>, async::task<int> > >::~event_task()
  0.00      0.00     0.00        1     0.00     0.00  async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::get()
  0.00      0.00     0.00        1     0.00     0.00  async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::wait()
  0.00      0.00     0.00        1     0.00     0.00  _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_
  0.00      0.00     0.00        1     0.00     0.00  async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::~local_task()
  0.00      0.00     0.00        1     0.00     0.00  async::range<int const*> async::make_range<int const*>(int const*, int const*)
  0.00      0.00     0.00        1     0.00     0.00  async::local_task<main::{lambda()#6}&&, async::threadpool_scheduler> async::local_spawn<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>, async::threadpool_scheduler&&)
  0.00      0.00     0.00        1     0.00     0.00  void async::parallel_for<async::threadpool_scheduler, async::int_range<int>&, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::int_range<int>&, main::{lambda(int)#7} const&)
  0.00      0.00     0.00        1     0.00     0.00  void async::parallel_for<async::int_range<int>, main::{lambda(int)#7}>(async::int_range<int>&&, main::{lambda(int)#7} const&)
  0.00      0.00     0.00        1     0.00     0.00  std::enable_if<!async::detail::is_partitioner<std::decay<async::range<int const*>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> >::type async::to_partitioner<async::range<int const*>&>(async::range<int const*>&)
  0.00      0.00     0.00        1     0.00     0.00  std::enable_if<!async::detail::is_partitioner<std::decay<async::int_range<int>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> >::type async::to_partitioner<async::int_range<int>&>(async::int_range<int>&)
  0.00      0.00     0.00        1     0.00     0.00  void async::parallel_invoke<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#5}&&, main::{lambda()#6}&&)
  0.00      0.00     0.00        1     0.00     0.00  std::enable_if<async::detail::is_scheduler<async::threadpool_scheduler>::value, void>::type async::parallel_invoke<async::threadpool_scheduler, main::{lambda()#5}, main::{lambda()#6}>(async::detail&, main::{lambda()#5}&&, main::{lambda()#6}&&)
  0.00      0.00     0.00        1     0.00     0.00  int async::parallel_reduce<async::threadpool_scheduler, async::range<int const*>&, int, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&)
  0.00      0.00     0.00        1     0.00     0.00  int async::parallel_reduce<async::range<int const*>, int, main::{lambda(int, int)#8}>(async::range<int const*>&&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&)
  0.00      0.00     0.00        1     0.00     0.00  int async::parallel_reduce<int, int, main::{lambda(int, int)#8}>(std::initializer_list<int>, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> async::auto_partitioner<async::range<int const*>&>(async::range<int const*>&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> async::auto_partitioner<async::int_range<int>&>(async::int_range<int>&)
  0.00      0.00     0.00        1     0.00     0.00  int async::parallel_map_reduce<async::threadpool_scheduler, async::range<int const*>&, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::threadpool_scheduler&, async::detail::continuation_traits&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::detail::continuation_traits&&)
  0.00      0.00     0.00        1     0.00     0.00  async::task<std::tuple<async::task<void>, async::task<int> > >::task(async::task<std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::task<std::tuple<async::task<void>, async::task<int> > >::task()
  0.00      0.00     0.00        1     0.00     0.00  async::task<int>::get()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<async::threadpool_scheduler, main::{lambda(int)#3}>(async::threadpool_scheduler&, async::detail::continuation_traits&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<int>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<main::{lambda(int)#3}>(async::detail::continuation_traits&&)
  0.00      0.00     0.00        1     0.00     0.00  async::task<int>::operator=(async::task<int>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::task<void>::get()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<void>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::task<void>::operator=(async::task<void>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::range<int const*>::range(int const*, int const*)
  0.00      0.00     0.00        1     0.00     0.00  async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&)
  0.00      0.00     0.00        1     0.00     0.00  async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&)
  0.00      0.00     0.00        1     0.00     0.00  decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#2}>)())) async::spawn<main::{lambda()#2}>(main::{lambda()#2}&&)
  0.00      0.00     0.00        1     0.00     0.00  decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#1}>)())) async::spawn<main::{lambda()#1}>(main::{lambda()#1}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task(async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_task<int>::operator=(async::detail::basic_task<int>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_task<void>::operator=(async::detail::basic_task<void>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::basic_event()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::~basic_event()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::destroy_func()
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::init_func<{lambda()#1}>({lambda()#1}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, void>::destroy_func()
  0.00      0.00     0.00        1     0.00     0.00  _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS3_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEEvE9init_funcIJSJ_EEEvDpOT_
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::destroy_func()
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::init_func<{lambda()#2}>({lambda()#2}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func()
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func()
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::destroy_func()
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::destroy_func()
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::destroy(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::task_result()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::~task_result()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base> const&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::ref_count_base(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::root_exec_func<{lambda()#1}>({lambda()#1}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::~root_exec_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::operator()(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEC1ISI_EEOSD_
  0.00      0.00     0.00        1     0.00     0.00  async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>::operator()(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::root_exec_func<{lambda()#2}>({lambda()#2}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::~root_exec_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::operator()(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::when_all_state(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::~when_all_state()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::do_delete(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)
  0.00      0.00     0.00        1     0.00     0.00  decltype (((declval<main::{lambda()#2}>)())()) async::detail::invoke_fake_void<main::{lambda()#2}, void>(main::{lambda()#2}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::fake_void async::detail::invoke_fake_void<main::{lambda()#1}, void>(main::{lambda()#1}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}>)())((declval<void>)()))>::type)
  0.00      0.00     0.00        1     0.00     0.00  decltype (((declval<async::detail::void_to_fake_void>)())()) async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}>)())((declval<void>)()))>::type)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::fake_void async::detail::invoke_fake_void<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>(main::{lambda()#6}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_task<int>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<int> >(async::detail::basic_task<int> const&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_task<void>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<void> >(async::detail::basic_task<void> const&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > >(async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > const&)
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::set_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > >&, async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&)
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&)
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::when_all_variadic<2ul, std::tuple<async::task<void>, async::task<int> > >(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*)
  0.00      0.00     0.00        1     0.00     0.00  std::tuple<async::task<void>, async::task<int> >&& async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::get_result<std::tuple<async::task<void>, async::task<int> > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&)
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::set_result<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::task_result_holder()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::~task_result_holder()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::~continuation_exec_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::~continuation_exec_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::parallel_invoke_internal<0ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::parallel_invoke_internal<1ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::get_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::get_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::func_base<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::~func_base()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<main::{lambda(int)#3}, void>::func_base<{lambda(int)#3}>({lambda(int)#3}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<main::{lambda(int)#3}, void>::~func_base()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<main::{lambda()#2}, void>::func_base<{lambda()#2}>({lambda()#2}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<main::{lambda()#2}, void>::~func_base()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<main::{lambda()#1}, void>::func_base<{lambda()#1}>({lambda()#1}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<main::{lambda()#1}, void>::~func_base()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::func_base<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>::get_func()
  0.00      0.00     0.00        1     0.00     0.00  _ZN5async6detail9func_baseIZNS0_24parallel_invoke_internalILm0ELm2EE3runINS_20threadpool_schedulerESt5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_vEC2ISH_EEOSC_
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::destroy(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::task_func<{lambda()#1}>({lambda()#1}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::~task_func()
  0.00      0.00     0.00        1     0.00     0.00  _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEES4_EC1IJSJ_EEEDpOT_
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::destroy(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::task_func<{lambda()#2}>({lambda()#2}&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::~task_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::destroy(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void> >)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::task_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::~task_func()
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::destroy(async::detail::task_base*)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int> >)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::task_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::~task_func()
  0.00      0.00     0.00        1     0.00     0.00  async::int_range<std::common_type<int, int>::type> async::irange<int, int>(int, int)
  0.00      0.00     0.00        1     0.00     0.00  async::task<std::tuple<std::decay<async::task<void>&>::type, std::decay<async::task<int>&>::type> > async::when_all<async::task<void>&, async::task<int>&>(async::task<void>&, async::task<int>&)
  0.00      0.00     0.00        1     0.00     0.00  async::int_range<int>::int_range(int, int)
  0.00      0.00     0.00        1     0.00     0.00  async::event_task<std::tuple<async::task<void>, async::task<int> > >::set(std::tuple<async::task<void>, async::task<int> >&&) const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_task<int>::get_internal() const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::basic_task<void>::get_internal() const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const
  0.00      0.00     0.00        1     0.00     0.00  bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<void>) const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<int>) const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::task_base::ready() const
  0.00      0.00     0.00        1     0.00     0.00  std::initializer_list<int>::end() const
  0.00      0.00     0.00        1     0.00     0.00  std::initializer_list<int>::size() const
  0.00      0.00     0.00        1     0.00     0.00  std::_Head_base<0ul, async::task<void>, false>::_Head_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Head_base<0ul, main::{lambda()#5}&&, false>::_M_head(main::{lambda()#5}&& const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Head_base<0ul, main::{lambda()#5}&&, false>::_Head_base<{lambda()#5}>({lambda()#5}&&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Head_base<1ul, async::task<int>, false>::_Head_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Head_base<1ul, main::{lambda()#6}&&, false>::_M_head(main::{lambda()#6}&& const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Head_base<1ul, main::{lambda()#6}&&, false>::_Head_base<{lambda()#6}>({lambda()#6}&&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_M_head(main::{lambda()#6} const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#5}, main::{lambda()#5}&&, void>({lambda()#5}&&, main::{lambda()#5}&&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_M_head(main::{lambda()#6}&& const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#6}>({lambda()#6}&&)
  0.00      0.00     0.00        1     0.00     0.00  std::tuple<async::task<void>, async::task<int> >::tuple<async::task<void>, async::task<int>, true>()
  0.00      0.00     0.00        1     0.00     0.00  std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>::tuple<{lambda()#5}, main::{lambda()#5}&&, true>({lambda()#5}&&, main::{lambda()#5}&&)
  0.00      0.00     0.00        1     0.00     0.00  std::atomic<async::detail::task_state>::compare_exchange_strong(async::detail::task_state&, async::detail::task_state, std::memory_order, std::memory_order)
  0.00      0.00     0.00        1     0.00     0.00  async::task<void>& std::__get_helper<0ul, async::task<void>, async::task<int> >(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&)
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda()#5}&& const& std::__get_helper<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(std::_Tuple_impl<0ul, main::{lambda()#6}, main::{lambda()#6}&&> const&)
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda()#6}&& const& std::__get_helper<1ul, main::{lambda()#6}&&>(std::_Tuple_impl<1ul, main::{lambda()#6}&&> const&)
  0.00      0.00     0.00        1     0.00     0.00  std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> std::forward_as_tuple<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#6})
  0.00      0.00     0.00        1     0.00     0.00  std::tuple_element<0ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<0ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&)
  0.00      0.00     0.00        1     0.00     0.00  std::tuple_element<0ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&)
  0.00      0.00     0.00        1     0.00     0.00  std::tuple_element<1ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<1ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&>::type&& std::move<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&>(std::remove_reference&&)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<main::{lambda(int)#3}&>::type&& std::move<main::{lambda(int)#3}&>(std::remove_reference&&)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<main::{lambda()#6}&&>::type&& std::move<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}&>(main::{lambda()#6}&&)
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda()#5}&& std::forward<main::{lambda()#5}&&>(std::remove_reference<main::{lambda()#5}&&>::type&)
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda()#6}&& std::forward<main::{lambda()#6}&&>(std::remove_reference<main::{lambda()#6}&&>::type&)
  0.00      0.00     0.00        1     0.00     0.00  async::task<void>& std::forward<async::task<void>&>(std::remove_reference<async::task<void>&>::type&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}&& std::forward<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}&&, async::task<void>&&)::{lambda()#1}>(std::remove_reference<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}>::type&)
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}&& std::forward<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}&&, async::task<int>&&)::{lambda()#1}>(std::remove_reference<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}>::type&)
  0.00      0.00     0.00        1     0.00     0.00  _ZSt7forwardIZN5async6detail16invoke_fake_voidIZ4mainEUlSt5tupleIJNS0_4taskIvEENS4_IiEEEEE2_S7_EENS1_17void_to_fake_voidIDTclcl7declvalIT_EEcl7declvalIT0_EEEEE4typeEOSA_OSB_EUlvE_ESF_RNSt16remove_referenceISA_E4typeE
  0.00      0.00     0.00        1     0.00     0.00  _ZSt7forwardIZN5async6detail16invoke_fake_voidIZ4mainEUliE1_iEENS1_17void_to_fake_voidIDTclcl7declvalIT_EEcl7declvalIT0_EEEEE4typeEOS5_OS6_EUlvE_ESA_RNSt16remove_referenceIS5_E4typeE
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}::operator()(std::tuple<async::task<void>, async::task<int> >) const
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda(int)#3}::operator()(int) const
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda()#2}::operator()() const
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda()#5}::operator()() const
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda()#6}::operator()() const
  0.00      0.00     0.00        1     0.00     0.00  main::{lambda()#1}::operator()() const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}::operator()() const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}::operator()() const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}::operator()() const
  0.00      0.00     0.00        1     0.00     0.00  async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}::operator()() const
  0.00      0.00     0.00        1     0.00     0.00  void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}::operator()() const

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
[1]      0.0    0.00    0.00      99+87      <cycle 1 as a whole> [1]
                0.00    0.00     101             async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00      14             async::task<void>::~task() <cycle 1> [52]
                0.00    0.00      14             async::detail::basic_task<void>::~basic_task() <cycle 1> [53]
                0.00    0.00      11             async::task<int>::~task() <cycle 1> [68]
                0.00    0.00      11             async::detail::basic_task<int>::~basic_task() <cycle 1> [69]
                0.00    0.00      10             async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::remove_ref(unsigned long) <cycle 1> [76]
                0.00    0.00       7             async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
                0.00    0.00       3             std::tuple<async::task<void>, async::task<int> >::~tuple() <cycle 1> [207]
                0.00    0.00       3             std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::~_Tuple_impl() <cycle 1> [205]
                0.00    0.00       3             std::_Tuple_impl<1ul, async::task<int> >::~_Tuple_impl() <cycle 1> [206]
                0.00    0.00       3             std::_Head_base<1ul, async::task<int>, false>::~_Head_base() <cycle 1> [203]
                0.00    0.00       3             std::_Head_base<0ul, async::task<void>, false>::~_Head_base() <cycle 1> [202]
                0.00    0.00       1             async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::destroy(async::detail::task_base*) <cycle 1> [333]
                0.00    0.00       1             async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::~task_result() <cycle 1> [335]
                0.00    0.00       1             async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::~task_result_holder() <cycle 1> [371]
-----------------------------------------------
[2]      0.0    0.00    0.00      16+74      <cycle 2 as a whole> [2]
                0.00    0.00      15             async::detail::task_base::finish() <cycle 2> [45]
                0.00    0.00      15             async::detail::task_base::run_continuations() <cycle 2> [43]
                0.00    0.00      15             void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
                0.00    0.00       9             async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
                0.00    0.00       6             async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::~ref_count_ptr() <cycle 2> [126]
                0.00    0.00       2             async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::remove_ref(unsigned long) <cycle 2> [230]
                0.00    0.00       2             void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&) <cycle 2> [243]
                0.00    0.00       2             void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [229]
                0.00    0.00       2             async::detail::inline_scheduler_impl::schedule(async::task_run_handle) <cycle 2> [236]
                0.00    0.00       2             async::task_run_handle::run() <cycle 2> [216]
                0.00    0.00       2             async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [234]
                0.00    0.00       2             async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [235]
                0.00    0.00       1             async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::do_delete(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) <cycle 2> [349]
                0.00    0.00       1             async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::~when_all_state() <cycle 2> [348]
                0.00    0.00       1             async::event_task<std::tuple<async::task<void>, async::task<int> > >::set(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [436]
                0.00    0.00       1             bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
                0.00    0.00       1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [414]
                0.00    0.00       1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [412]
                0.00    0.00       1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
                0.00    0.00       1             async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [327]
                0.00    0.00       1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [380]
                0.00    0.00       1             async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() <cycle 2> [393]
                0.00    0.00       1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [407]
                0.00    0.00       1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
                0.00    0.00       1             async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [325]
                0.00    0.00       1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [377]
                0.00    0.00       1             async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() <cycle 2> [396]
                0.00    0.00       1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [409]
-----------------------------------------------
                0.00    0.00      28/8285        async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00    8257/8285        async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::is_unique_ref(std::memory_order) [11]
[10]     0.0    0.00    0.00    8285         std::operator&(std::memory_order, std::__memory_order_modifier) [10]
-----------------------------------------------
                0.00    0.00       1/8258        async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::~local_task() [280]
                0.00    0.00     861/8258        async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::~local_task() [187]
                0.00    0.00    7396/8258        async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::~local_task() [183]
[11]     0.0    0.00    0.00    8258         async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::is_unique_ref(std::memory_order) [11]
                0.00    0.00    8257/8285        std::operator&(std::memory_order, std::__memory_order_modifier) [10]
-----------------------------------------------
                0.00    0.00    8250/8250        std::this_thread::yield() [13]
[12]     0.0    0.00    0.00    8250         __gthread_yield() [12]
-----------------------------------------------
                0.00    0.00     858/8250        async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::~local_task() [187]
                0.00    0.00    7392/8250        async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::~local_task() [183]
[13]     0.0    0.00    0.00    8250         std::this_thread::yield() [13]
                0.00    0.00    8250/8250        __gthread_yield() [12]
-----------------------------------------------
                                  11             async::detail::basic_task<int>::~basic_task() <cycle 1> [69]
                                  14             async::detail::basic_task<void>::~basic_task() <cycle 1> [53]
                0.00    0.00       1/99          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_ [279]
                0.00    0.00       1/99          async::task<int>::get() [299]
                0.00    0.00       1/99          async::task<void>::get() [304]
                0.00    0.00       1/99          async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task() [316]
                0.00    0.00       1/99          async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::~basic_event() [318]
                0.00    0.00       2/99          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       2/99          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       2/99          async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       2/99          async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       2/99          async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::~basic_task() [219]
                0.00    0.00       2/99          async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       2/99          void async::detail::task_base::run_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>&&) [244]
                0.00    0.00       2/99          async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
                0.00    0.00       2/99          void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&) <cycle 2> [243]
                0.00    0.00       2/99          void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [229]
                0.00    0.00       3/99          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_ [186]
                0.00    0.00       4/99          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_ [144]
                0.00    0.00       9/99          async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
                0.00    0.00       9/99          void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
                0.00    0.00      12/99          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
                0.00    0.00      14/99          async::task_run_handle::~task_run_handle() [51]
[14]     0.0    0.00    0.00     101         async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                                   8             async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::remove_ref(unsigned long) <cycle 1> [76]
-----------------------------------------------
                0.00    0.00      30/84          std::atomic<async::detail::compressed_ptr<3ul, true> >::store(async::detail::compressed_ptr<3ul, true>, std::memory_order) [49]
                0.00    0.00      54/84          std::atomic<async::detail::compressed_ptr<3ul, true> >::compare_exchange_weak(async::detail::compressed_ptr<3ul, true>&, async::detail::compressed_ptr<3ul, true>, std::memory_order, std::memory_order) [35]
[15]     0.0    0.00    0.00      84         async::detail::compressed_ptr<3ul, true>* std::__addressof<async::detail::compressed_ptr<3ul, true> >(async::detail::compressed_ptr<3ul, true>&) [15]
-----------------------------------------------
                0.00    0.00      78/78          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
[16]     0.0    0.00    0.00      78         async::detail::task_state const* std::__addressof<async::detail::task_state const>(async::detail::task_state const&) [16]
-----------------------------------------------
                0.00    0.00       8/64          async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
                0.00    0.00      28/64          async::detail::continuation_vector::~continuation_vector() [56]
                0.00    0.00      28/64          void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
[17]     0.0    0.00    0.00      64         async::detail::compressed_ptr<3ul, true>::get_flags() const [17]
-----------------------------------------------
                0.00    0.00       1/62          async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [419]
                0.00    0.00       1/62          async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::~task_func() [424]
                0.00    0.00       1/62          async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [421]
                0.00    0.00       1/62          async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::~task_func() [432]
                0.00    0.00       1/62          async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
                0.00    0.00       1/62          async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::~task_func() [428]
                0.00    0.00       1/62          async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
                0.00    0.00       1/62          async::detail::task_base::ready() const [446]
                0.00    0.00       1/62          async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::~task_result_holder() <cycle 1> [371]
                0.00    0.00       1/62          async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::~task_result() <cycle 1> [335]
                0.00    0.00       1/62          async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [416]
                0.00    0.00       1/62          async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [411]
                0.00    0.00       2/62          void async::detail::task_base::add_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [242]
                0.00    0.00       2/62          void async::detail::task_base::add_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) [241]
                0.00    0.00       3/62          async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [198]
                0.00    0.00       3/62          async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, int>::~task_func() [200]
                0.00    0.00       5/62          async::detail::task_result<int>::~task_result() [138]
                0.00    0.00       5/62          async::detail::task_result_holder<int>::~task_result_holder() [142]
                0.00    0.00       8/62          async::detail::task_result<async::detail::fake_void>::~task_result() [88]
                0.00    0.00      22/62          async::detail::task_base::wait() [44]
[18]     0.0    0.00    0.00      62         std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00      78/78          async::detail::task_state const* std::__addressof<async::detail::task_state const>(async::detail::task_state const&) [16]
-----------------------------------------------
                0.00    0.00       1/58          async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int> >) [430]
                0.00    0.00       1/58          async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void> >) [426]
                0.00    0.00       1/58          async::task<int>::get() [299]
                0.00    0.00       1/58          async::task<void>::get() [304]
                0.00    0.00       1/58          void async::detail::set_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > >&, async::detail::ref_count_ptr<async::detail::task_base>) [364]
                0.00    0.00       1/58          async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [414]
                0.00    0.00       1/58          async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [409]
                0.00    0.00       2/58          void async::detail::set_internal_task<async::task<int> >(async::task<int>&, async::detail::ref_count_ptr<async::detail::task_base>) [233]
                0.00    0.00       2/58          void async::detail::task_base::add_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [242]
                0.00    0.00       2/58          void async::detail::task_base::run_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>&&) [244]
                0.00    0.00       2/58          void async::detail::task_base::add_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) [241]
                0.00    0.00       2/58          void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&) <cycle 2> [243]
                0.00    0.00       2/58          void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [229]
                0.00    0.00       4/58          void async::detail::set_internal_task<async::task<void> >(async::task<void>&, async::detail::ref_count_ptr<async::detail::task_base>) [156]
                0.00    0.00       9/58          async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
                0.00    0.00      12/58          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
                0.00    0.00      14/58          async::task_run_handle::task_run_handle(async::detail::ref_count_ptr<async::detail::task_base>) [50]
[19]     0.0    0.00    0.00      58         std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
-----------------------------------------------
                0.00    0.00       1/53          async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task(async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >&&) [312]
                0.00    0.00       1/53          async::task<int>::get() [299]
                0.00    0.00       1/53          async::task<void>::get() [304]
                0.00    0.00       2/53          void async::detail::task_base::run_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>&&) [244]
                0.00    0.00       2/53          void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&) <cycle 2> [243]
                0.00    0.00       2/53          void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [229]
                0.00    0.00       4/53          async::detail::basic_task<void>::basic_task(async::detail::basic_task<void>&&) [147]
                0.00    0.00       5/53          async::detail::basic_task<int>::basic_task(async::detail::basic_task<int>&&) [135]
                0.00    0.00       9/53          async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
                0.00    0.00      12/53          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
                0.00    0.00      14/53          async::task_run_handle::task_run_handle(async::detail::ref_count_ptr<async::detail::task_base>) [50]
[20]     0.0    0.00    0.00      53         async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
-----------------------------------------------
                0.00    0.00       1/39          async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       1/39          async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       1/39          async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int> >) [430]
                0.00    0.00       1/39          async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void> >) [426]
                0.00    0.00       1/39          async::task<int>::get() [299]
                0.00    0.00       1/39          async::task<void>::get() [304]
                0.00    0.00       1/39          async::detail::basic_task<int>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<int> >(async::detail::basic_task<int> const&) [361]
                0.00    0.00       1/39          async::detail::basic_task<void>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<void> >(async::detail::basic_task<void> const&) [362]
                0.00    0.00       1/39          async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/39          async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > >(async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > const&) [363]
                0.00    0.00       1/39          async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
                0.00    0.00       1/39          async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [414]
                0.00    0.00       1/39          async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [409]
                0.00    0.00       2/39          async::task_run_handle::run() <cycle 2> [216]
                0.00    0.00       2/39          async::task<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&) [232]
                0.00    0.00       4/39          async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
                0.00    0.00       7/39          async::task<int>::internal_task_type* async::detail::get_internal_task<async::task<int> >(async::task<int> const&) [109]
                0.00    0.00      11/39          async::task<void>::internal_task_type* async::detail::get_internal_task<async::task<void> >(async::task<void> const&) [70]
[21]     0.0    0.00    0.00      39         async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
-----------------------------------------------
                0.00    0.00       3/33          std::atomic<async::detail::task_state>::compare_exchange_strong(async::detail::task_state&, async::detail::task_state, std::memory_order, std::memory_order) [463]
                0.00    0.00      30/33          std::atomic<async::detail::task_state>::store(async::detail::task_state, std::memory_order) [47]
[22]     0.0    0.00    0.00      33         async::detail::task_state* std::__addressof<async::detail::task_state>(async::detail::task_state&) [22]
-----------------------------------------------
                0.00    0.00       4/32          async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
                0.00    0.00      14/32          async::detail::continuation_vector::~continuation_vector() [56]
                0.00    0.00      14/32          void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
[23]     0.0    0.00    0.00      32         std::atomic<async::detail::compressed_ptr<3ul, true> >::load(std::memory_order) const [23]
                0.00    0.00      32/32          async::detail::compressed_ptr<3ul, true> const* std::__addressof<async::detail::compressed_ptr<3ul, true> const>(async::detail::compressed_ptr<3ul, true> const&) [24]
-----------------------------------------------
                0.00    0.00      32/32          std::atomic<async::detail::compressed_ptr<3ul, true> >::load(std::memory_order) const [23]
[24]     0.0    0.00    0.00      32         async::detail::compressed_ptr<3ul, true> const* std::__addressof<async::detail::compressed_ptr<3ul, true> const>(async::detail::compressed_ptr<3ul, true> const&) [24]
-----------------------------------------------
                0.00    0.00       7/31          std::this_thread::get_id() [114]
                0.00    0.00      12/31          __gthread_mutex_lock(pthread_mutex_t*) [60]
                0.00    0.00      12/31          __gthread_mutex_unlock(pthread_mutex_t*) [61]
[25]     0.0    0.00    0.00      31         __gthread_active_p() [25]
-----------------------------------------------
                0.00    0.00       1/30          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_ [279]
                0.00    0.00       1/30          async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::basic_event() [317]
                0.00    0.00       2/30          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       2/30          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       2/30          async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       2/30          async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       2/30          async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       2/30          async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
                0.00    0.00       3/30          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_ [186]
                0.00    0.00       4/30          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_ [144]
                0.00    0.00       9/30          void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
[26]     0.0    0.00    0.00      30         async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
-----------------------------------------------
                0.00    0.00       4/27          async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
                0.00    0.00      23/27          void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
[27]     0.0    0.00    0.00      27         async::detail::task_base* async::detail::compressed_ptr<3ul, true>::get_ptr<async::detail::task_base>() const [27]
-----------------------------------------------
                0.00    0.00       3/27          async::detail::fake_void async::detail::invoke_fake_void<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>(main::{lambda(int)#7}&&) [193]
                0.00    0.00       4/27          async::local_task<main::{lambda(int)#7}, async::threadpool_scheduler&> async::local_spawn<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(async::threadpool_scheduler, async::threadpool_scheduler&) [145]
                0.00    0.00       4/27          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_ [144]
                0.00    0.00       4/27          _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEES4_EC1IJSI_EEEDpOT_ [161]
                0.00    0.00       4/27          _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS3_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEEvE9init_funcIJSI_EEEvDpOT_ [149]
                0.00    0.00       4/27          _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEC1ISH_EEOSB_ [153]
                0.00    0.00       4/27          _ZN5async6detail9func_baseIZNS0_21internal_parallel_forINS_20threadpool_schedulerENS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_vEC2ISG_EEOSA_ [160]
[28]     0.0    0.00    0.00      27         main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&) [28]
-----------------------------------------------
                0.00    0.00       1/24          void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::init_func<{lambda()#1}>({lambda()#1}&&) [320]
                0.00    0.00       1/24          void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::init_func<{lambda()#2}>({lambda()#2}&&) [324]
                0.00    0.00       1/24          void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [332]
                0.00    0.00       1/24          void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [330]
                0.00    0.00       1/24          async::detail::func_base<main::{lambda()#1}, void>::func_base<{lambda()#1}>({lambda()#1}&&) [403]
                0.00    0.00       1/24          async::detail::func_base<main::{lambda()#2}, void>::func_base<{lambda()#2}>({lambda()#2}&&) [401]
                0.00    0.00       1/24          async::detail::func_base<main::{lambda(int)#3}, void>::func_base<{lambda(int)#3}>({lambda(int)#3}&&) [399]
                0.00    0.00       1/24          async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::func_base<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&) [397]
                0.00    0.00       1/24          _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS3_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEEvE9init_funcIJSJ_EEEvDpOT_ [322]
                0.00    0.00       1/24          void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [328]
                0.00    0.00       1/24          void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [326]
                0.00    0.00       1/24          void async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::set_result<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) [369]
                0.00    0.00       3/24          _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS3_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEvE9init_funcIJSL_EEEvDpOT_ [190]
                0.00    0.00       4/24          _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS3_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEEvE9init_funcIJSI_EEEvDpOT_ [149]
                0.00    0.00       5/24          void async::detail::task_result_holder<int>::set_result<int>(int&&) [140]
[29]     0.0    0.00    0.00      24         operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00       1/23          async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       1/23          async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       1/23          async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task() [316]
                0.00    0.00       1/23          async::detail::basic_task<int>::get_internal() const [438]
                0.00    0.00       1/23          async::detail::basic_task<void>::get_internal() const [441]
                0.00    0.00       1/23          async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::~basic_event() [318]
                0.00    0.00       1/23          async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/23          async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
                0.00    0.00       1/23          bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
                0.00    0.00      14/23          async::task_run_handle::~task_run_handle() [51]
[30]     0.0    0.00    0.00      23         async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
-----------------------------------------------
                0.00    0.00       1/21          async::detail::task_base::ready() const [446]
                0.00    0.00       2/21          void async::detail::task_base::add_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [242]
                0.00    0.00       2/21          void async::detail::task_base::add_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) [241]
                0.00    0.00      16/21          async::detail::task_base::wait() [44]
[31]     0.0    0.00    0.00      21         async::detail::is_finished(async::detail::task_state) [31]
-----------------------------------------------
                0.00    0.00       3/21          _ZN5async11local_spawnINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EENS_10local_taskISB_SD_EESC_OSD_ [188]
                0.00    0.00       3/21          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_ [186]
                0.00    0.00       3/21          _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_iZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEiEC1IJSL_EEEDpOT_ [199]
                0.00    0.00       3/21          _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS3_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEvE9init_funcIJSL_EEEvDpOT_ [190]
                0.00    0.00       3/21          _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_Lb0EEC1ISK_EEOSB_ [191]
                0.00    0.00       3/21          _ZN5async6detail16invoke_fake_voidIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEEDTclcl7declvalISB_EEEEOSB_ [194]
                0.00    0.00       3/21          _ZN5async6detail9func_baseIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEC2ISK_EEOSB_ [197]
[32]     0.0    0.00    0.00      21         _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE [32]
-----------------------------------------------
                0.00    0.00       4/19          async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
                0.00    0.00      15/19          async::detail::continuation_vector::continuation_vector() [42]
[33]     0.0    0.00    0.00      19         async::detail::compressed_ptr<3ul, true>::compressed_ptr(void*, unsigned long) [33]
-----------------------------------------------
                0.00    0.00       1/18          async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::basic_event() [317]
                0.00    0.00       1/18          async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::~basic_event() [318]
                0.00    0.00       2/18          async::task_run_handle::run() <cycle 2> [216]
                0.00    0.00       2/18          bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
                0.00    0.00       3/18          async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task() [316]
                0.00    0.00       9/18          async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
[34]     0.0    0.00    0.00      18         async::detail::ref_count_ptr<async::detail::task_base>::operator->() const [34]
-----------------------------------------------
                0.00    0.00       4/18          async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
                0.00    0.00      14/18          void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
[35]     0.0    0.00    0.00      18         std::atomic<async::detail::compressed_ptr<3ul, true> >::compare_exchange_weak(async::detail::compressed_ptr<3ul, true>&, async::detail::compressed_ptr<3ul, true>, std::memory_order, std::memory_order) [35]
                0.00    0.00      54/84          async::detail::compressed_ptr<3ul, true>* std::__addressof<async::detail::compressed_ptr<3ul, true> >(async::detail::compressed_ptr<3ul, true>&) [15]
-----------------------------------------------
                0.00    0.00       1/17          async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task() [313]
                0.00    0.00       6/17          async::detail::basic_task<int>::basic_task() [124]
                0.00    0.00      10/17          async::detail::basic_task<void>::basic_task() [75]
[36]     0.0    0.00    0.00      17         async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr() [36]
-----------------------------------------------
                0.00    0.00       8/17          async::detail::auto_partitioner_impl<int const*>::auto_partitioner_impl(int const*, int const*, unsigned long) [92]
                0.00    0.00       9/17          async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::auto_partitioner_impl(async::int_range<int>::iterator, async::int_range<int>::iterator, unsigned long) [91]
[37]     0.0    0.00    0.00      17         std::thread::id::id() [37]
-----------------------------------------------
                0.00    0.00      16/16          std::atomic<unsigned long>::atomic(unsigned long) [39]
[38]     0.0    0.00    0.00      16         std::__atomic_base<unsigned long>::__atomic_base(unsigned long) [38]
-----------------------------------------------
                0.00    0.00       1/16          async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::ref_count_base(unsigned long) [337]
                0.00    0.00      15/16          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::ref_count_base(unsigned long) [40]
[39]     0.0    0.00    0.00      16         std::atomic<unsigned long>::atomic(unsigned long) [39]
                0.00    0.00      16/16          std::__atomic_base<unsigned long>::__atomic_base(unsigned long) [38]
-----------------------------------------------
                0.00    0.00      15/15          async::detail::task_base::task_base() [46]
[40]     0.0    0.00    0.00      15         async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::ref_count_base(unsigned long) [40]
                0.00    0.00      15/16          std::atomic<unsigned long>::atomic(unsigned long) [39]
-----------------------------------------------
                                  15             async::detail::task_base::run_continuations() <cycle 2> [43]
[41]     0.0    0.00    0.00      15         void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
                0.00    0.00      28/64          async::detail::compressed_ptr<3ul, true>::get_flags() const [17]
                0.00    0.00      23/27          async::detail::task_base* async::detail::compressed_ptr<3ul, true>::get_ptr<async::detail::task_base>() const [27]
                0.00    0.00      14/32          std::atomic<async::detail::compressed_ptr<3ul, true> >::load(std::memory_order) const [23]
                0.00    0.00      14/14          async::detail::compressed_ptr<3ul, true>::set_flags(unsigned long) [54]
                0.00    0.00      14/18          std::atomic<async::detail::compressed_ptr<3ul, true> >::compare_exchange_weak(async::detail::compressed_ptr<3ul, true>&, async::detail::compressed_ptr<3ul, true>, std::memory_order, std::memory_order) [35]
                0.00    0.00       9/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       9/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                                   9             async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
-----------------------------------------------
                0.00    0.00      15/15          async::detail::task_base::task_base() [46]
[42]     0.0    0.00    0.00      15         async::detail::continuation_vector::continuation_vector() [42]
                0.00    0.00      15/19          async::detail::compressed_ptr<3ul, true>::compressed_ptr(void*, unsigned long) [33]
                0.00    0.00      15/15          std::atomic<async::detail::compressed_ptr<3ul, true> >::store(async::detail::compressed_ptr<3ul, true>, std::memory_order) [49]
-----------------------------------------------
                                  15             async::detail::task_base::finish() <cycle 2> [45]
[43]     0.0    0.00    0.00      15         async::detail::task_base::run_continuations() <cycle 2> [43]
                                  15             void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
-----------------------------------------------
                0.00    0.00       1/15          async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::wait() [278]
                0.00    0.00       3/15          async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::wait() [182]
                0.00    0.00       3/15          async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::wait() [185]
                0.00    0.00       4/15          async::detail::task_result<int>::wait_and_throw() [150]
                0.00    0.00       4/15          async::detail::task_result<async::detail::fake_void>::wait_and_throw() [136]
[44]     0.0    0.00    0.00      15         async::detail::task_base::wait() [44]
                0.00    0.00      22/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00      16/21          async::detail::is_finished(async::detail::task_state) [31]
-----------------------------------------------
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
                                   1             bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
                0.00    0.00       1/16          async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::operator()(async::detail::task_base*) [341]
                0.00    0.00       1/16          async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::operator()(async::detail::task_base*) [346]
                0.00    0.00       1/16          async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
                0.00    0.00       1/16          async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
                0.00    0.00       1/16          async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [343]
                0.00    0.00       3/16          async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [192]
                0.00    0.00       4/16          async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [154]
[45]     0.0    0.00    0.00      15         async::detail::task_base::finish() <cycle 2> [45]
                0.00    0.00      15/15          std::atomic<async::detail::task_state>::store(async::detail::task_state, std::memory_order) [47]
                                  15             async::detail::task_base::run_continuations() <cycle 2> [43]
-----------------------------------------------
                0.00    0.00       1/15          async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::task_result_holder() [370]
                0.00    0.00       5/15          async::detail::task_result_holder<int>::task_result_holder() [141]
                0.00    0.00       9/15          async::detail::task_result_holder<async::detail::fake_void>::task_result_holder() [82]
[46]     0.0    0.00    0.00      15         async::detail::task_base::task_base() [46]
                0.00    0.00      15/15          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::ref_count_base(unsigned long) [40]
                0.00    0.00      15/15          std::atomic<async::detail::task_state>::atomic(async::detail::task_state) [48]
                0.00    0.00      15/15          async::detail::continuation_vector::continuation_vector() [42]
-----------------------------------------------
                0.00    0.00      15/15          async::detail::task_base::finish() <cycle 2> [45]
[47]     0.0    0.00    0.00      15         std::atomic<async::detail::task_state>::store(async::detail::task_state, std::memory_order) [47]
                0.00    0.00      30/33          async::detail::task_state* std::__addressof<async::detail::task_state>(async::detail::task_state&) [22]
-----------------------------------------------
                0.00    0.00      15/15          async::detail::task_base::task_base() [46]
[48]     0.0    0.00    0.00      15         std::atomic<async::detail::task_state>::atomic(async::detail::task_state) [48]
-----------------------------------------------
                0.00    0.00      15/15          async::detail::continuation_vector::continuation_vector() [42]
[49]     0.0    0.00    0.00      15         std::atomic<async::detail::compressed_ptr<3ul, true> >::store(async::detail::compressed_ptr<3ul, true>, std::memory_order) [49]
                0.00    0.00      30/84          async::detail::compressed_ptr<3ul, true>* std::__addressof<async::detail::compressed_ptr<3ul, true> >(async::detail::compressed_ptr<3ul, true>&) [15]
-----------------------------------------------
                0.00    0.00       2/14          void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [229]
                0.00    0.00      12/14          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
[50]     0.0    0.00    0.00      14         async::task_run_handle::task_run_handle(async::detail::ref_count_ptr<async::detail::task_base>) [50]
                0.00    0.00      14/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
                0.00    0.00      14/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
-----------------------------------------------
                0.00    0.00       2/14          void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [229]
                0.00    0.00      12/14          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
[51]     0.0    0.00    0.00      14         async::task_run_handle::~task_run_handle() [51]
                0.00    0.00      14/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00      14/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                                   3             std::_Head_base<0ul, async::task<void>, false>::~_Head_base() <cycle 1> [202]
                0.00    0.00       1/99          async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::get() [277]
                0.00    0.00       1/99          void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
                0.00    0.00       1/99          void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
                0.00    0.00       1/99          async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [380]
                0.00    0.00       1/99          async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}::operator()() const [491]
                0.00    0.00       2/99          main [8]
                0.00    0.00       4/99          async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::get() [181]
[52]     0.0    0.00    0.00      14         async::task<void>::~task() <cycle 1> [52]
                                  14             async::detail::basic_task<void>::~basic_task() <cycle 1> [53]
-----------------------------------------------
                                  14             async::task<void>::~task() <cycle 1> [52]
[53]     0.0    0.00    0.00      14         async::detail::basic_task<void>::~basic_task() <cycle 1> [53]
                                  14             async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                0.00    0.00      14/14          void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
[54]     0.0    0.00    0.00      14         async::detail::compressed_ptr<3ul, true>::set_flags(unsigned long) [54]
-----------------------------------------------
                0.00    0.00       1/14          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       1/14          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       1/14          async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       1/14          async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       1/14          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_ [279]
                0.00    0.00       1/14          async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/14          async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
                0.00    0.00       3/14          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_ [186]
                0.00    0.00       4/14          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_ [144]
[55]     0.0    0.00    0.00      14         async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00      28/8285        std::operator&(std::memory_order, std::__memory_order_modifier) [10]
-----------------------------------------------
                0.00    0.00      14/14          async::detail::task_base::~task_base() [57]
[56]     0.0    0.00    0.00      14         async::detail::continuation_vector::~continuation_vector() [56]
                0.00    0.00      28/64          async::detail::compressed_ptr<3ul, true>::get_flags() const [17]
                0.00    0.00      14/32          std::atomic<async::detail::compressed_ptr<3ul, true> >::load(std::memory_order) const [23]
-----------------------------------------------
                0.00    0.00       1/14          async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::~task_result_holder() <cycle 1> [371]
                0.00    0.00       5/14          async::detail::task_result_holder<int>::~task_result_holder() [142]
                0.00    0.00       8/14          async::detail::task_result_holder<async::detail::fake_void>::~task_result_holder() [89]
[57]     0.0    0.00    0.00      14         async::detail::task_base::~task_base() [57]
                0.00    0.00      14/14          async::detail::continuation_vector::~continuation_vector() [56]
-----------------------------------------------
                0.00    0.00       4/13          void std::advance<async::int_range<int>::iterator, unsigned long>(async::int_range<int>::iterator&, unsigned long) [176]
                0.00    0.00       9/13          std::iterator_traits<async::int_range<int>::iterator>::difference_type std::distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator) [85]
[58]     0.0    0.00    0.00      13         std::iterator_traits<async::int_range<int>::iterator>::iterator_category std::__iterator_category<async::int_range<int>::iterator>(async::int_range<int>::iterator const&) [58]
-----------------------------------------------
                0.00    0.00       1/13          async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       1/13          async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::task_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [431]
                0.00    0.00       1/13          void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [332]
                0.00    0.00       1/13          async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [385]
                0.00    0.00       1/13          async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
                0.00    0.00       1/13          async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [410]
                0.00    0.00       1/13          void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [326]
                0.00    0.00       1/13          async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [376]
                0.00    0.00       1/13          async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}::operator()() const [492]
                0.00    0.00       2/13          std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl(std::_Tuple_impl<1ul, async::task<int> >&&) [255]
                0.00    0.00       2/13          std::_Head_base<1ul, async::task<int>, false>::_Head_base<async::task<int> >(async::task<int>&&) [252]
[59]     0.0    0.00    0.00      13         async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
-----------------------------------------------
                0.00    0.00      12/12          std::mutex::lock() [65]
[60]     0.0    0.00    0.00      12         __gthread_mutex_lock(pthread_mutex_t*) [60]
                0.00    0.00      12/31          __gthread_active_p() [25]
-----------------------------------------------
                0.00    0.00      12/12          std::mutex::unlock() [66]
[61]     0.0    0.00    0.00      12         __gthread_mutex_unlock(pthread_mutex_t*) [61]
                0.00    0.00      12/31          __gthread_active_p() [25]
-----------------------------------------------
                0.00    0.00       1/12          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       1/12          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       1/12          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_ [279]
                0.00    0.00       2/12          void async::detail::task_base::run_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>&&) [244]
                0.00    0.00       3/12          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_ [186]
                0.00    0.00       4/12          _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_ [144]
[62]     0.0    0.00    0.00      12         void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
                0.00    0.00      12/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00      12/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
                0.00    0.00      12/14          async::task_run_handle::task_run_handle(async::detail::ref_count_ptr<async::detail::task_base>) [50]
                0.00    0.00      12/14          async::task_run_handle::~task_run_handle() [51]
                0.00    0.00      12/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                0.00    0.00      12/12          void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[63]     0.0    0.00    0.00      12         async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::end() const [63]
-----------------------------------------------
                0.00    0.00      12/12          void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[64]     0.0    0.00    0.00      12         async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::begin() const [64]
-----------------------------------------------
                0.00    0.00      12/12          std::lock_guard<std::mutex>::lock_guard(std::mutex&) [562]
[65]     0.0    0.00    0.00      12         std::mutex::lock() [65]
                0.00    0.00      12/12          __gthread_mutex_lock(pthread_mutex_t*) [60]
-----------------------------------------------
                0.00    0.00      12/12          std::lock_guard<std::mutex>::~lock_guard() [563]
[66]     0.0    0.00    0.00      12         std::mutex::unlock() [66]
                0.00    0.00      12/12          __gthread_mutex_unlock(pthread_mutex_t*) [61]
-----------------------------------------------
                0.00    0.00       5/12          int&& async::detail::task_result_holder<int>::get_result<int>(async::task<int> const&) [139]
                0.00    0.00       7/12          int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[67]     0.0    0.00    0.00      12         std::remove_reference<int&>::type&& std::move<int&>(int&) [67]
-----------------------------------------------
                                   3             std::_Head_base<1ul, async::task<int>, false>::~_Head_base() <cycle 1> [203]
                0.00    0.00       1/99          async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [386]
                0.00    0.00       1/99          async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [377]
                0.00    0.00       1/99          async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}::operator()() const [492]
                0.00    0.00       2/99          main [8]
                0.00    0.00       3/99          async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::get() [184]
[68]     0.0    0.00    0.00      11         async::task<int>::~task() <cycle 1> [68]
                                  11             async::detail::basic_task<int>::~basic_task() <cycle 1> [69]
-----------------------------------------------
                                  11             async::task<int>::~task() <cycle 1> [68]
[69]     0.0    0.00    0.00      11         async::detail::basic_task<int>::~basic_task() <cycle 1> [69]
                                  11             async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                0.00    0.00       2/11          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       3/11          async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       3/11          async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       3/11          async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
[70]     0.0    0.00    0.00      11         async::task<void>::internal_task_type* async::detail::get_internal_task<async::task<void> >(async::task<void> const&) [70]
                0.00    0.00      11/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
-----------------------------------------------
                0.00    0.00      11/11          int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[71]     0.0    0.00    0.00      11         async::detail::auto_partitioner_impl<int const*>::end() const [71]
-----------------------------------------------
                0.00    0.00      11/11          int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[72]     0.0    0.00    0.00      11         async::detail::auto_partitioner_impl<int const*>::begin() const [72]
-----------------------------------------------
                0.00    0.00       3/11          void std::advance<int const*, unsigned long>(int const*&, unsigned long) [211]
                0.00    0.00       8/11          std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*) [106]
[73]     0.0    0.00    0.00      11         std::iterator_traits<int const*>::iterator_category std::__iterator_category<int const*>(int const* const&) [73]
-----------------------------------------------
                0.00    0.00       1/10          async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       1/10          async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       1/10          async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::get() [277]
                0.00    0.00       1/10          async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/10          std::_Head_base<0ul, async::task<void>, false>::_Head_base() [449]
                0.00    0.00       1/10          async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
                0.00    0.00       4/10          async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::get() [181]
[74]     0.0    0.00    0.00      10         async::task<void>::task() [74]
                0.00    0.00      10/10          async::detail::basic_task<void>::basic_task() [75]
-----------------------------------------------
                0.00    0.00      10/10          async::task<void>::task() [74]
[75]     0.0    0.00    0.00      10         async::detail::basic_task<void>::basic_task() [75]
                0.00    0.00      10/17          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr() [36]
-----------------------------------------------
                                   8             async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::operator=(decltype(nullptr)) [228]
[76]     0.0    0.00    0.00      10         async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::remove_ref(unsigned long) <cycle 1> [76]
                                   7             async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
-----------------------------------------------
                0.00    0.00       1/10          async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<async::threadpool_scheduler, main::{lambda(int)#3}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [300]
                0.00    0.00       1/10          async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<int>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [301]
                0.00    0.00       1/10          async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
                0.00    0.00       1/10          async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<int>) const [445]
                0.00    0.00       1/10          async::task<int>::operator=(async::task<int>&&) [303]
                0.00    0.00       5/10          async::task<int>::task(async::task<int>&&) [134]
[77]     0.0    0.00    0.00      10         std::remove_reference<async::task<int>&>::type&& std::move<async::task<int>&>(async::task<int>&) [77]
-----------------------------------------------
                0.00    0.00       1/10          async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}::operator()() const [494]
                0.00    0.00       4/10          int async::detail::fake_void_to_void<int>(int&&) [155]
                0.00    0.00       5/10          void async::detail::task_result_holder<int>::set_result<int>(int&&) [140]
[78]     0.0    0.00    0.00      10         int&& std::forward<int>(std::remove_reference<int>::type&) [78]
-----------------------------------------------
                0.00    0.00       1/9           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::task_func<{lambda()#1}>({lambda()#1}&&) [418]
                0.00    0.00       1/9           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::task_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [427]
                0.00    0.00       1/9           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEES4_EC1IJSJ_EEEDpOT_ [420]
                0.00    0.00       1/9           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [415]
                0.00    0.00       1/9           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [410]
                0.00    0.00       4/9           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEES4_EC1IJSI_EEEDpOT_ [161]
[79]     0.0    0.00    0.00       9         async::detail::task_result<async::detail::fake_void>::task_result() [79]
                0.00    0.00       9/9           async::detail::task_result_holder<async::detail::fake_void>::task_result_holder() [82]
-----------------------------------------------
                0.00    0.00       1/9           void async::detail::set_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > >&, async::detail::ref_count_ptr<async::detail::task_base>) [364]
                0.00    0.00       1/9           async::detail::basic_task<void>::operator=(async::detail::basic_task<void>&&) [315]
                0.00    0.00       1/9           async::detail::basic_task<int>::operator=(async::detail::basic_task<int>&&) [314]
                0.00    0.00       2/9           void async::detail::set_internal_task<async::task<int> >(async::task<int>&, async::detail::ref_count_ptr<async::detail::task_base>) [233]
                0.00    0.00       4/9           void async::detail::set_internal_task<async::task<void> >(async::task<void>&, async::detail::ref_count_ptr<async::detail::task_base>) [156]
[80]     0.0    0.00    0.00       9         async::detail::ref_count_ptr<async::detail::task_base>::operator=(async::detail::ref_count_ptr<async::detail::task_base>&&) [80]
-----------------------------------------------
                0.00    0.00       1/9           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::operator()(async::detail::task_base*) [341]
                0.00    0.00       1/9           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
                0.00    0.00       1/9           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [343]
                0.00    0.00       1/9           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
                0.00    0.00       1/9           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
                0.00    0.00       4/9           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [154]
[81]     0.0    0.00    0.00       9         async::detail::task_result_holder<async::detail::fake_void>::set_result(async::detail::fake_void) [81]
-----------------------------------------------
                0.00    0.00       9/9           async::detail::task_result<async::detail::fake_void>::task_result() [79]
[82]     0.0    0.00    0.00       9         async::detail::task_result_holder<async::detail::fake_void>::task_result_holder() [82]
                0.00    0.00       9/15          async::detail::task_base::task_base() [46]
-----------------------------------------------
                0.00    0.00       9/9           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[83]     0.0    0.00    0.00       9         async::operator!=(async::int_range<int>::iterator, async::int_range<int>::iterator) [83]
-----------------------------------------------
                0.00    0.00       1/9           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/9           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [415]
                0.00    0.00       1/9           void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [328]
                0.00    0.00       1/9           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [379]
                0.00    0.00       1/9           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}::operator()() const [491]
                0.00    0.00       2/9           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&) [254]
                0.00    0.00       2/9           std::_Head_base<0ul, async::task<void>, false>::_Head_base<async::task<void> >(async::task<void>&&) [251]
[84]     0.0    0.00    0.00       9         async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&) [84]
-----------------------------------------------
                0.00    0.00       1/9           async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> async::auto_partitioner<async::int_range<int>&>(async::int_range<int>&) [293]
                0.00    0.00       8/9           async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::split() [90]
[85]     0.0    0.00    0.00       9         std::iterator_traits<async::int_range<int>::iterator>::difference_type std::distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator) [85]
                0.00    0.00       9/13          std::iterator_traits<async::int_range<int>::iterator>::iterator_category std::__iterator_category<async::int_range<int>::iterator>(async::int_range<int>::iterator const&) [58]
                0.00    0.00       8/8           std::iterator_traits<async::int_range<int>::iterator>::difference_type std::__distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator, std::random_access_iterator_tag) [98]
-----------------------------------------------
                                   9             void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) <cycle 2> [41]
[86]     0.0    0.00    0.00       9         async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
                0.00    0.00       9/18          async::detail::ref_count_ptr<async::detail::task_base>::operator->() const [34]
                0.00    0.00       9/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       9/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
                0.00    0.00       9/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void> >) [426]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int> >) [430]
                                   1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [409]
                                   1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [414]
-----------------------------------------------
                0.00    0.00       4/8           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, void>::destroy_func() [148]
                0.00    0.00       4/8           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, async::detail::fake_void>::run(async::detail::task_base*) [513]
[87]     0.0    0.00    0.00       8         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, void>::get_func() [87]
-----------------------------------------------
                0.00    0.00       1/8           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [419]
                0.00    0.00       1/8           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [421]
                0.00    0.00       1/8           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::~task_func() [428]
                0.00    0.00       1/8           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [416]
                0.00    0.00       1/8           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [411]
                0.00    0.00       3/8           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [198]
[88]     0.0    0.00    0.00       8         async::detail::task_result<async::detail::fake_void>::~task_result() [88]
                0.00    0.00       8/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       8/8           async::detail::task_result_holder<async::detail::fake_void>::~task_result_holder() [89]
-----------------------------------------------
                0.00    0.00       8/8           async::detail::task_result<async::detail::fake_void>::~task_result() [88]
[89]     0.0    0.00    0.00       8         async::detail::task_result_holder<async::detail::fake_void>::~task_result_holder() [89]
                0.00    0.00       8/14          async::detail::task_base::~task_base() [57]
-----------------------------------------------
                0.00    0.00       8/8           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[90]     0.0    0.00    0.00       8         async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::split() [90]
                0.00    0.00       8/9           std::iterator_traits<async::int_range<int>::iterator>::difference_type std::distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator) [85]
                0.00    0.00       7/8           async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::auto_partitioner_impl(async::int_range<int>::iterator, async::int_range<int>::iterator, unsigned long) [91]
                0.00    0.00       4/7           std::this_thread::get_id() [114]
                0.00    0.00       4/4           void std::advance<async::int_range<int>::iterator, unsigned long>(async::int_range<int>::iterator&, unsigned long) [176]
                0.00    0.00       3/6           std::operator!=(std::thread::id, std::thread::id) [133]
-----------------------------------------------
                0.00    0.00       1/8           async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> async::auto_partitioner<async::int_range<int>&>(async::int_range<int>&) [293]
                0.00    0.00       7/8           async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::split() [90]
[91]     0.0    0.00    0.00       8         async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::auto_partitioner_impl(async::int_range<int>::iterator, async::int_range<int>::iterator, unsigned long) [91]
                0.00    0.00       9/17          std::thread::id::id() [37]
-----------------------------------------------
                0.00    0.00       1/8           async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> async::auto_partitioner<async::range<int const*>&>(async::range<int const*>&) [292]
                0.00    0.00       7/8           async::detail::auto_partitioner_impl<int const*>::split() [111]
[92]     0.0    0.00    0.00       8         async::detail::auto_partitioner_impl<int const*>::auto_partitioner_impl(int const*, int const*, unsigned long) [92]
                0.00    0.00       8/17          std::thread::id::id() [37]
-----------------------------------------------
                0.00    0.00       8/8           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[93]     0.0    0.00    0.00       8         async::operator==(async::int_range<int>::iterator, async::int_range<int>::iterator) [93]
-----------------------------------------------
                0.00    0.00       8/8           std::iterator_traits<async::int_range<int>::iterator>::difference_type std::__distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator, std::random_access_iterator_tag) [98]
[94]     0.0    0.00    0.00       8         async::operator-(async::int_range<int>::iterator, async::int_range<int>::iterator) [94]
-----------------------------------------------
                0.00    0.00       8/8           std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&) [96]
[95]     0.0    0.00    0.00       8         std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>::_M_head(std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>&) [95]
-----------------------------------------------
                0.00    0.00       8/8           async::detail::continuation_vector::vector_data*& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&) [100]
[96]     0.0    0.00    0.00       8         std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&) [96]
                0.00    0.00       8/8           std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>::_M_head(std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>&) [95]
-----------------------------------------------
                0.00    0.00       4/8           std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::~unique_ptr() [171]
                0.00    0.00       4/8           std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::release() [170]
[97]     0.0    0.00    0.00       8         std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr() [97]
                0.00    0.00       8/8           std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&) [101]
-----------------------------------------------
                0.00    0.00       8/8           std::iterator_traits<async::int_range<int>::iterator>::difference_type std::distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator) [85]
[98]     0.0    0.00    0.00       8         std::iterator_traits<async::int_range<int>::iterator>::difference_type std::__distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator, std::random_access_iterator_tag) [98]
                0.00    0.00       8/8           async::operator-(async::int_range<int>::iterator, async::int_range<int>::iterator) [94]
-----------------------------------------------
                0.00    0.00       8/8           std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*) [106]
[99]     0.0    0.00    0.00       8         std::iterator_traits<int const*>::difference_type std::__distance<int const*>(int const*, int const*, std::random_access_iterator_tag) [99]
-----------------------------------------------
                0.00    0.00       8/8           std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&) [101]
[100]    0.0    0.00    0.00       8         async::detail::continuation_vector::vector_data*& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&) [100]
                0.00    0.00       8/8           std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&) [96]
-----------------------------------------------
                0.00    0.00       8/8           std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr() [97]
[101]    0.0    0.00    0.00       8         std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&) [101]
                0.00    0.00       8/8           async::detail::continuation_vector::vector_data*& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&) [100]
-----------------------------------------------
                0.00    0.00       1/8           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<void>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [305]
                0.00    0.00       1/8           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
                0.00    0.00       1/8           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<void>) const [444]
                0.00    0.00       1/8           async::task<void>::operator=(async::task<void>&&) [306]
                0.00    0.00       4/8           async::task<void>::task(async::task<void>&&) [146]
[102]    0.0    0.00    0.00       8         std::remove_reference<async::task<void>&>::type&& std::move<async::task<void>&>(async::task<void>&) [102]
-----------------------------------------------
                0.00    0.00       4/8           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
                0.00    0.00       4/8           int const& async::detail::default_map::operator()<int const&>(int const&) const [164]
[103]    0.0    0.00    0.00       8         int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [103]
-----------------------------------------------
                0.00    0.00       1/8           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::detail::continuation_traits&&) [296]
                0.00    0.00       1/8           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [295]
                0.00    0.00       1/8           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       1/8           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::task_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [427]
                0.00    0.00       1/8           void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [330]
                0.00    0.00       1/8           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [382]
                0.00    0.00       1/8           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}::operator()() const [493]
                0.00    0.00       1/8           async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::func_base<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&) [397]
[104]    0.0    0.00    0.00       8         main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&) [104]
-----------------------------------------------
                0.00    0.00       1/8           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<main::{lambda(int)#3}>(async::detail::continuation_traits&&) [302]
                0.00    0.00       1/8           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<async::threadpool_scheduler, main::{lambda(int)#3}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [300]
                0.00    0.00       1/8           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       1/8           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::task_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [431]
                0.00    0.00       1/8           void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [332]
                0.00    0.00       1/8           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [385]
                0.00    0.00       1/8           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}::operator()() const [494]
                0.00    0.00       1/8           async::detail::func_base<main::{lambda(int)#3}, void>::func_base<{lambda(int)#3}>({lambda(int)#3}&&) [399]
[105]    0.0    0.00    0.00       8         main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&) [105]
-----------------------------------------------
                0.00    0.00       1/8           async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> async::auto_partitioner<async::range<int const*>&>(async::range<int const*>&) [292]
                0.00    0.00       7/8           async::detail::auto_partitioner_impl<int const*>::split() [111]
[106]    0.0    0.00    0.00       8         std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*) [106]
                0.00    0.00       8/11          std::iterator_traits<int const*>::iterator_category std::__iterator_category<int const*>(int const* const&) [73]
                0.00    0.00       8/8           std::iterator_traits<int const*>::difference_type std::__distance<int const*>(int const*, int const*, std::random_access_iterator_tag) [99]
-----------------------------------------------
                0.00    0.00       7/7           std::this_thread::get_id() [114]
[107]    0.0    0.00    0.00       7         __gthread_self() [107]
-----------------------------------------------
                0.00    0.00       1/7           decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#1}>)())) async::spawn<main::{lambda()#1}>(main::{lambda()#1}&&) [311]
                0.00    0.00       1/7           decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#2}>)())) async::spawn<main::{lambda()#2}>(main::{lambda()#2}&&) [310]
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<main::{lambda(int)#3}>(async::detail::continuation_traits&&) [302]
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::detail::continuation_traits&&) [296]
                0.00    0.00       1/7           void async::parallel_invoke<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#5}&&, main::{lambda()#6}&&) [287]
                0.00    0.00       1/7           void async::parallel_for<async::int_range<int>, main::{lambda(int)#7}>(async::int_range<int>&&, main::{lambda(int)#7} const&) [284]
                0.00    0.00       1/7           int async::parallel_reduce<async::range<int const*>, int, main::{lambda(int, int)#8}>(async::range<int const*>&&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [290]
[108]    0.0    0.00    0.00       7         async::default_scheduler() [108]
-----------------------------------------------
                0.00    0.00       2/7           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       2/7           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
                0.00    0.00       3/7           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
[109]    0.0    0.00    0.00       7         async::task<int>::internal_task_type* async::detail::get_internal_task<async::task<int> >(async::task<int> const&) [109]
                0.00    0.00       7/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
-----------------------------------------------
                                   7             async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::remove_ref(unsigned long) <cycle 1> [76]
[110]    0.0    0.00    0.00       7         async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [425]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [417]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::destroy(async::detail::task_base*) [429]
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [408]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::destroy(async::detail::task_base*) [422]
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [413]
                                   1             async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::destroy(async::detail::task_base*) <cycle 1> [333]
-----------------------------------------------
                0.00    0.00       7/7           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[111]    0.0    0.00    0.00       7         async::detail::auto_partitioner_impl<int const*>::split() [111]
                0.00    0.00       7/8           std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*) [106]
                0.00    0.00       7/8           async::detail::auto_partitioner_impl<int const*>::auto_partitioner_impl(int const*, int const*, unsigned long) [92]
                0.00    0.00       3/7           std::this_thread::get_id() [114]
                0.00    0.00       3/6           std::operator!=(std::thread::id, std::thread::id) [133]
                0.00    0.00       3/3           void std::advance<int const*, unsigned long>(int const*&, unsigned long) [211]
-----------------------------------------------
                0.00    0.00       1/7           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [417]
                0.00    0.00       1/7           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::destroy(async::detail::task_base*) [422]
                0.00    0.00       1/7           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::destroy(async::detail::task_base*) [429]
                0.00    0.00       1/7           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [425]
                0.00    0.00       1/7           async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::destroy(async::detail::task_base*) <cycle 1> [333]
                0.00    0.00       1/7           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [413]
                0.00    0.00       1/7           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [408]
[112]    0.0    0.00    0.00       7         async::detail::task_base::operator delete(void*) [112]
-----------------------------------------------
                0.00    0.00       1/7           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       1/7           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       1/7           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::basic_event() [317]
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
[113]    0.0    0.00    0.00       7         async::detail::task_base::operator new(unsigned long) [113]
-----------------------------------------------
                0.00    0.00       3/7           async::detail::auto_partitioner_impl<int const*>::split() [111]
                0.00    0.00       4/7           async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::split() [90]
[114]    0.0    0.00    0.00       7         std::this_thread::get_id() [114]
                0.00    0.00       7/31          __gthread_active_p() [25]
                0.00    0.00       7/7           __gthread_self() [107]
                0.00    0.00       6/6           std::thread::id::id(unsigned long) [129]
-----------------------------------------------
                0.00    0.00       3/7           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}::operator()() const [214]
                0.00    0.00       4/7           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[115]    0.0    0.00    0.00       7         std::remove_reference<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>::type&& std::move<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>(async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&) [115]
-----------------------------------------------
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<void>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [305]
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/7           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [415]
                0.00    0.00       1/7           void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [328]
                0.00    0.00       1/7           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [379]
                0.00    0.00       1/7           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}::operator()() const [491]
                0.00    0.00       1/7           async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [392]
[116]    0.0    0.00    0.00       7         async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&) [116]
-----------------------------------------------
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<int>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [301]
                0.00    0.00       1/7           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
                0.00    0.00       1/7           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [410]
                0.00    0.00       1/7           void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [326]
                0.00    0.00       1/7           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [376]
                0.00    0.00       1/7           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}::operator()() const [492]
                0.00    0.00       1/7           async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [395]
[117]    0.0    0.00    0.00       7         async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&) [117]
-----------------------------------------------
                0.00    0.00       1/7           decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#2}>)())) async::spawn<main::{lambda()#2}>(main::{lambda()#2}&&) [310]
                0.00    0.00       1/7           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       1/7           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::task_func<{lambda()#2}>({lambda()#2}&&) [423]
                0.00    0.00       1/7           void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::init_func<{lambda()#2}>({lambda()#2}&&) [324]
                0.00    0.00       1/7           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::root_exec_func<{lambda()#2}>({lambda()#2}&&) [344]
                0.00    0.00       1/7           decltype (((declval<main::{lambda()#2}>)())()) async::detail::invoke_fake_void<main::{lambda()#2}, void>(main::{lambda()#2}&&) [354]
                0.00    0.00       1/7           async::detail::func_base<main::{lambda()#2}, void>::func_base<{lambda()#2}>({lambda()#2}&&) [401]
[118]    0.0    0.00    0.00       7         main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&) [118]
-----------------------------------------------
                0.00    0.00       1/7           void async::parallel_invoke<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#5}&&, main::{lambda()#6}&&) [287]
                0.00    0.00       1/7           std::enable_if<async::detail::is_scheduler<async::threadpool_scheduler>::value, void>::type async::parallel_invoke<async::threadpool_scheduler, main::{lambda()#5}, main::{lambda()#6}>(async::detail&, main::{lambda()#5}&&, main::{lambda()#6}&&) [288]
                0.00    0.00       1/7           std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> std::forward_as_tuple<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#6}) [467]
                0.00    0.00       1/7           std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>::tuple<{lambda()#5}, main::{lambda()#5}&&, true>({lambda()#5}&&, main::{lambda()#5}&&) [462]
                0.00    0.00       1/7           std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#5}, main::{lambda()#5}&&, void>({lambda()#5}&&, main::{lambda()#5}&&) [457]
                0.00    0.00       1/7           std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#6}>({lambda()#6}&&) [460]
                0.00    0.00       1/7           std::_Head_base<1ul, main::{lambda()#6}&&, false>::_Head_base<{lambda()#6}>({lambda()#6}&&) [454]
[119]    0.0    0.00    0.00       7         main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&) [119]
-----------------------------------------------
                0.00    0.00       1/7           decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#1}>)())) async::spawn<main::{lambda()#1}>(main::{lambda()#1}&&) [311]
                0.00    0.00       1/7           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       1/7           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::task_func<{lambda()#1}>({lambda()#1}&&) [418]
                0.00    0.00       1/7           void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::init_func<{lambda()#1}>({lambda()#1}&&) [320]
                0.00    0.00       1/7           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::root_exec_func<{lambda()#1}>({lambda()#1}&&) [339]
                0.00    0.00       1/7           async::detail::fake_void async::detail::invoke_fake_void<main::{lambda()#1}, void>(main::{lambda()#1}&&) [355]
                0.00    0.00       1/7           async::detail::func_base<main::{lambda()#1}, void>::func_base<{lambda()#1}>({lambda()#1}&&) [403]
[120]    0.0    0.00    0.00       7         main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&) [120]
-----------------------------------------------
                0.00    0.00       1/7           async::local_task<main::{lambda()#6}&&, async::threadpool_scheduler> async::local_spawn<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>, async::threadpool_scheduler&&) [282]
                0.00    0.00       1/7           _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_ [279]
                0.00    0.00       1/7           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEES4_EC1IJSJ_EEEDpOT_ [420]
                0.00    0.00       1/7           _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS3_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEEvE9init_funcIJSJ_EEEvDpOT_ [322]
                0.00    0.00       1/7           _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEC1ISI_EEOSD_ [342]
                0.00    0.00       1/7           async::detail::fake_void async::detail::invoke_fake_void<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>(main::{lambda()#6}&&) [360]
                0.00    0.00       1/7           _ZN5async6detail9func_baseIZNS0_24parallel_invoke_internalILm0ELm2EE3runINS_20threadpool_schedulerESt5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_vEC2ISH_EEOSC_ [406]
[121]    0.0    0.00    0.00       7         main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&) [121]
-----------------------------------------------
                0.00    0.00       7/7           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[122]    0.0    0.00    0.00       7         main::{lambda(int, int)#8}::operator()(int, int) const [122]
-----------------------------------------------
                0.00    0.00       1/6           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       1/6           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       1/6           std::_Head_base<1ul, async::task<int>, false>::_Head_base() [452]
                0.00    0.00       3/6           async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::get() [184]
[123]    0.0    0.00    0.00       6         async::task<int>::task() [123]
                0.00    0.00       6/6           async::detail::basic_task<int>::basic_task() [124]
-----------------------------------------------
                0.00    0.00       6/6           async::task<int>::task() [123]
[124]    0.0    0.00    0.00       6         async::detail::basic_task<int>::basic_task() [124]
                0.00    0.00       6/17          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr() [36]
-----------------------------------------------
                0.00    0.00       3/6           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, void>::destroy_func() [189]
                0.00    0.00       3/6           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, int>::run(async::detail::task_base*) [524]
[125]    0.0    0.00    0.00       6         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, void>::get_func() [125]
-----------------------------------------------
                                   2             async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [234]
                                   2             async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [235]
                0.00    0.00       1/16          void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
                0.00    0.00       1/16          void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
[126]    0.0    0.00    0.00       6         async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::~ref_count_ptr() <cycle 2> [126]
                                   2             async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::remove_ref(unsigned long) <cycle 2> [230]
-----------------------------------------------
                0.00    0.00       1/6           async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::get() [277]
                0.00    0.00       1/6           async::task<void>::get() [304]
                0.00    0.00       4/6           async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::get() [181]
[127]    0.0    0.00    0.00       6         async::detail::fake_void_to_void(async::detail::fake_void) [127]
-----------------------------------------------
                0.00    0.00       1/6           async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::get() [277]
                0.00    0.00       1/6           async::task<void>::get() [304]
                0.00    0.00       4/6           async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::get() [181]
[128]    0.0    0.00    0.00       6         async::detail::fake_void async::detail::task_result_holder<async::detail::fake_void>::get_result<void>(async::task<void> const&) [128]
-----------------------------------------------
                0.00    0.00       6/6           std::this_thread::get_id() [114]
[129]    0.0    0.00    0.00       6         std::thread::id::id(unsigned long) [129]
-----------------------------------------------
                0.00    0.00       3/6           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}::operator()() const [215]
                0.00    0.00       3/6           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[130]    0.0    0.00    0.00       6         std::remove_reference<async::detail::auto_partitioner_impl<int const*>&>::type&& std::move<async::detail::auto_partitioner_impl<int const*>&>(async::detail::auto_partitioner_impl<int const*>&) [130]
-----------------------------------------------
                0.00    0.00       1/6           void async::parallel_invoke<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#5}&&, main::{lambda()#6}&&) [287]
                0.00    0.00       1/6           std::enable_if<async::detail::is_scheduler<async::threadpool_scheduler>::value, void>::type async::parallel_invoke<async::threadpool_scheduler, main::{lambda()#5}, main::{lambda()#6}>(async::detail&, main::{lambda()#5}&&, main::{lambda()#6}&&) [288]
                0.00    0.00       1/6           std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> std::forward_as_tuple<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#6}) [467]
                0.00    0.00       1/6           std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>::tuple<{lambda()#5}, main::{lambda()#5}&&, true>({lambda()#5}&&, main::{lambda()#5}&&) [462]
                0.00    0.00       1/6           std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#5}, main::{lambda()#5}&&, void>({lambda()#5}&&, main::{lambda()#5}&&) [457]
                0.00    0.00       1/6           std::_Head_base<0ul, main::{lambda()#5}&&, false>::_Head_base<{lambda()#5}>({lambda()#5}&&) [451]
[131]    0.0    0.00    0.00       6         main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [131]
-----------------------------------------------
                0.00    0.00       6/6           std::operator!=(std::thread::id, std::thread::id) [133]
[132]    0.0    0.00    0.00       6         std::operator==(std::thread::id, std::thread::id) [132]
-----------------------------------------------
                0.00    0.00       3/6           async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::split() [90]
                0.00    0.00       3/6           async::detail::auto_partitioner_impl<int const*>::split() [111]
[133]    0.0    0.00    0.00       6         std::operator!=(std::thread::id, std::thread::id) [133]
                0.00    0.00       6/6           std::operator==(std::thread::id, std::thread::id) [132]
-----------------------------------------------
                0.00    0.00       1/5           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [385]
                0.00    0.00       1/5           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [376]
                0.00    0.00       1/5           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}::operator()() const [492]
                0.00    0.00       2/5           std::_Head_base<1ul, async::task<int>, false>::_Head_base<async::task<int> >(async::task<int>&&) [252]
[134]    0.0    0.00    0.00       5         async::task<int>::task(async::task<int>&&) [134]
                0.00    0.00       5/10          std::remove_reference<async::task<int>&>::type&& std::move<async::task<int>&>(async::task<int>&) [77]
                0.00    0.00       5/5           async::detail::basic_task<int>::basic_task(async::detail::basic_task<int>&&) [135]
-----------------------------------------------
                0.00    0.00       5/5           async::task<int>::task(async::task<int>&&) [134]
[135]    0.0    0.00    0.00       5         async::detail::basic_task<int>::basic_task(async::detail::basic_task<int>&&) [135]
                0.00    0.00       5/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
-----------------------------------------------
                0.00    0.00       1/5           async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::get() [277]
                0.00    0.00       1/5           async::detail::basic_task<void>::get_internal() const [441]
                0.00    0.00       3/5           async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::get() [181]
[136]    0.0    0.00    0.00       5         async::detail::task_result<async::detail::fake_void>::wait_and_throw() [136]
                0.00    0.00       4/15          async::detail::task_base::wait() [44]
-----------------------------------------------
                0.00    0.00       1/5           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::task_func<{lambda()#2}>({lambda()#2}&&) [423]
                0.00    0.00       1/5           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::task_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [431]
                0.00    0.00       3/5           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_iZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEiEC1IJSL_EEEDpOT_ [199]
[137]    0.0    0.00    0.00       5         async::detail::task_result<int>::task_result() [137]
                0.00    0.00       5/5           async::detail::task_result_holder<int>::task_result_holder() [141]
-----------------------------------------------
                0.00    0.00       1/5           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::~task_func() [424]
                0.00    0.00       1/5           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::~task_func() [432]
                0.00    0.00       3/5           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, int>::~task_func() [200]
[138]    0.0    0.00    0.00       5         async::detail::task_result<int>::~task_result() [138]
                0.00    0.00       5/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       5/5           async::detail::task_result_holder<int>::~task_result_holder() [142]
-----------------------------------------------
                0.00    0.00       1/5           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
                0.00    0.00       1/5           async::task<int>::get() [299]
                0.00    0.00       3/5           async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::get() [184]
[139]    0.0    0.00    0.00       5         int&& async::detail::task_result_holder<int>::get_result<int>(async::task<int> const&) [139]
                0.00    0.00       5/12          std::remove_reference<int&>::type&& std::move<int&>(int&) [67]
-----------------------------------------------
                0.00    0.00       1/5           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::operator()(async::detail::task_base*) [346]
                0.00    0.00       1/5           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
                0.00    0.00       3/5           async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [192]
[140]    0.0    0.00    0.00       5         void async::detail::task_result_holder<int>::set_result<int>(int&&) [140]
                0.00    0.00       5/10          int&& std::forward<int>(std::remove_reference<int>::type&) [78]
                0.00    0.00       5/24          operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00       5/5           async::detail::task_result<int>::task_result() [137]
[141]    0.0    0.00    0.00       5         async::detail::task_result_holder<int>::task_result_holder() [141]
                0.00    0.00       5/15          async::detail::task_base::task_base() [46]
-----------------------------------------------
                0.00    0.00       5/5           async::detail::task_result<int>::~task_result() [138]
[142]    0.0    0.00    0.00       5         async::detail::task_result_holder<int>::~task_result_holder() [142]
                0.00    0.00       5/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       5/14          async::detail::task_base::~task_base() [57]
-----------------------------------------------
                0.00    0.00       5/5           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[143]    0.0    0.00    0.00       5         async::int_range<int>::iterator::operator++() [143]
-----------------------------------------------
                0.00    0.00       4/4           async::local_task<main::{lambda(int)#7}, async::threadpool_scheduler&> async::local_spawn<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(async::threadpool_scheduler, async::threadpool_scheduler&) [145]
[144]    0.0    0.00    0.00       4         _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_ [144]
                0.00    0.00       4/27          main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&) [28]
                0.00    0.00       4/4           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEES4_EC1IJSI_EEEDpOT_ [161]
                0.00    0.00       4/14          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00       4/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       4/12          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
                0.00    0.00       4/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                0.00    0.00       4/4           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[145]    0.0    0.00    0.00       4         async::local_task<main::{lambda(int)#7}, async::threadpool_scheduler&> async::local_spawn<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(async::threadpool_scheduler, async::threadpool_scheduler&) [145]
                0.00    0.00       4/27          main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&) [28]
                0.00    0.00       4/4           _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_ [144]
-----------------------------------------------
                0.00    0.00       1/4           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [379]
                0.00    0.00       1/4           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}::operator()() const [491]
                0.00    0.00       2/4           std::_Head_base<0ul, async::task<void>, false>::_Head_base<async::task<void> >(async::task<void>&&) [251]
[146]    0.0    0.00    0.00       4         async::task<void>::task(async::task<void>&&) [146]
                0.00    0.00       4/8           std::remove_reference<async::task<void>&>::type&& std::move<async::task<void>&>(async::task<void>&) [102]
                0.00    0.00       4/4           async::detail::basic_task<void>::basic_task(async::detail::basic_task<void>&&) [147]
-----------------------------------------------
                0.00    0.00       4/4           async::task<void>::task(async::task<void>&&) [146]
[147]    0.0    0.00    0.00       4         async::detail::basic_task<void>::basic_task(async::detail::basic_task<void>&&) [147]
                0.00    0.00       4/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
-----------------------------------------------
                0.00    0.00       4/4           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [154]
[148]    0.0    0.00    0.00       4         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, void>::destroy_func() [148]
                0.00    0.00       4/8           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, void>::get_func() [87]
-----------------------------------------------
                0.00    0.00       4/4           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEES4_EC1IJSI_EEEDpOT_ [161]
[149]    0.0    0.00    0.00       4         _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS3_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEEvE9init_funcIJSI_EEEvDpOT_ [149]
                0.00    0.00       4/27          main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&) [28]
                0.00    0.00       4/24          operator new(unsigned long, void*) [29]
                0.00    0.00       4/4           _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEC1ISH_EEOSB_ [153]
-----------------------------------------------
                0.00    0.00       1/4           async::detail::basic_task<int>::get_internal() const [438]
                0.00    0.00       3/4           async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::get() [184]
[150]    0.0    0.00    0.00       4         async::detail::task_result<int>::wait_and_throw() [150]
                0.00    0.00       4/15          async::detail::task_base::wait() [44]
-----------------------------------------------
                0.00    0.00       1/4           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [372]
                0.00    0.00       1/4           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [374]
                0.00    0.00       1/4           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [373]
                0.00    0.00       1/4           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [375]
[151]    0.0    0.00    0.00       4         async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&&) [151]
-----------------------------------------------
                0.00    0.00       4/4           async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
[152]    0.0    0.00    0.00       4         async::detail::ref_count_ptr<async::detail::task_base>::release() [152]
-----------------------------------------------
                0.00    0.00       4/4           _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS3_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEEvE9init_funcIJSI_EEEvDpOT_ [149]
[153]    0.0    0.00    0.00       4         _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEC1ISH_EEOSB_ [153]
                0.00    0.00       4/27          main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&) [28]
                0.00    0.00       4/4           _ZN5async6detail9func_baseIZNS0_21internal_parallel_forINS_20threadpool_schedulerENS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_vEC2ISG_EEOSA_ [160]
-----------------------------------------------
                0.00    0.00       4/4           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, async::detail::fake_void>::run(async::detail::task_base*) [513]
[154]    0.0    0.00    0.00       4         async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [154]
                0.00    0.00       4/9           async::detail::task_result_holder<async::detail::fake_void>::set_result(async::detail::fake_void) [81]
                0.00    0.00       4/4           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, void>::destroy_func() [148]
                0.00    0.00       4/16          async::detail::task_base::finish() <cycle 2> [45]
                0.00    0.00       3/3           async::detail::func_base<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>::get_func() [195]
                0.00    0.00       3/3           async::detail::fake_void async::detail::invoke_fake_void<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>(main::{lambda(int)#7}&&) [193]
                0.00    0.00       3/3           std::remove_reference<main::{lambda(int)#7}>::type&& std::move<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}&>(main::{lambda(int)#7}&&) [209]
-----------------------------------------------
                0.00    0.00       1/4           async::task<int>::get() [299]
                0.00    0.00       3/4           async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::get() [184]
[155]    0.0    0.00    0.00       4         int async::detail::fake_void_to_void<int>(int&&) [155]
                0.00    0.00       4/10          int&& std::forward<int>(std::remove_reference<int>::type&) [78]
-----------------------------------------------
                0.00    0.00       1/4           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       1/4           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       1/4           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/4           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
[156]    0.0    0.00    0.00       4         void async::detail::set_internal_task<async::task<void> >(async::task<void>&, async::detail::ref_count_ptr<async::detail::task_base>) [156]
                0.00    0.00       4/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       4/9           async::detail::ref_count_ptr<async::detail::task_base>::operator=(async::detail::ref_count_ptr<async::detail::task_base>&&) [80]
-----------------------------------------------
                0.00    0.00       2/4           void async::detail::task_base::add_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [242]
                0.00    0.00       2/4           void async::detail::task_base::add_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) [241]
[157]    0.0    0.00    0.00       4         async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
                0.00    0.00       8/64          async::detail::compressed_ptr<3ul, true>::get_flags() const [17]
                0.00    0.00       4/32          std::atomic<async::detail::compressed_ptr<3ul, true> >::load(std::memory_order) const [23]
                0.00    0.00       4/27          async::detail::task_base* async::detail::compressed_ptr<3ul, true>::get_ptr<async::detail::task_base>() const [27]
                0.00    0.00       4/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       4/19          async::detail::compressed_ptr<3ul, true>::compressed_ptr(void*, unsigned long) [33]
                0.00    0.00       4/18          std::atomic<async::detail::compressed_ptr<3ul, true> >::compare_exchange_weak(async::detail::compressed_ptr<3ul, true>&, async::detail::compressed_ptr<3ul, true>, std::memory_order, std::memory_order) [35]
                0.00    0.00       4/4           async::detail::ref_count_ptr<async::detail::task_base>::release() [152]
                0.00    0.00       4/4           std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::release() [170]
                0.00    0.00       4/4           std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::~unique_ptr() [171]
-----------------------------------------------
                                   4             void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
                0.00    0.00       1/4           void async::parallel_for<async::threadpool_scheduler, async::int_range<int>&, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::int_range<int>&, main::{lambda(int)#7} const&) [283]
                0.00    0.00       3/4           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}::operator()() const [214]
[158]    0.0    0.00    0.00       4+4       void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
                0.00    0.00      12/12          async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::end() const [63]
                0.00    0.00      12/12          async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::begin() const [64]
                0.00    0.00       9/9           async::operator!=(async::int_range<int>::iterator, async::int_range<int>::iterator) [83]
                0.00    0.00       8/8           async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::split() [90]
                0.00    0.00       8/8           async::operator==(async::int_range<int>::iterator, async::int_range<int>::iterator) [93]
                0.00    0.00       5/5           async::int_range<int>::iterator::operator++() [143]
                0.00    0.00       4/4           async::int_range<int>::iterator::operator*() const [165]
                0.00    0.00       4/4           int&& std::forward<int&&>(std::remove_reference<int&&>::type&) [178]
                0.00    0.00       4/4           main::{lambda(int)#7}::operator()(int) const [180]
                0.00    0.00       4/4           async::local_task<main::{lambda(int)#7}, async::threadpool_scheduler&> async::local_spawn<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(async::threadpool_scheduler, async::threadpool_scheduler&) [145]
                0.00    0.00       4/7           std::remove_reference<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>::type&& std::move<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>(async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&) [115]
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::get() [181]
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::~local_task() [183]
                                   4             void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
-----------------------------------------------
                                   3             int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
                0.00    0.00       1/4           int async::parallel_map_reduce<async::threadpool_scheduler, async::range<int const*>&, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [294]
                0.00    0.00       3/4           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}::operator()() const [215]
[159]    0.0    0.00    0.00       4+3       int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
                0.00    0.00      11/11          async::detail::auto_partitioner_impl<int const*>::begin() const [72]
                0.00    0.00      11/11          async::detail::auto_partitioner_impl<int const*>::end() const [71]
                0.00    0.00       7/7           async::detail::auto_partitioner_impl<int const*>::split() [111]
                0.00    0.00       7/12          std::remove_reference<int&>::type&& std::move<int&>(int&) [67]
                0.00    0.00       7/7           main::{lambda(int, int)#8}::operator()(int, int) const [122]
                0.00    0.00       4/8           int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [103]
                0.00    0.00       4/4           int const& async::detail::default_map::operator()<int const&>(int const&) const [164]
                0.00    0.00       3/3           _ZN5async11local_spawnINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EENS_10local_taskISB_SD_EESC_OSD_ [188]
                0.00    0.00       3/6           std::remove_reference<async::detail::auto_partitioner_impl<int const*>&>::type&& std::move<async::detail::auto_partitioner_impl<int const*>&>(async::detail::auto_partitioner_impl<int const*>&) [130]
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::get() [184]
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::~local_task() [187]
                                   3             int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
-----------------------------------------------
                0.00    0.00       4/4           _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEC1ISH_EEOSB_ [153]
[160]    0.0    0.00    0.00       4         _ZN5async6detail9func_baseIZNS0_21internal_parallel_forINS_20threadpool_schedulerENS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_vEC2ISG_EEOSA_ [160]
                0.00    0.00       4/27          main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&) [28]
-----------------------------------------------
                0.00    0.00       4/4           _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_ [144]
[161]    0.0    0.00    0.00       4         _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEES4_EC1IJSI_EEEDpOT_ [161]
                0.00    0.00       4/9           async::detail::task_result<async::detail::fake_void>::task_result() [79]
                0.00    0.00       4/27          main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&) [28]
                0.00    0.00       4/4           _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS3_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEEvE9init_funcIJSI_EEEvDpOT_ [149]
-----------------------------------------------
                0.00    0.00       2/4           async::int_range<int>::begin() const [249]
                0.00    0.00       2/4           async::int_range<int>::end() const [248]
[162]    0.0    0.00    0.00       4         async::int_range<int>::iterator::iterator(int) [162]
-----------------------------------------------
                0.00    0.00       4/4           void std::__advance<async::int_range<int>::iterator, long>(async::int_range<int>::iterator&, long, std::random_access_iterator_tag) [179]
[163]    0.0    0.00    0.00       4         async::int_range<int>::iterator::operator+=(long) [163]
-----------------------------------------------
                0.00    0.00       4/4           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[164]    0.0    0.00    0.00       4         int const& async::detail::default_map::operator()<int const&>(int const&) const [164]
                0.00    0.00       4/8           int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [103]
-----------------------------------------------
                0.00    0.00       4/4           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[165]    0.0    0.00    0.00       4         async::int_range<int>::iterator::operator*() const [165]
-----------------------------------------------
                0.00    0.00       4/4           std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::release() [170]
[166]    0.0    0.00    0.00       4         std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::get() const [166]
                0.00    0.00       4/4           std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr() const [167]
-----------------------------------------------
                0.00    0.00       4/4           std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::get() const [166]
[167]    0.0    0.00    0.00       4         std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr() const [167]
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type const& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&) [175]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&) [172]
[168]    0.0    0.00    0.00       4         std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>::_M_head(std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false> const&) [168]
-----------------------------------------------
                0.00    0.00       4/4           std::_Tuple_impl<1ul, async::task<int> >::_M_head(std::_Tuple_impl<1ul, async::task<int> >&) [173]
[169]    0.0    0.00    0.00       4         std::_Head_base<1ul, async::task<int>, false>::_M_head(std::_Head_base<1ul, async::task<int>, false>&) [169]
-----------------------------------------------
                0.00    0.00       4/4           async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
[170]    0.0    0.00    0.00       4         std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::release() [170]
                0.00    0.00       4/4           std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::get() const [166]
                0.00    0.00       4/8           std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr() [97]
-----------------------------------------------
                0.00    0.00       4/4           async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
[171]    0.0    0.00    0.00       4         std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::~unique_ptr() [171]
                0.00    0.00       4/8           std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr() [97]
-----------------------------------------------
                0.00    0.00       4/4           async::detail::continuation_vector::vector_data* const& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&) [174]
[172]    0.0    0.00    0.00       4         std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&) [172]
                0.00    0.00       4/4           std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>::_M_head(std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false> const&) [168]
-----------------------------------------------
                0.00    0.00       2/4           async::task<int>& std::__get_helper<1ul, async::task<int>>(std::_Tuple_impl<1ul, async::task<int>>&) [259]
                0.00    0.00       2/4           std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl(std::_Tuple_impl<1ul, async::task<int> >&&) [255]
[173]    0.0    0.00    0.00       4         std::_Tuple_impl<1ul, async::task<int> >::_M_head(std::_Tuple_impl<1ul, async::task<int> >&) [173]
                0.00    0.00       4/4           std::_Head_base<1ul, async::task<int>, false>::_M_head(std::_Head_base<1ul, async::task<int>, false>&) [169]
-----------------------------------------------
                0.00    0.00       4/4           std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type const& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&) [175]
[174]    0.0    0.00    0.00       4         async::detail::continuation_vector::vector_data* const& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&) [174]
                0.00    0.00       4/4           std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&) [172]
-----------------------------------------------
                0.00    0.00       4/4           std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr() const [167]
[175]    0.0    0.00    0.00       4         std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type const& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&) [175]
                0.00    0.00       4/4           async::detail::continuation_vector::vector_data* const& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&) [174]
-----------------------------------------------
                0.00    0.00       4/4           async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::split() [90]
[176]    0.0    0.00    0.00       4         void std::advance<async::int_range<int>::iterator, unsigned long>(async::int_range<int>::iterator&, unsigned long) [176]
                0.00    0.00       4/13          std::iterator_traits<async::int_range<int>::iterator>::iterator_category std::__iterator_category<async::int_range<int>::iterator>(async::int_range<int>::iterator const&) [58]
                0.00    0.00       4/4           void std::__advance<async::int_range<int>::iterator, long>(async::int_range<int>::iterator&, long, std::random_access_iterator_tag) [179]
-----------------------------------------------
                0.00    0.00       1/4           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       1/4           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::task_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [427]
                0.00    0.00       1/4           void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [330]
                0.00    0.00       1/4           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [382]
[177]    0.0    0.00    0.00       4         async::task<std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::task<std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > > >::type&) [177]
-----------------------------------------------
                0.00    0.00       4/4           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[178]    0.0    0.00    0.00       4         int&& std::forward<int&&>(std::remove_reference<int&&>::type&) [178]
-----------------------------------------------
                0.00    0.00       4/4           void std::advance<async::int_range<int>::iterator, unsigned long>(async::int_range<int>::iterator&, unsigned long) [176]
[179]    0.0    0.00    0.00       4         void std::__advance<async::int_range<int>::iterator, long>(async::int_range<int>::iterator&, long, std::random_access_iterator_tag) [179]
                0.00    0.00       4/4           async::int_range<int>::iterator::operator+=(long) [163]
-----------------------------------------------
                0.00    0.00       4/4           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[180]    0.0    0.00    0.00       4         main::{lambda(int)#7}::operator()(int) const [180]
-----------------------------------------------
                0.00    0.00       3/3           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[181]    0.0    0.00    0.00       3         async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::get() [181]
                0.00    0.00       4/10          async::task<void>::task() [74]
                0.00    0.00       4/6           async::detail::fake_void async::detail::task_result_holder<async::detail::fake_void>::get_result<void>(async::task<void> const&) [128]
                0.00    0.00       4/99          async::task<void>::~task() <cycle 1> [52]
                0.00    0.00       4/6           async::detail::fake_void_to_void(async::detail::fake_void) [127]
                0.00    0.00       3/5           async::detail::task_result<async::detail::fake_void>::wait_and_throw() [136]
-----------------------------------------------
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::~local_task() [183]
[182]    0.0    0.00    0.00       3         async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::wait() [182]
                0.00    0.00       3/15          async::detail::task_base::wait() [44]
-----------------------------------------------
                0.00    0.00       3/3           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
[183]    0.0    0.00    0.00       3         async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::~local_task() [183]
                0.00    0.00    7396/8258        async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::is_unique_ref(std::memory_order) [11]
                0.00    0.00    7392/8250        std::this_thread::yield() [13]
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::wait() [182]
                0.00    0.00       3/3           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [198]
-----------------------------------------------
                0.00    0.00       3/3           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[184]    0.0    0.00    0.00       3         async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::get() [184]
                0.00    0.00       3/4           async::detail::task_result<int>::wait_and_throw() [150]
                0.00    0.00       3/6           async::task<int>::task() [123]
                0.00    0.00       3/4           int async::detail::fake_void_to_void<int>(int&&) [155]
                0.00    0.00       3/5           int&& async::detail::task_result_holder<int>::get_result<int>(async::task<int> const&) [139]
                0.00    0.00       3/99          async::task<int>::~task() <cycle 1> [68]
-----------------------------------------------
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::~local_task() [187]
[185]    0.0    0.00    0.00       3         async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::wait() [185]
                0.00    0.00       3/15          async::detail::task_base::wait() [44]
-----------------------------------------------
                0.00    0.00       3/3           _ZN5async11local_spawnINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EENS_10local_taskISB_SD_EESC_OSD_ [188]
[186]    0.0    0.00    0.00       3         _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_ [186]
                0.00    0.00       3/21          _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE [32]
                0.00    0.00       3/3           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_iZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEiEC1IJSL_EEEDpOT_ [199]
                0.00    0.00       3/14          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00       3/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       3/12          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
                0.00    0.00       3/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                0.00    0.00       3/3           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[187]    0.0    0.00    0.00       3         async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::~local_task() [187]
                0.00    0.00     861/8258        async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::is_unique_ref(std::memory_order) [11]
                0.00    0.00     858/8250        std::this_thread::yield() [13]
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::wait() [185]
                0.00    0.00       3/3           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, int>::~task_func() [200]
-----------------------------------------------
                0.00    0.00       3/3           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
[188]    0.0    0.00    0.00       3         _ZN5async11local_spawnINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EENS_10local_taskISB_SD_EESC_OSD_ [188]
                0.00    0.00       3/21          _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE [32]
                0.00    0.00       3/3           _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_ [186]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [192]
[189]    0.0    0.00    0.00       3         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, void>::destroy_func() [189]
                0.00    0.00       3/6           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, void>::get_func() [125]
-----------------------------------------------
                0.00    0.00       3/3           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_iZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEiEC1IJSL_EEEDpOT_ [199]
[190]    0.0    0.00    0.00       3         _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS3_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEvE9init_funcIJSL_EEEvDpOT_ [190]
                0.00    0.00       3/21          _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE [32]
                0.00    0.00       3/24          operator new(unsigned long, void*) [29]
                0.00    0.00       3/3           _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_Lb0EEC1ISK_EEOSB_ [191]
-----------------------------------------------
                0.00    0.00       3/3           _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS3_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEvE9init_funcIJSL_EEEvDpOT_ [190]
[191]    0.0    0.00    0.00       3         _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_Lb0EEC1ISK_EEOSB_ [191]
                0.00    0.00       3/21          _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE [32]
                0.00    0.00       3/3           _ZN5async6detail9func_baseIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEC2ISK_EEOSB_ [197]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, int>::run(async::detail::task_base*) [524]
[192]    0.0    0.00    0.00       3         async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [192]
                0.00    0.00       3/3           async::detail::func_base<int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, void>::get_func() [196]
                0.00    0.00       3/3           _ZN5async6detail16invoke_fake_voidIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEEDTclcl7declvalISB_EEEEOSB_ [194]
                0.00    0.00       3/3           _ZSt4moveIRZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EONSt16remove_referenceISB_E4typeEOSB_ [210]
                0.00    0.00       3/5           void async::detail::task_result_holder<int>::set_result<int>(int&&) [140]
                0.00    0.00       3/3           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, void>::destroy_func() [189]
                0.00    0.00       3/16          async::detail::task_base::finish() <cycle 2> [45]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [154]
[193]    0.0    0.00    0.00       3         async::detail::fake_void async::detail::invoke_fake_void<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>(main::{lambda(int)#7}&&) [193]
                0.00    0.00       3/3           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}::operator()() const [214]
                0.00    0.00       3/27          main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&) [28]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [192]
[194]    0.0    0.00    0.00       3         _ZN5async6detail16invoke_fake_voidIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEEDTclcl7declvalISB_EEEEOSB_ [194]
                0.00    0.00       3/3           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}::operator()() const [215]
                0.00    0.00       3/21          _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE [32]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [154]
[195]    0.0    0.00    0.00       3         async::detail::func_base<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>::get_func() [195]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [192]
[196]    0.0    0.00    0.00       3         async::detail::func_base<int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, void>::get_func() [196]
-----------------------------------------------
                0.00    0.00       3/3           _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_Lb0EEC1ISK_EEOSB_ [191]
[197]    0.0    0.00    0.00       3         _ZN5async6detail9func_baseIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEC2ISK_EEOSB_ [197]
                0.00    0.00       3/21          _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE [32]
-----------------------------------------------
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::~local_task() [183]
[198]    0.0    0.00    0.00       3         async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [198]
                0.00    0.00       3/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       3/8           async::detail::task_result<async::detail::fake_void>::~task_result() [88]
-----------------------------------------------
                0.00    0.00       3/3           _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_ [186]
[199]    0.0    0.00    0.00       3         _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_iZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEiEC1IJSL_EEEDpOT_ [199]
                0.00    0.00       3/5           async::detail::task_result<int>::task_result() [137]
                0.00    0.00       3/3           _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS3_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEvE9init_funcIJSL_EEEvDpOT_ [190]
                0.00    0.00       3/21          _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE [32]
-----------------------------------------------
                0.00    0.00       3/3           async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::~local_task() [187]
[200]    0.0    0.00    0.00       3         async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, int>::~task_func() [200]
                0.00    0.00       3/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       3/5           async::detail::task_result<int>::~task_result() [138]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_head(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&) [204]
[201]    0.0    0.00    0.00       3         std::_Head_base<0ul, async::task<void>, false>::_M_head(std::_Head_base<0ul, async::task<void>, false>&) [201]
-----------------------------------------------
                                   3             std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::~_Tuple_impl() <cycle 1> [205]
[202]    0.0    0.00    0.00       3         std::_Head_base<0ul, async::task<void>, false>::~_Head_base() <cycle 1> [202]
                                   3             async::task<void>::~task() <cycle 1> [52]
-----------------------------------------------
                                   3             std::_Tuple_impl<1ul, async::task<int> >::~_Tuple_impl() <cycle 1> [206]
[203]    0.0    0.00    0.00       3         std::_Head_base<1ul, async::task<int>, false>::~_Head_base() <cycle 1> [203]
                                   3             async::task<int>::~task() <cycle 1> [68]
-----------------------------------------------
                0.00    0.00       1/3           async::task<void>& std::__get_helper<0ul, async::task<void>, async::task<int> >(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&) [464]
                0.00    0.00       2/3           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&) [254]
[204]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_head(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&) [204]
                0.00    0.00       3/3           std::_Head_base<0ul, async::task<void>, false>::_M_head(std::_Head_base<0ul, async::task<void>, false>&) [201]
-----------------------------------------------
                                   3             std::tuple<async::task<void>, async::task<int> >::~tuple() <cycle 1> [207]
[205]    0.0    0.00    0.00       3         std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::~_Tuple_impl() <cycle 1> [205]
                                   3             std::_Head_base<0ul, async::task<void>, false>::~_Head_base() <cycle 1> [202]
                                   3             std::_Tuple_impl<1ul, async::task<int> >::~_Tuple_impl() <cycle 1> [206]
-----------------------------------------------
                                   3             std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::~_Tuple_impl() <cycle 1> [205]
[206]    0.0    0.00    0.00       3         std::_Tuple_impl<1ul, async::task<int> >::~_Tuple_impl() <cycle 1> [206]
                                   3             std::_Head_base<1ul, async::task<int>, false>::~_Head_base() <cycle 1> [203]
-----------------------------------------------
                                   1             async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::~task_result_holder() <cycle 1> [371]
                0.00    0.00       1/99          async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}::operator()() const [493]
                0.00    0.00       1/99          async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::~when_all_state() <cycle 2> [348]
[207]    0.0    0.00    0.00       3         std::tuple<async::task<void>, async::task<int> >::~tuple() <cycle 1> [207]
                                   3             std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::~_Tuple_impl() <cycle 1> [205]
-----------------------------------------------
                0.00    0.00       1/3           async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::~when_all_state() <cycle 2> [348]
                0.00    0.00       1/3           async::event_task<std::tuple<async::task<void>, async::task<int> > >::set(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [436]
                0.00    0.00       1/3           std::tuple<async::task<void>, async::task<int> >&& async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::get_result<std::tuple<async::task<void>, async::task<int> > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&) [368]
[208]    0.0    0.00    0.00       3         std::remove_reference<std::tuple<async::task<void>, async::task<int> >&>::type&& std::move<std::tuple<async::task<void>, async::task<int> >&>(std::tuple<async::task<void>, async::task<int> >&) [208]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [154]
[209]    0.0    0.00    0.00       3         std::remove_reference<main::{lambda(int)#7}>::type&& std::move<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}&>(main::{lambda(int)#7}&&) [209]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [192]
[210]    0.0    0.00    0.00       3         _ZSt4moveIRZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EONSt16remove_referenceISB_E4typeEOSB_ [210]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::auto_partitioner_impl<int const*>::split() [111]
[211]    0.0    0.00    0.00       3         void std::advance<int const*, unsigned long>(int const*&, unsigned long) [211]
                0.00    0.00       3/11          std::iterator_traits<int const*>::iterator_category std::__iterator_category<int const*>(int const* const&) [73]
                0.00    0.00       3/3           void std::__advance<int const*, long>(int const*&, long, std::random_access_iterator_tag) [213]
-----------------------------------------------
                0.00    0.00       1/3           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}::operator()() const [493]
                0.00    0.00       1/3           bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
                0.00    0.00       1/3           void async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::set_result<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) [369]
[212]    0.0    0.00    0.00       3         std::tuple<async::task<void>, async::task<int> >&& std::forward<std::tuple<async::task<void>, async::task<int> > >(std::remove_reference<std::tuple<async::task<void>, async::task<int> > >::type&) [212]
-----------------------------------------------
                0.00    0.00       3/3           void std::advance<int const*, unsigned long>(int const*&, unsigned long) [211]
[213]    0.0    0.00    0.00       3         void std::__advance<int const*, long>(int const*&, long, std::random_access_iterator_tag) [213]
-----------------------------------------------
                0.00    0.00       3/3           async::detail::fake_void async::detail::invoke_fake_void<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>(main::{lambda(int)#7}&&) [193]
[214]    0.0    0.00    0.00       3         void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}::operator()() const [214]
                0.00    0.00       3/7           std::remove_reference<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>::type&& std::move<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>(async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&) [115]
                0.00    0.00       3/4           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
-----------------------------------------------
                0.00    0.00       3/3           _ZN5async6detail16invoke_fake_voidIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEEDTclcl7declvalISB_EEEEOSB_ [194]
[215]    0.0    0.00    0.00       3         int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}::operator()() const [215]
                0.00    0.00       3/6           std::remove_reference<async::detail::auto_partitioner_impl<int const*>&>::type&& std::move<async::detail::auto_partitioner_impl<int const*>&>(async::detail::auto_partitioner_impl<int const*>&) [130]
                0.00    0.00       3/4           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
-----------------------------------------------
                                   2             async::detail::inline_scheduler_impl::schedule(async::task_run_handle) <cycle 2> [236]
[216]    0.0    0.00    0.00       2         async::task_run_handle::run() <cycle 2> [216]
                0.00    0.00       2/18          async::detail::ref_count_ptr<async::detail::task_base>::operator->() const [34]
                0.00    0.00       2/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       2/2           async::detail::ref_count_ptr<async::detail::task_base>::operator=(decltype(nullptr)) [228]
                                   1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [407]
                                   1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [412]
-----------------------------------------------
                0.00    0.00       1/2           void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
                0.00    0.00       1/2           void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
[217]    0.0    0.00    0.00       2         async::inline_scheduler() [217]
-----------------------------------------------
                0.00    0.00       1/2           main [8]
                0.00    0.00       1/2           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [383]
[218]    0.0    0.00    0.00       2         async::task<std::tuple<async::task<void>, async::task<int> > >::~task() [218]
                0.00    0.00       2/2           async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::~basic_task() [219]
-----------------------------------------------
                0.00    0.00       2/2           async::task<std::tuple<async::task<void>, async::task<int> > >::~task() [218]
[219]    0.0    0.00    0.00       2         async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::~basic_task() [219]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::run(async::detail::task_base*) [510]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::destroy_func() [319]
[220]    0.0    0.00    0.00       2         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::get_func() [220]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, void>::destroy_func() [321]
                0.00    0.00       1/2           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, async::detail::fake_void>::run(async::detail::task_base*) [517]
[221]    0.0    0.00    0.00       2         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, void>::get_func() [221]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::run(async::detail::task_base*) [521]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::destroy_func() [323]
[222]    0.0    0.00    0.00       2         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::get_func() [222]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [407]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [325]
[223]    0.0    0.00    0.00       2         async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func() [223]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [412]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [327]
[224]    0.0    0.00    0.00       2         async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func() [224]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::run(async::detail::task_base*) [528]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::destroy_func() [329]
[225]    0.0    0.00    0.00       2         async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::get_func() [225]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::run(async::detail::task_base*) [530]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::destroy_func() [331]
[226]    0.0    0.00    0.00       2         async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::get_func() [226]
-----------------------------------------------
                0.00    0.00       1/2           void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
                0.00    0.00       1/2           void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
[227]    0.0    0.00    0.00       2         async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) [227]
-----------------------------------------------
                0.00    0.00       2/2           async::task_run_handle::run() <cycle 2> [216]
[228]    0.0    0.00    0.00       2         async::detail::ref_count_ptr<async::detail::task_base>::operator=(decltype(nullptr)) [228]
                0.00    0.00       2/99          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::remove_ref(unsigned long) <cycle 1> [76]
-----------------------------------------------
                                   2             void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&) <cycle 2> [243]
[229]    0.0    0.00    0.00       2         void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [229]
                0.00    0.00       2/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       2/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
                0.00    0.00       2/14          async::task_run_handle::task_run_handle(async::detail::ref_count_ptr<async::detail::task_base>) [50]
                0.00    0.00       2/14          async::task_run_handle::~task_run_handle() [51]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                                   2             async::detail::inline_scheduler_impl::schedule(async::task_run_handle) <cycle 2> [236]
-----------------------------------------------
                                   2             async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::~ref_count_ptr() <cycle 2> [126]
[230]    0.0    0.00    0.00       2         async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::remove_ref(unsigned long) <cycle 2> [230]
                                   1             async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::do_delete(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) <cycle 2> [349]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> async::auto_partitioner<async::int_range<int>&>(async::int_range<int>&) [293]
                0.00    0.00       1/2           async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> async::auto_partitioner<async::range<int const*>&>(async::range<int const*>&) [292]
[231]    0.0    0.00    0.00       2         async::detail::auto_grain_size(unsigned long) [231]
-----------------------------------------------
                0.00    0.00       2/2           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
[232]    0.0    0.00    0.00       2         async::task<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&) [232]
                0.00    0.00       2/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
-----------------------------------------------
                0.00    0.00       1/2           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
[233]    0.0    0.00    0.00       2         void async::detail::set_internal_task<async::task<int> >(async::task<int>&, async::detail::ref_count_ptr<async::detail::task_base>) [233]
                0.00    0.00       2/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       2/9           async::detail::ref_count_ptr<async::detail::task_base>::operator=(async::detail::ref_count_ptr<async::detail::task_base>&&) [80]
-----------------------------------------------
                                   1             async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() <cycle 2> [393]
                0.00    0.00       1/16          void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
[234]    0.0    0.00    0.00       2         async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [234]
                                   2             async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::~ref_count_ptr() <cycle 2> [126]
-----------------------------------------------
                                   1             async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() <cycle 2> [396]
                0.00    0.00       1/16          void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
[235]    0.0    0.00    0.00       2         async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [235]
                                   2             async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::~ref_count_ptr() <cycle 2> [126]
-----------------------------------------------
                                   2             void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [229]
[236]    0.0    0.00    0.00       2         async::detail::inline_scheduler_impl::schedule(async::task_run_handle) <cycle 2> [236]
                                   2             async::task_run_handle::run() <cycle 2> [216]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::~func_base() [398]
[237]    0.0    0.00    0.00       2         async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::get_func() [237]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda(int)#3}, void>::~func_base() [400]
[238]    0.0    0.00    0.00       2         async::detail::func_base<main::{lambda(int)#3}, void>::get_func() [238]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::operator()(async::detail::task_base*) [346]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda()#2}, void>::~func_base() [402]
[239]    0.0    0.00    0.00       2         async::detail::func_base<main::{lambda()#2}, void>::get_func() [239]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::operator()(async::detail::task_base*) [341]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda()#1}, void>::~func_base() [404]
[240]    0.0    0.00    0.00       2         async::detail::func_base<main::{lambda()#1}, void>::get_func() [240]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
[241]    0.0    0.00    0.00       2         void async::detail::task_base::add_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) [241]
                0.00    0.00       2/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       2/21          async::detail::is_finished(async::detail::task_state) [31]
                0.00    0.00       2/4           async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
                0.00    0.00       2/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
[242]    0.0    0.00    0.00       2         void async::detail::task_base::add_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [242]
                0.00    0.00       2/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       2/21          async::detail::is_finished(async::detail::task_state) [31]
                0.00    0.00       2/4           async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [157]
                0.00    0.00       2/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
-----------------------------------------------
                                   1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [414]
                                   1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [409]
[243]    0.0    0.00    0.00       2         void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&) <cycle 2> [243]
                0.00    0.00       2/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       2/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                                   2             void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [229]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int> >) [430]
                0.00    0.00       1/2           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void> >) [426]
[244]    0.0    0.00    0.00       2         void async::detail::task_base::run_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>&&) [244]
                0.00    0.00       2/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       2/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       2/12          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
-----------------------------------------------
                0.00    0.00       2/2           decltype (({parm#1}.end)()) std::end<async::range<int const*> >(async::range<int const*>&) [260]
[245]    0.0    0.00    0.00       2         async::range<int const*>::end() const [245]
-----------------------------------------------
                0.00    0.00       2/2           decltype (({parm#1}.begin)()) std::begin<async::range<int const*> >(async::range<int const*>&) [266]
[246]    0.0    0.00    0.00       2         async::range<int const*>::begin() const [246]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<void>) const [444]
                0.00    0.00       1/2           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<int>) const [445]
[247]    0.0    0.00    0.00       2         async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::operator->() const [247]
-----------------------------------------------
                0.00    0.00       2/2           decltype (({parm#1}.end)()) std::end<async::int_range<int> >(async::int_range<int>&) [261]
[248]    0.0    0.00    0.00       2         async::int_range<int>::end() const [248]
                0.00    0.00       2/4           async::int_range<int>::iterator::iterator(int) [162]
-----------------------------------------------
                0.00    0.00       2/2           decltype (({parm#1}.begin)()) std::begin<async::int_range<int> >(async::int_range<int>&) [267]
[249]    0.0    0.00    0.00       2         async::int_range<int>::begin() const [249]
                0.00    0.00       2/4           async::int_range<int>::iterator::iterator(int) [162]
-----------------------------------------------
                0.00    0.00       1/2           int async::parallel_reduce<int, int, main::{lambda(int, int)#8}>(std::initializer_list<int>, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [291]
                0.00    0.00       1/2           std::initializer_list<int>::end() const [447]
[250]    0.0    0.00    0.00       2         std::initializer_list<int>::begin() const [250]
-----------------------------------------------
                0.00    0.00       2/2           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&) [254]
[251]    0.0    0.00    0.00       2         std::_Head_base<0ul, async::task<void>, false>::_Head_base<async::task<void> >(async::task<void>&&) [251]
                0.00    0.00       2/4           async::task<void>::task(async::task<void>&&) [146]
                0.00    0.00       2/9           async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&) [84]
-----------------------------------------------
                0.00    0.00       2/2           std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl(std::_Tuple_impl<1ul, async::task<int> >&&) [255]
[252]    0.0    0.00    0.00       2         std::_Head_base<1ul, async::task<int>, false>::_Head_base<async::task<int> >(async::task<int>&&) [252]
                0.00    0.00       2/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       2/5           async::task<int>::task(async::task<int>&&) [134]
-----------------------------------------------
                0.00    0.00       2/2           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&) [254]
[253]    0.0    0.00    0.00       2         std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_tail(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&) [253]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple<async::task<void>, async::task<int> >::tuple(std::tuple<async::task<void>, async::task<int> >&&) [256]
[254]    0.0    0.00    0.00       2         std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&) [254]
                0.00    0.00       2/2           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_tail(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&) [253]
                0.00    0.00       2/2           std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl(std::_Tuple_impl<1ul, async::task<int> >&&) [255]
                0.00    0.00       2/2           std::remove_reference<std::_Tuple_impl<1ul, async::task<int> >&>::type&& std::move<std::_Tuple_impl<1ul, async::task<int> >&>(std::_Tuple_impl<1ul, async::task<int> >&) [265]
                0.00    0.00       2/9           async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&) [84]
                0.00    0.00       2/3           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_head(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&) [204]
                0.00    0.00       2/2           std::_Head_base<0ul, async::task<void>, false>::_Head_base<async::task<void> >(async::task<void>&&) [251]
-----------------------------------------------
                0.00    0.00       2/2           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&) [254]
[255]    0.0    0.00    0.00       2         std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl(std::_Tuple_impl<1ul, async::task<int> >&&) [255]
                0.00    0.00       2/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       2/4           std::_Tuple_impl<1ul, async::task<int> >::_M_head(std::_Tuple_impl<1ul, async::task<int> >&) [173]
                0.00    0.00       2/2           std::_Head_base<1ul, async::task<int>, false>::_Head_base<async::task<int> >(async::task<int>&&) [252]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}::operator()() const [493]
                0.00    0.00       1/2           void async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::set_result<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) [369]
[256]    0.0    0.00    0.00       2         std::tuple<async::task<void>, async::task<int> >::tuple(std::tuple<async::task<void>, async::task<int> >&&) [256]
                0.00    0.00       2/2           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&) [254]
-----------------------------------------------
                0.00    0.00       2/2           async::threadpool_scheduler* std::addressof<async::threadpool_scheduler>(async::threadpool_scheduler&) [271]
[257]    0.0    0.00    0.00       2         async::threadpool_scheduler* std::__addressof<async::threadpool_scheduler>(async::threadpool_scheduler&) [257]
-----------------------------------------------
                0.00    0.00       2/2           async::detail::inline_scheduler_impl* std::addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&) [272]
[258]    0.0    0.00    0.00       2         async::detail::inline_scheduler_impl* std::__addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&) [258]
-----------------------------------------------
                0.00    0.00       2/2           std::tuple_element<1ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<1ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&) [262]
[259]    0.0    0.00    0.00       2         async::task<int>& std::__get_helper<1ul, async::task<int>>(std::_Tuple_impl<1ul, async::task<int>>&) [259]
                0.00    0.00       2/4           std::_Tuple_impl<1ul, async::task<int> >::_M_head(std::_Tuple_impl<1ul, async::task<int> >&) [173]
-----------------------------------------------
                0.00    0.00       2/2           async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> async::auto_partitioner<async::range<int const*>&>(async::range<int const*>&) [292]
[260]    0.0    0.00    0.00       2         decltype (({parm#1}.end)()) std::end<async::range<int const*> >(async::range<int const*>&) [260]
                0.00    0.00       2/2           async::range<int const*>::end() const [245]
-----------------------------------------------
                0.00    0.00       2/2           async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> async::auto_partitioner<async::int_range<int>&>(async::int_range<int>&) [293]
[261]    0.0    0.00    0.00       2         decltype (({parm#1}.end)()) std::end<async::int_range<int> >(async::int_range<int>&) [261]
                0.00    0.00       2/2           async::int_range<int>::end() const [248]
-----------------------------------------------
                0.00    0.00       1/2           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}::operator()(std::tuple<async::task<void>, async::task<int> >) const [485]
                0.00    0.00       1/2           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<int>) const [445]
[262]    0.0    0.00    0.00       2         std::tuple_element<1ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<1ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&) [262]
                0.00    0.00       2/2           async::task<int>& std::__get_helper<1ul, async::task<int>>(std::_Tuple_impl<1ul, async::task<int>>&) [259]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [295]
                0.00    0.00       1/2           async::task<std::tuple<async::task<void>, async::task<int> > >::task(async::task<std::tuple<async::task<void>, async::task<int> > >&&) [297]
[263]    0.0    0.00    0.00       2         std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::task<std::tuple<async::task<void>, async::task<int> > >&>(async::task<std::tuple<async::task<void>, async::task<int> > >&) [263]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [372]
                0.00    0.00       1/2           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [374]
[264]    0.0    0.00    0.00       2         std::remove_reference<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>::type&& std::move<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&) [264]
-----------------------------------------------
                0.00    0.00       2/2           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&) [254]
[265]    0.0    0.00    0.00       2         std::remove_reference<std::_Tuple_impl<1ul, async::task<int> >&>::type&& std::move<std::_Tuple_impl<1ul, async::task<int> >&>(std::_Tuple_impl<1ul, async::task<int> >&) [265]
-----------------------------------------------
                0.00    0.00       2/2           async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> async::auto_partitioner<async::range<int const*>&>(async::range<int const*>&) [292]
[266]    0.0    0.00    0.00       2         decltype (({parm#1}.begin)()) std::begin<async::range<int const*> >(async::range<int const*>&) [266]
                0.00    0.00       2/2           async::range<int const*>::begin() const [246]
-----------------------------------------------
                0.00    0.00       2/2           async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> async::auto_partitioner<async::int_range<int>&>(async::int_range<int>&) [293]
[267]    0.0    0.00    0.00       2         decltype (({parm#1}.begin)()) std::begin<async::int_range<int> >(async::int_range<int>&) [267]
                0.00    0.00       2/2           async::int_range<int>::begin() const [249]
-----------------------------------------------
                0.00    0.00       1/2           async::task<std::tuple<std::decay<async::task<void>&>::type, std::decay<async::task<int>&>::type> > async::when_all<async::task<void>&, async::task<int>&>(async::task<void>&, async::task<int>&) [434]
                0.00    0.00       1/2           void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
[268]    0.0    0.00    0.00       2         async::task<int>& std::forward<async::task<int>&>(std::remove_reference<async::task<int>&>::type&) [268]
-----------------------------------------------
                0.00    0.00       1/2           int async::parallel_map_reduce<async::threadpool_scheduler, async::range<int const*>&, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [294]
                0.00    0.00       1/2           std::enable_if<!async::detail::is_partitioner<std::decay<async::range<int const*>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> >::type async::to_partitioner<async::range<int const*>&>(async::range<int const*>&) [285]
[269]    0.0    0.00    0.00       2         async::range<int const*>& std::forward<async::range<int const*>&>(std::remove_reference<async::range<int const*>&>::type&) [269]
-----------------------------------------------
                0.00    0.00       1/2           void async::parallel_for<async::threadpool_scheduler, async::int_range<int>&, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::int_range<int>&, main::{lambda(int)#7} const&) [283]
                0.00    0.00       1/2           std::enable_if<!async::detail::is_partitioner<std::decay<async::int_range<int>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> >::type async::to_partitioner<async::int_range<int>&>(async::int_range<int>&) [286]
[270]    0.0    0.00    0.00       2         async::int_range<int>& std::forward<async::int_range<int>&>(std::remove_reference<async::int_range<int>&>::type&) [270]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
[271]    0.0    0.00    0.00       2         async::threadpool_scheduler* std::addressof<async::threadpool_scheduler>(async::threadpool_scheduler&) [271]
                0.00    0.00       2/2           async::threadpool_scheduler* std::__addressof<async::threadpool_scheduler>(async::threadpool_scheduler&) [257]
-----------------------------------------------
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       1/2           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
[272]    0.0    0.00    0.00       2         async::detail::inline_scheduler_impl* std::addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&) [272]
                0.00    0.00       2/2           async::detail::inline_scheduler_impl* std::__addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&) [258]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [648]
[273]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [273]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [274]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [273]
[274]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [274]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::when_all_state(unsigned long) [347]
[275]    0.0    0.00    0.00       1         async::event_task<std::tuple<async::task<void>, async::task<int> > >::event_task() [275]
                0.00    0.00       1/1           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::basic_event() [317]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::~when_all_state() <cycle 2> [348]
[276]    0.0    0.00    0.00       1         async::event_task<std::tuple<async::task<void>, async::task<int> > >::~event_task() [276]
                0.00    0.00       1/1           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::~basic_event() [318]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [389]
[277]    0.0    0.00    0.00       1         async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::get() [277]
                0.00    0.00       1/5           async::detail::task_result<async::detail::fake_void>::wait_and_throw() [136]
                0.00    0.00       1/10          async::task<void>::task() [74]
                0.00    0.00       1/6           async::detail::fake_void_to_void(async::detail::fake_void) [127]
                0.00    0.00       1/6           async::detail::fake_void async::detail::task_result_holder<async::detail::fake_void>::get_result<void>(async::task<void> const&) [128]
                0.00    0.00       1/99          async::task<void>::~task() <cycle 1> [52]
-----------------------------------------------
                0.00    0.00       1/1           async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::~local_task() [280]
[278]    0.0    0.00    0.00       1         async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::wait() [278]
                0.00    0.00       1/15          async::detail::task_base::wait() [44]
-----------------------------------------------
                0.00    0.00       1/1           async::local_task<main::{lambda()#6}&&, async::threadpool_scheduler> async::local_spawn<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>, async::threadpool_scheduler&&) [282]
[279]    0.0    0.00    0.00       1         _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_ [279]
                0.00    0.00       1/1           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEES4_EC1IJSJ_EEEDpOT_ [420]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&) [121]
                0.00    0.00       1/14          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00       1/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       1/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       1/12          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [389]
[280]    0.0    0.00    0.00       1         async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::~local_task() [280]
                0.00    0.00       1/1           async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::wait() [278]
                0.00    0.00       1/8258        async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::is_unique_ref(std::memory_order) [11]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [421]
-----------------------------------------------
                0.00    0.00       1/1           int async::parallel_reduce<int, int, main::{lambda(int, int)#8}>(std::initializer_list<int>, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [291]
[281]    0.0    0.00    0.00       1         async::range<int const*> async::make_range<int const*>(int const*, int const*) [281]
                0.00    0.00       1/1           async::range<int const*>::range(int const*, int const*) [307]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [389]
[282]    0.0    0.00    0.00       1         async::local_task<main::{lambda()#6}&&, async::threadpool_scheduler> async::local_spawn<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>, async::threadpool_scheduler&&) [282]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&) [121]
                0.00    0.00       1/1           _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_ [279]
-----------------------------------------------
                0.00    0.00       1/1           void async::parallel_for<async::int_range<int>, main::{lambda(int)#7}>(async::int_range<int>&&, main::{lambda(int)#7} const&) [284]
[283]    0.0    0.00    0.00       1         void async::parallel_for<async::threadpool_scheduler, async::int_range<int>&, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::int_range<int>&, main::{lambda(int)#7} const&) [283]
                0.00    0.00       1/2           async::int_range<int>& std::forward<async::int_range<int>&>(std::remove_reference<async::int_range<int>&>::type&) [270]
                0.00    0.00       1/1           std::enable_if<!async::detail::is_partitioner<std::decay<async::int_range<int>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> >::type async::to_partitioner<async::int_range<int>&>(async::int_range<int>&) [286]
                0.00    0.00       1/4           void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [158]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[284]    0.0    0.00    0.00       1         void async::parallel_for<async::int_range<int>, main::{lambda(int)#7}>(async::int_range<int>&&, main::{lambda(int)#7} const&) [284]
                0.00    0.00       1/7           async::default_scheduler() [108]
                0.00    0.00       1/1           void async::parallel_for<async::threadpool_scheduler, async::int_range<int>&, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::int_range<int>&, main::{lambda(int)#7} const&) [283]
-----------------------------------------------
                0.00    0.00       1/1           int async::parallel_map_reduce<async::threadpool_scheduler, async::range<int const*>&, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [294]
[285]    0.0    0.00    0.00       1         std::enable_if<!async::detail::is_partitioner<std::decay<async::range<int const*>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> >::type async::to_partitioner<async::range<int const*>&>(async::range<int const*>&) [285]
                0.00    0.00       1/2           async::range<int const*>& std::forward<async::range<int const*>&>(std::remove_reference<async::range<int const*>&>::type&) [269]
                0.00    0.00       1/1           async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> async::auto_partitioner<async::range<int const*>&>(async::range<int const*>&) [292]
-----------------------------------------------
                0.00    0.00       1/1           void async::parallel_for<async::threadpool_scheduler, async::int_range<int>&, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::int_range<int>&, main::{lambda(int)#7} const&) [283]
[286]    0.0    0.00    0.00       1         std::enable_if<!async::detail::is_partitioner<std::decay<async::int_range<int>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> >::type async::to_partitioner<async::int_range<int>&>(async::int_range<int>&) [286]
                0.00    0.00       1/2           async::int_range<int>& std::forward<async::int_range<int>&>(std::remove_reference<async::int_range<int>&>::type&) [270]
                0.00    0.00       1/1           async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> async::auto_partitioner<async::int_range<int>&>(async::int_range<int>&) [293]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[287]    0.0    0.00    0.00       1         void async::parallel_invoke<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#5}&&, main::{lambda()#6}&&) [287]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&) [119]
                0.00    0.00       1/7           async::default_scheduler() [108]
                0.00    0.00       1/6           main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [131]
                0.00    0.00       1/1           std::enable_if<async::detail::is_scheduler<async::threadpool_scheduler>::value, void>::type async::parallel_invoke<async::threadpool_scheduler, main::{lambda()#5}, main::{lambda()#6}>(async::detail&, main::{lambda()#5}&&, main::{lambda()#6}&&) [288]
-----------------------------------------------
                0.00    0.00       1/1           void async::parallel_invoke<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#5}&&, main::{lambda()#6}&&) [287]
[288]    0.0    0.00    0.00       1         std::enable_if<async::detail::is_scheduler<async::threadpool_scheduler>::value, void>::type async::parallel_invoke<async::threadpool_scheduler, main::{lambda()#5}, main::{lambda()#6}>(async::detail&, main::{lambda()#5}&&, main::{lambda()#6}&&) [288]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&) [119]
                0.00    0.00       1/6           main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [131]
                0.00    0.00       1/1           std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> std::forward_as_tuple<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#6}) [467]
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [389]
-----------------------------------------------
                0.00    0.00       1/1           int async::parallel_reduce<async::range<int const*>, int, main::{lambda(int, int)#8}>(async::range<int const*>&&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [290]
[289]    0.0    0.00    0.00       1         int async::parallel_reduce<async::threadpool_scheduler, async::range<int const*>&, int, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [289]
                0.00    0.00       1/1           int async::parallel_map_reduce<async::threadpool_scheduler, async::range<int const*>&, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [294]
-----------------------------------------------
                0.00    0.00       1/1           int async::parallel_reduce<int, int, main::{lambda(int, int)#8}>(std::initializer_list<int>, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [291]
[290]    0.0    0.00    0.00       1         int async::parallel_reduce<async::range<int const*>, int, main::{lambda(int, int)#8}>(async::range<int const*>&&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [290]
                0.00    0.00       1/7           async::default_scheduler() [108]
                0.00    0.00       1/1           int async::parallel_reduce<async::threadpool_scheduler, async::range<int const*>&, int, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [289]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[291]    0.0    0.00    0.00       1         int async::parallel_reduce<int, int, main::{lambda(int, int)#8}>(std::initializer_list<int>, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [291]
                0.00    0.00       1/1           std::initializer_list<int>::end() const [447]
                0.00    0.00       1/2           std::initializer_list<int>::begin() const [250]
                0.00    0.00       1/1           async::range<int const*> async::make_range<int const*>(int const*, int const*) [281]
                0.00    0.00       1/1           int async::parallel_reduce<async::range<int const*>, int, main::{lambda(int, int)#8}>(async::range<int const*>&&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [290]
-----------------------------------------------
                0.00    0.00       1/1           std::enable_if<!async::detail::is_partitioner<std::decay<async::range<int const*>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> >::type async::to_partitioner<async::range<int const*>&>(async::range<int const*>&) [285]
[292]    0.0    0.00    0.00       1         async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> async::auto_partitioner<async::range<int const*>&>(async::range<int const*>&) [292]
                0.00    0.00       2/2           decltype (({parm#1}.end)()) std::end<async::range<int const*> >(async::range<int const*>&) [260]
                0.00    0.00       2/2           decltype (({parm#1}.begin)()) std::begin<async::range<int const*> >(async::range<int const*>&) [266]
                0.00    0.00       1/2           async::detail::auto_grain_size(unsigned long) [231]
                0.00    0.00       1/8           std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*) [106]
                0.00    0.00       1/8           async::detail::auto_partitioner_impl<int const*>::auto_partitioner_impl(int const*, int const*, unsigned long) [92]
-----------------------------------------------
                0.00    0.00       1/1           std::enable_if<!async::detail::is_partitioner<std::decay<async::int_range<int>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> >::type async::to_partitioner<async::int_range<int>&>(async::int_range<int>&) [286]
[293]    0.0    0.00    0.00       1         async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> async::auto_partitioner<async::int_range<int>&>(async::int_range<int>&) [293]
                0.00    0.00       2/2           decltype (({parm#1}.end)()) std::end<async::int_range<int> >(async::int_range<int>&) [261]
                0.00    0.00       2/2           decltype (({parm#1}.begin)()) std::begin<async::int_range<int> >(async::int_range<int>&) [267]
                0.00    0.00       1/2           async::detail::auto_grain_size(unsigned long) [231]
                0.00    0.00       1/9           std::iterator_traits<async::int_range<int>::iterator>::difference_type std::distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator) [85]
                0.00    0.00       1/8           async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::auto_partitioner_impl(async::int_range<int>::iterator, async::int_range<int>::iterator, unsigned long) [91]
-----------------------------------------------
                0.00    0.00       1/1           int async::parallel_reduce<async::threadpool_scheduler, async::range<int const*>&, int, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [289]
[294]    0.0    0.00    0.00       1         int async::parallel_map_reduce<async::threadpool_scheduler, async::range<int const*>&, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [294]
                0.00    0.00       1/2           async::range<int const*>& std::forward<async::range<int const*>&>(std::remove_reference<async::range<int const*>&>::type&) [269]
                0.00    0.00       1/1           std::enable_if<!async::detail::is_partitioner<std::decay<async::range<int const*>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> >::type async::to_partitioner<async::range<int const*>&>(async::range<int const*>&) [285]
                0.00    0.00       1/4           int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [159]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::detail::continuation_traits&&) [296]
[295]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [295]
                0.00    0.00       1/2           std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::task<std::tuple<async::task<void>, async::task<int> > >&>(async::task<std::tuple<async::task<void>, async::task<int> > >&) [263]
                0.00    0.00       1/8           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&) [104]
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[296]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::detail::continuation_traits&&) [296]
                0.00    0.00       1/7           async::default_scheduler() [108]
                0.00    0.00       1/8           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&) [104]
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [295]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [382]
[297]    0.0    0.00    0.00       1         async::task<std::tuple<async::task<void>, async::task<int> > >::task(async::task<std::tuple<async::task<void>, async::task<int> > >&&) [297]
                0.00    0.00       1/2           std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::task<std::tuple<async::task<void>, async::task<int> > >&>(async::task<std::tuple<async::task<void>, async::task<int> > >&) [263]
                0.00    0.00       1/1           async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task(async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >&&) [312]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task() [316]
[298]    0.0    0.00    0.00       1         async::task<std::tuple<async::task<void>, async::task<int> > >::task() [298]
                0.00    0.00       1/1           async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task() [313]
-----------------------------------------------
                0.00    0.00       1/1           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}::operator()(std::tuple<async::task<void>, async::task<int> >) const [485]
[299]    0.0    0.00    0.00       1         async::task<int>::get() [299]
                0.00    0.00       1/1           async::detail::basic_task<int>::get_internal() const [438]
                0.00    0.00       1/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       1/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/4           int async::detail::fake_void_to_void<int>(int&&) [155]
                0.00    0.00       1/5           int&& async::detail::task_result_holder<int>::get_result<int>(async::task<int> const&) [139]
                0.00    0.00       1/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<main::{lambda(int)#3}>(async::detail::continuation_traits&&) [302]
[300]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<async::threadpool_scheduler, main::{lambda(int)#3}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [300]
                0.00    0.00       1/8           main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&) [105]
                0.00    0.00       1/10          std::remove_reference<async::task<int>&>::type&& std::move<async::task<int>&>(async::task<int>&) [77]
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
[301]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<int>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [301]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&) [117]
                0.00    0.00       1/10          std::remove_reference<async::task<int>&>::type&& std::move<async::task<int>&>(async::task<int>&) [77]
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[302]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<main::{lambda(int)#3}>(async::detail::continuation_traits&&) [302]
                0.00    0.00       1/7           async::default_scheduler() [108]
                0.00    0.00       1/8           main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&) [105]
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<async::threadpool_scheduler, main::{lambda(int)#3}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [300]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<int>) const [445]
[303]    0.0    0.00    0.00       1         async::task<int>::operator=(async::task<int>&&) [303]
                0.00    0.00       1/1           async::detail::basic_task<int>::operator=(async::detail::basic_task<int>&&) [314]
                0.00    0.00       1/10          std::remove_reference<async::task<int>&>::type&& std::move<async::task<int>&>(async::task<int>&) [77]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[304]    0.0    0.00    0.00       1         async::task<void>::get() [304]
                0.00    0.00       1/1           async::detail::basic_task<void>::get_internal() const [441]
                0.00    0.00       1/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       1/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/6           async::detail::fake_void async::detail::task_result_holder<async::detail::fake_void>::get_result<void>(async::task<void> const&) [128]
                0.00    0.00       1/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       1/6           async::detail::fake_void_to_void(async::detail::fake_void) [127]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
[305]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<void>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [305]
                0.00    0.00       1/8           std::remove_reference<async::task<void>&>::type&& std::move<async::task<void>&>(async::task<void>&) [102]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&) [116]
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<void>) const [444]
[306]    0.0    0.00    0.00       1         async::task<void>::operator=(async::task<void>&&) [306]
                0.00    0.00       1/8           std::remove_reference<async::task<void>&>::type&& std::move<async::task<void>&>(async::task<void>&) [102]
                0.00    0.00       1/1           async::detail::basic_task<void>::operator=(async::detail::basic_task<void>&&) [315]
-----------------------------------------------
                0.00    0.00       1/1           async::range<int const*> async::make_range<int const*>(int const*, int const*) [281]
[307]    0.0    0.00    0.00       1         async::range<int const*>::range(int const*, int const*) [307]
-----------------------------------------------
                0.00    0.00       1/1           decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#2}>)())) async::spawn<main::{lambda()#2}>(main::{lambda()#2}&&) [310]
[308]    0.0    0.00    0.00       1         async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
                0.00    0.00       2/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       2/7           async::task<int>::internal_task_type* async::detail::get_internal_task<async::task<int> >(async::task<int> const&) [109]
                0.00    0.00       1/6           async::task<int>::task() [123]
                0.00    0.00       1/7           main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&) [118]
                0.00    0.00       1/7           async::detail::task_base::operator new(unsigned long) [113]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::task_func<{lambda()#2}>({lambda()#2}&&) [423]
                0.00    0.00       1/2           void async::detail::set_internal_task<async::task<int> >(async::task<int>&, async::detail::ref_count_ptr<async::detail::task_base>) [233]
                0.00    0.00       1/14          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00       1/12          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
-----------------------------------------------
                0.00    0.00       1/1           decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#1}>)())) async::spawn<main::{lambda()#1}>(main::{lambda()#1}&&) [311]
[309]    0.0    0.00    0.00       1         async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
                0.00    0.00       2/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       2/11          async::task<void>::internal_task_type* async::detail::get_internal_task<async::task<void> >(async::task<void> const&) [70]
                0.00    0.00       1/10          async::task<void>::task() [74]
                0.00    0.00       1/7           main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&) [120]
                0.00    0.00       1/7           async::detail::task_base::operator new(unsigned long) [113]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::task_func<{lambda()#1}>({lambda()#1}&&) [418]
                0.00    0.00       1/4           void async::detail::set_internal_task<async::task<void> >(async::task<void>&, async::detail::ref_count_ptr<async::detail::task_base>) [156]
                0.00    0.00       1/14          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00       1/12          void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [62]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[310]    0.0    0.00    0.00       1         decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#2}>)())) async::spawn<main::{lambda()#2}>(main::{lambda()#2}&&) [310]
                0.00    0.00       1/7           async::default_scheduler() [108]
                0.00    0.00       1/7           main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&) [118]
                0.00    0.00       1/1           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[311]    0.0    0.00    0.00       1         decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#1}>)())) async::spawn<main::{lambda()#1}>(main::{lambda()#1}&&) [311]
                0.00    0.00       1/7           main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&) [120]
                0.00    0.00       1/7           async::default_scheduler() [108]
                0.00    0.00       1/1           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
-----------------------------------------------
                0.00    0.00       1/1           async::task<std::tuple<async::task<void>, async::task<int> > >::task(async::task<std::tuple<async::task<void>, async::task<int> > >&&) [297]
[312]    0.0    0.00    0.00       1         async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task(async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >&&) [312]
                0.00    0.00       1/53          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [20]
-----------------------------------------------
                0.00    0.00       1/1           async::task<std::tuple<async::task<void>, async::task<int> > >::task() [298]
[313]    0.0    0.00    0.00       1         async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task() [313]
                0.00    0.00       1/17          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr() [36]
-----------------------------------------------
                0.00    0.00       1/1           async::task<int>::operator=(async::task<int>&&) [303]
[314]    0.0    0.00    0.00       1         async::detail::basic_task<int>::operator=(async::detail::basic_task<int>&&) [314]
                0.00    0.00       1/9           async::detail::ref_count_ptr<async::detail::task_base>::operator=(async::detail::ref_count_ptr<async::detail::task_base>&&) [80]
-----------------------------------------------
                0.00    0.00       1/1           async::task<void>::operator=(async::task<void>&&) [306]
[315]    0.0    0.00    0.00       1         async::detail::basic_task<void>::operator=(async::detail::basic_task<void>&&) [315]
                0.00    0.00       1/9           async::detail::ref_count_ptr<async::detail::task_base>::operator=(async::detail::ref_count_ptr<async::detail::task_base>&&) [80]
-----------------------------------------------
                0.00    0.00       1/1           async::task<std::tuple<std::decay<async::task<void>&>::type, std::decay<async::task<int>&>::type> > async::when_all<async::task<void>&, async::task<int>&>(async::task<void>&, async::task<int>&) [434]
[316]    0.0    0.00    0.00       1         async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task() [316]
                0.00    0.00       3/18          async::detail::ref_count_ptr<async::detail::task_base>::operator->() const [34]
                0.00    0.00       1/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00       1/1           async::task<std::tuple<async::task<void>, async::task<int> > >::task() [298]
                0.00    0.00       1/1           async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base> const&) [336]
                0.00    0.00       1/1           void async::detail::set_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > >&, async::detail::ref_count_ptr<async::detail::task_base>) [364]
                0.00    0.00       1/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                0.00    0.00       1/1           async::event_task<std::tuple<async::task<void>, async::task<int> > >::event_task() [275]
[317]    0.0    0.00    0.00       1         async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::basic_event() [317]
                0.00    0.00       1/7           async::detail::task_base::operator new(unsigned long) [113]
                0.00    0.00       1/1           async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::task_result() [334]
                0.00    0.00       1/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       1/18          async::detail::ref_count_ptr<async::detail::task_base>::operator->() const [34]
-----------------------------------------------
                0.00    0.00       1/1           async::event_task<std::tuple<async::task<void>, async::task<int> > >::~event_task() [276]
[318]    0.0    0.00    0.00       1         async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::~basic_event() [318]
                0.00    0.00       1/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00       1/1           async::detail::task_base::ready() const [446]
                0.00    0.00       1/18          async::detail::ref_count_ptr<async::detail::task_base>::operator->() const [34]
                0.00    0.00       1/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::operator()(async::detail::task_base*) [341]
[319]    0.0    0.00    0.00       1         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::destroy_func() [319]
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::~root_exec_func() [340]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::get_func() [220]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::task_func<{lambda()#1}>({lambda()#1}&&) [418]
[320]    0.0    0.00    0.00       1         void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::init_func<{lambda()#1}>({lambda()#1}&&) [320]
                0.00    0.00       1/7           main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&) [120]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::root_exec_func<{lambda()#1}>({lambda()#1}&&) [339]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [343]
[321]    0.0    0.00    0.00       1         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, void>::destroy_func() [321]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, void>::get_func() [221]
-----------------------------------------------
                0.00    0.00       1/1           _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEES4_EC1IJSJ_EEEDpOT_ [420]
[322]    0.0    0.00    0.00       1         _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS3_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEEvE9init_funcIJSJ_EEEvDpOT_ [322]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&) [121]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
                0.00    0.00       1/1           _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEC1ISI_EEOSD_ [342]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::operator()(async::detail::task_base*) [346]
[323]    0.0    0.00    0.00       1         async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::destroy_func() [323]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::get_func() [222]
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::~root_exec_func() [345]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::task_func<{lambda()#2}>({lambda()#2}&&) [423]
[324]    0.0    0.00    0.00       1         void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::init_func<{lambda()#2}>({lambda()#2}&&) [324]
                0.00    0.00       1/7           main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&) [118]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::root_exec_func<{lambda()#2}>({lambda()#2}&&) [344]
-----------------------------------------------
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
[325]    0.0    0.00    0.00       1         async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [325]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func() [223]
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [377]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [410]
[326]    0.0    0.00    0.00       1         void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [326]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&) [117]
                0.00    0.00       1/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [376]
-----------------------------------------------
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
[327]    0.0    0.00    0.00       1         async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [327]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func() [224]
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [380]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [415]
[328]    0.0    0.00    0.00       1         void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [328]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&) [116]
                0.00    0.00       1/9           async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&) [84]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [379]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
[329]    0.0    0.00    0.00       1         async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::destroy_func() [329]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::get_func() [225]
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [383]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::task_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [427]
[330]    0.0    0.00    0.00       1         void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [330]
                0.00    0.00       1/8           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&) [104]
                0.00    0.00       1/4           async::task<std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::task<std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > > >::type&) [177]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [382]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
[331]    0.0    0.00    0.00       1         async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::destroy_func() [331]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::get_func() [226]
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [386]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::task_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [431]
[332]    0.0    0.00    0.00       1         void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [332]
                0.00    0.00       1/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       1/8           main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&) [105]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [385]
-----------------------------------------------
                                   1             async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
[333]    0.0    0.00    0.00       1         async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::destroy(async::detail::task_base*) <cycle 1> [333]
                0.00    0.00       1/7           async::detail::task_base::operator delete(void*) [112]
                                   1             async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::~task_result() <cycle 1> [335]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::basic_event() [317]
[334]    0.0    0.00    0.00       1         async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::task_result() [334]
                0.00    0.00       1/1           async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::task_result_holder() [370]
-----------------------------------------------
                                   1             async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::destroy(async::detail::task_base*) <cycle 1> [333]
[335]    0.0    0.00    0.00       1         async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::~task_result() <cycle 1> [335]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                                   1             async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::~task_result_holder() <cycle 1> [371]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task() [316]
[336]    0.0    0.00    0.00       1         async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base> const&) [336]
                0.00    0.00       1/1           async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref(unsigned long) [338]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::when_all_state(unsigned long) [347]
[337]    0.0    0.00    0.00       1         async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::ref_count_base(unsigned long) [337]
                0.00    0.00       1/16          std::atomic<unsigned long>::atomic(unsigned long) [39]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base> const&) [336]
[338]    0.0    0.00    0.00       1         async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref(unsigned long) [338]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::init_func<{lambda()#1}>({lambda()#1}&&) [320]
[339]    0.0    0.00    0.00       1         async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::root_exec_func<{lambda()#1}>({lambda()#1}&&) [339]
                0.00    0.00       1/7           main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&) [120]
                0.00    0.00       1/1           async::detail::func_base<main::{lambda()#1}, void>::func_base<{lambda()#1}>({lambda()#1}&&) [403]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::destroy_func() [319]
[340]    0.0    0.00    0.00       1         async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::~root_exec_func() [340]
                0.00    0.00       1/1           async::detail::func_base<main::{lambda()#1}, void>::~func_base() [404]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::run(async::detail::task_base*) [510]
[341]    0.0    0.00    0.00       1         async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::operator()(async::detail::task_base*) [341]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda()#1}, void>::get_func() [240]
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<main::{lambda()#1}, void>(main::{lambda()#1}&&) [355]
                0.00    0.00       1/1           std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&) [476]
                0.00    0.00       1/9           async::detail::task_result_holder<async::detail::fake_void>::set_result(async::detail::fake_void) [81]
                0.00    0.00       1/16          async::detail::task_base::finish() <cycle 2> [45]
                0.00    0.00       1/1           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::destroy_func() [319]
-----------------------------------------------
                0.00    0.00       1/1           _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS3_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEEvE9init_funcIJSJ_EEEvDpOT_ [322]
[342]    0.0    0.00    0.00       1         _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEC1ISI_EEOSD_ [342]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&) [121]
                0.00    0.00       1/1           _ZN5async6detail9func_baseIZNS0_24parallel_invoke_internalILm0ELm2EE3runINS_20threadpool_schedulerESt5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_vEC2ISH_EEOSC_ [406]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, async::detail::fake_void>::run(async::detail::task_base*) [517]
[343]    0.0    0.00    0.00       1         async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [343]
                0.00    0.00       1/1           std::remove_reference<main::{lambda()#6}&&>::type&& std::move<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}&>(main::{lambda()#6}&&) [477]
                0.00    0.00       1/1           async::detail::func_base<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>::get_func() [405]
                0.00    0.00       1/9           async::detail::task_result_holder<async::detail::fake_void>::set_result(async::detail::fake_void) [81]
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>(main::{lambda()#6}&&) [360]
                0.00    0.00       1/1           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, void>::destroy_func() [321]
                0.00    0.00       1/16          async::detail::task_base::finish() <cycle 2> [45]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::init_func<{lambda()#2}>({lambda()#2}&&) [324]
[344]    0.0    0.00    0.00       1         async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::root_exec_func<{lambda()#2}>({lambda()#2}&&) [344]
                0.00    0.00       1/7           main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&) [118]
                0.00    0.00       1/1           async::detail::func_base<main::{lambda()#2}, void>::func_base<{lambda()#2}>({lambda()#2}&&) [401]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::destroy_func() [323]
[345]    0.0    0.00    0.00       1         async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::~root_exec_func() [345]
                0.00    0.00       1/1           async::detail::func_base<main::{lambda()#2}, void>::~func_base() [402]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::run(async::detail::task_base*) [521]
[346]    0.0    0.00    0.00       1         async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::operator()(async::detail::task_base*) [346]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda()#2}, void>::get_func() [239]
                0.00    0.00       1/1           decltype (((declval<main::{lambda()#2}>)())()) async::detail::invoke_fake_void<main::{lambda()#2}, void>(main::{lambda()#2}&&) [354]
                0.00    0.00       1/1           std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&) [475]
                0.00    0.00       1/5           void async::detail::task_result_holder<int>::set_result<int>(int&&) [140]
                0.00    0.00       1/1           async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::destroy_func() [323]
                0.00    0.00       1/16          async::detail::task_base::finish() <cycle 2> [45]
-----------------------------------------------
                0.00    0.00       1/1           async::task<std::tuple<std::decay<async::task<void>&>::type, std::decay<async::task<int>&>::type> > async::when_all<async::task<void>&, async::task<int>&>(async::task<void>&, async::task<int>&) [434]
[347]    0.0    0.00    0.00       1         async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::when_all_state(unsigned long) [347]
                0.00    0.00       1/1           async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::ref_count_base(unsigned long) [337]
                0.00    0.00       1/1           async::event_task<std::tuple<async::task<void>, async::task<int> > >::event_task() [275]
                0.00    0.00       1/1           std::tuple<async::task<void>, async::task<int> >::tuple<async::task<void>, async::task<int>, true>() [461]
-----------------------------------------------
                                   1             async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::do_delete(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) <cycle 2> [349]
[348]    0.0    0.00    0.00       1         async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::~when_all_state() <cycle 2> [348]
                0.00    0.00       1/3           std::remove_reference<std::tuple<async::task<void>, async::task<int> >&>::type&& std::move<std::tuple<async::task<void>, async::task<int> >&>(std::tuple<async::task<void>, async::task<int> >&) [208]
                0.00    0.00       1/99          std::tuple<async::task<void>, async::task<int> >::~tuple() <cycle 1> [207]
                0.00    0.00       1/1           async::event_task<std::tuple<async::task<void>, async::task<int> > >::~event_task() [276]
                                   1             async::event_task<std::tuple<async::task<void>, async::task<int> > >::set(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [436]
-----------------------------------------------
                                   1             async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::remove_ref(unsigned long) <cycle 2> [230]
[349]    0.0    0.00    0.00       1         async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::do_delete(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) <cycle 2> [349]
                                   1             async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::~when_all_state() <cycle 2> [348]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
[350]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [350]
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [356]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
[351]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [351]
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [357]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
[352]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&) [352]
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [358]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
[353]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&) [353]
                0.00    0.00       1/1           decltype (((declval<async::detail::void_to_fake_void>)())()) async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [359]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::operator()(async::detail::task_base*) [346]
[354]    0.0    0.00    0.00       1         decltype (((declval<main::{lambda()#2}>)())()) async::detail::invoke_fake_void<main::{lambda()#2}, void>(main::{lambda()#2}&&) [354]
                0.00    0.00       1/7           main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&) [118]
                0.00    0.00       1/1           main::{lambda()#2}::operator()() const [487]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::operator()(async::detail::task_base*) [341]
[355]    0.0    0.00    0.00       1         async::detail::fake_void async::detail::invoke_fake_void<main::{lambda()#1}, void>(main::{lambda()#1}&&) [355]
                0.00    0.00       1/1           main::{lambda()#1}::operator()() const [490]
                0.00    0.00       1/7           main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&) [120]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [350]
[356]    0.0    0.00    0.00       1         async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [356]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}::operator()() const [491]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}&& std::forward<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}&&, async::task<void>&&)::{lambda()#1}>(std::remove_reference<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}>::type&) [481]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [351]
[357]    0.0    0.00    0.00       1         async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [357]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}&& std::forward<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}&&, async::task<int>&&)::{lambda()#1}>(std::remove_reference<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}>::type&) [482]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}::operator()() const [492]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&) [352]
[358]    0.0    0.00    0.00       1         async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [358]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}::operator()() const [493]
                0.00    0.00       1/1           _ZSt7forwardIZN5async6detail16invoke_fake_voidIZ4mainEUlSt5tupleIJNS0_4taskIvEENS4_IiEEEEE2_S7_EENS1_17void_to_fake_voidIDTclcl7declvalIT_EEcl7declvalIT0_EEEEE4typeEOSA_OSB_EUlvE_ESF_RNSt16remove_referenceISA_E4typeE [483]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&) [353]
[359]    0.0    0.00    0.00       1         decltype (((declval<async::detail::void_to_fake_void>)())()) async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [359]
                0.00    0.00       1/1           _ZSt7forwardIZN5async6detail16invoke_fake_voidIZ4mainEUliE1_iEENS1_17void_to_fake_voidIDTclcl7declvalIT_EEcl7declvalIT0_EEEEE4typeEOS5_OS6_EUlvE_ESA_RNSt16remove_referenceIS5_E4typeE [484]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}::operator()() const [494]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [343]
[360]    0.0    0.00    0.00       1         async::detail::fake_void async::detail::invoke_fake_void<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>(main::{lambda()#6}&&) [360]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&) [121]
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}::operator()() const [495]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::basic_task<int>::get_internal() const [438]
[361]    0.0    0.00    0.00       1         async::detail::basic_task<int>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<int> >(async::detail::basic_task<int> const&) [361]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::basic_task<void>::get_internal() const [441]
[362]    0.0    0.00    0.00       1         async::detail::basic_task<void>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<void> >(async::detail::basic_task<void> const&) [362]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
-----------------------------------------------
                0.00    0.00       1/1           bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
[363]    0.0    0.00    0.00       1         async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > >(async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > const&) [363]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task() [316]
[364]    0.0    0.00    0.00       1         void async::detail::set_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > >&, async::detail::ref_count_ptr<async::detail::task_base>) [364]
                0.00    0.00       1/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       1/9           async::detail::ref_count_ptr<async::detail::task_base>::operator=(async::detail::ref_count_ptr<async::detail::task_base>&&) [80]
-----------------------------------------------
                0.00    0.00       1/1           async::task<std::tuple<std::decay<async::task<void>&>::type, std::decay<async::task<int>&>::type> > async::when_all<async::task<void>&, async::task<int>&>(async::task<void>&, async::task<int>&) [434]
[365]    0.0    0.00    0.00       1         void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
                0.00    0.00       1/2           async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) [227]
                0.00    0.00       1/2           async::inline_scheduler() [217]
                0.00    0.00       1/1           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [372]
                0.00    0.00       1/99          async::task<void>::~task() <cycle 1> [52]
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<void>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [305]
                0.00    0.00       1/16          async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [234]
                0.00    0.00       1/16          async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::~ref_count_ptr() <cycle 2> [126]
                0.00    0.00       1/2           async::task<int>& std::forward<async::task<int>&>(std::remove_reference<async::task<int>&>::type&) [268]
                0.00    0.00       1/1           void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
[366]    0.0    0.00    0.00       1         void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
                0.00    0.00       1/2           async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) [227]
                0.00    0.00       1/2           async::inline_scheduler() [217]
                0.00    0.00       1/1           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [374]
                0.00    0.00       1/99          async::task<void>::~task() <cycle 1> [52]
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<int>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [301]
                0.00    0.00       1/16          async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [235]
                0.00    0.00       1/16          async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::~ref_count_ptr() <cycle 2> [126]
                0.00    0.00       1/1           void async::detail::when_all_variadic<2ul, std::tuple<async::task<void>, async::task<int> > >(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) [367]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
[367]    0.0    0.00    0.00       1         void async::detail::when_all_variadic<2ul, std::tuple<async::task<void>, async::task<int> > >(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) [367]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
[368]    0.0    0.00    0.00       1         std::tuple<async::task<void>, async::task<int> >&& async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::get_result<std::tuple<async::task<void>, async::task<int> > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&) [368]
                0.00    0.00       1/3           std::remove_reference<std::tuple<async::task<void>, async::task<int> >&>::type&& std::move<std::tuple<async::task<void>, async::task<int> >&>(std::tuple<async::task<void>, async::task<int> >&) [208]
-----------------------------------------------
                0.00    0.00       1/1           bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
[369]    0.0    0.00    0.00       1         void async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::set_result<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) [369]
                0.00    0.00       1/3           std::tuple<async::task<void>, async::task<int> >&& std::forward<std::tuple<async::task<void>, async::task<int> > >(std::remove_reference<std::tuple<async::task<void>, async::task<int> > >::type&) [212]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
                0.00    0.00       1/2           std::tuple<async::task<void>, async::task<int> >::tuple(std::tuple<async::task<void>, async::task<int> >&&) [256]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::task_result() [334]
[370]    0.0    0.00    0.00       1         async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::task_result_holder() [370]
                0.00    0.00       1/15          async::detail::task_base::task_base() [46]
-----------------------------------------------
                                   1             async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::~task_result() <cycle 1> [335]
[371]    0.0    0.00    0.00       1         async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::~task_result_holder() <cycle 1> [371]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/14          async::detail::task_base::~task_base() [57]
                                   1             std::tuple<async::task<void>, async::task<int> >::~tuple() <cycle 1> [207]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
[372]    0.0    0.00    0.00       1         async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [372]
                0.00    0.00       1/2           std::remove_reference<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>::type&& std::move<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&) [264]
                0.00    0.00       1/4           async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&&) [151]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [392]
[373]    0.0    0.00    0.00       1         async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [373]
                0.00    0.00       1/4           async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&&) [151]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [366]
[374]    0.0    0.00    0.00       1         async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [374]
                0.00    0.00       1/2           std::remove_reference<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>::type&& std::move<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&) [264]
                0.00    0.00       1/4           async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&&) [151]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [395]
[375]    0.0    0.00    0.00       1         async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [375]
                0.00    0.00       1/4           async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&&) [151]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [326]
[376]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [376]
                0.00    0.00       1/1           async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [395]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&) [117]
                0.00    0.00       1/5           async::task<int>::task(async::task<int>&&) [134]
                0.00    0.00       1/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
-----------------------------------------------
                                   1             async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [325]
[377]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [377]
                0.00    0.00       1/99          async::task<int>::~task() <cycle 1> [68]
                                   1             async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() <cycle 2> [396]
-----------------------------------------------
                                   1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [407]
[378]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
                0.00    0.00       1/1           async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::get_func() [394]
                0.00    0.00       1/10          std::remove_reference<async::task<int>&>::type&& std::move<async::task<int>&>(async::task<int>&) [77]
                0.00    0.00       1/1           std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&) [472]
                0.00    0.00       1/9           async::detail::task_result_holder<async::detail::fake_void>::set_result(async::detail::fake_void) [81]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [351]
                                   1             async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [325]
                                   1             async::detail::task_base::finish() <cycle 2> [45]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [328]
[379]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [379]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&) [116]
                0.00    0.00       1/1           async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [392]
                0.00    0.00       1/9           async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&) [84]
                0.00    0.00       1/4           async::task<void>::task(async::task<void>&&) [146]
-----------------------------------------------
                                   1             async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [327]
[380]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [380]
                0.00    0.00       1/99          async::task<void>::~task() <cycle 1> [52]
                                   1             async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() <cycle 2> [393]
-----------------------------------------------
                                   1             async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [412]
[381]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
                0.00    0.00       1/8           std::remove_reference<async::task<void>&>::type&& std::move<async::task<void>&>(async::task<void>&) [102]
                0.00    0.00       1/1           std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&) [471]
                0.00    0.00       1/1           async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::get_func() [391]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [350]
                0.00    0.00       1/9           async::detail::task_result_holder<async::detail::fake_void>::set_result(async::detail::fake_void) [81]
                                   1             async::detail::task_base::finish() <cycle 2> [45]
                                   1             async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() <cycle 2> [327]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [330]
[382]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [382]
                0.00    0.00       1/8           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&) [104]
                0.00    0.00       1/1           async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::func_base<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&) [397]
                0.00    0.00       1/4           async::task<std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::task<std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > > >::type&) [177]
                0.00    0.00       1/1           async::task<std::tuple<async::task<void>, async::task<int> > >::task(async::task<std::tuple<async::task<void>, async::task<int> > >&&) [297]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::destroy_func() [329]
[383]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [383]
                0.00    0.00       1/2           async::task<std::tuple<async::task<void>, async::task<int> > >::~task() [218]
                0.00    0.00       1/1           async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::~func_base() [398]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::run(async::detail::task_base*) [528]
[384]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
                0.00    0.00       2/2           async::task<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&) [232]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/1           std::tuple<async::task<void>, async::task<int> >&& async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::get_result<std::tuple<async::task<void>, async::task<int> > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&) [368]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::get_func() [237]
                0.00    0.00       1/1           std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&>::type&& std::move<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&>(std::remove_reference&&) [473]
                0.00    0.00       1/9           async::detail::task_result_holder<async::detail::fake_void>::set_result(async::detail::fake_void) [81]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&) [352]
                0.00    0.00       1/1           async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::destroy_func() [329]
                0.00    0.00       1/16          async::detail::task_base::finish() <cycle 2> [45]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [332]
[385]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [385]
                0.00    0.00       1/8           main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&) [105]
                0.00    0.00       1/1           async::detail::func_base<main::{lambda(int)#3}, void>::func_base<{lambda(int)#3}>({lambda(int)#3}&&) [399]
                0.00    0.00       1/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       1/5           async::task<int>::task(async::task<int>&&) [134]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::destroy_func() [331]
[386]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [386]
                0.00    0.00       1/99          async::task<int>::~task() <cycle 1> [68]
                0.00    0.00       1/1           async::detail::func_base<main::{lambda(int)#3}, void>::~func_base() [400]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::run(async::detail::task_base*) [530]
[387]    0.0    0.00    0.00       1         async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
                0.00    0.00       2/7           async::task<int>::internal_task_type* async::detail::get_internal_task<async::task<int> >(async::task<int> const&) [109]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/5           int&& async::detail::task_result_holder<int>::get_result<int>(async::task<int> const&) [139]
                0.00    0.00       1/1           std::remove_reference<main::{lambda(int)#3}&>::type&& std::move<main::{lambda(int)#3}&>(std::remove_reference&&) [474]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda(int)#3}, void>::get_func() [238]
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&) [353]
                0.00    0.00       1/5           void async::detail::task_result_holder<int>::set_result<int>(int&&) [140]
                0.00    0.00       1/1           async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::destroy_func() [331]
                0.00    0.00       1/16          async::detail::task_base::finish() <cycle 2> [45]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [389]
[388]    0.0    0.00    0.00       1         void async::detail::parallel_invoke_internal<0ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [388]
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&) [469]
                0.00    0.00       1/1           main::{lambda()#5}::operator()() const [488]
                0.00    0.00       1/1           main::{lambda()#5}&& std::forward<main::{lambda()#5}&&>(std::remove_reference<main::{lambda()#5}&&>::type&) [478]
-----------------------------------------------
                0.00    0.00       1/1           std::enable_if<async::detail::is_scheduler<async::threadpool_scheduler>::value, void>::type async::parallel_invoke<async::threadpool_scheduler, main::{lambda()#5}, main::{lambda()#6}>(async::detail&, main::{lambda()#5}&&, main::{lambda()#6}&&) [288]
[389]    0.0    0.00    0.00       1         void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [389]
                0.00    0.00       1/1           async::local_task<main::{lambda()#6}&&, async::threadpool_scheduler> async::local_spawn<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>, async::threadpool_scheduler&&) [282]
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [388]
                0.00    0.00       1/1           async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::get() [277]
                0.00    0.00       1/1           async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::~local_task() [280]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}::operator()() const [495]
[390]    0.0    0.00    0.00       1         void async::detail::parallel_invoke_internal<1ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [390]
                0.00    0.00       1/1           std::tuple_element<1ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<1ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&) [470]
                0.00    0.00       1/1           main::{lambda()#6}::operator()() const [489]
                0.00    0.00       1/1           main::{lambda()#6}&& std::forward<main::{lambda()#6}&&>(std::remove_reference<main::{lambda()#6}&&>::type&) [479]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
[391]    0.0    0.00    0.00       1         async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::get_func() [391]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [379]
[392]    0.0    0.00    0.00       1         async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [392]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&) [116]
                0.00    0.00       1/1           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [373]
-----------------------------------------------
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [380]
[393]    0.0    0.00    0.00       1         async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() <cycle 2> [393]
                                   1             async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [234]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
[394]    0.0    0.00    0.00       1         async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::get_func() [394]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [376]
[395]    0.0    0.00    0.00       1         async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [395]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&) [117]
                0.00    0.00       1/1           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [375]
-----------------------------------------------
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() <cycle 2> [377]
[396]    0.0    0.00    0.00       1         async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() <cycle 2> [396]
                                   1             async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() <cycle 2> [235]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [382]
[397]    0.0    0.00    0.00       1         async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::func_base<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&) [397]
                0.00    0.00       1/8           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&) [104]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [383]
[398]    0.0    0.00    0.00       1         async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::~func_base() [398]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::get_func() [237]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [385]
[399]    0.0    0.00    0.00       1         async::detail::func_base<main::{lambda(int)#3}, void>::func_base<{lambda(int)#3}>({lambda(int)#3}&&) [399]
                0.00    0.00       1/8           main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&) [105]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [386]
[400]    0.0    0.00    0.00       1         async::detail::func_base<main::{lambda(int)#3}, void>::~func_base() [400]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda(int)#3}, void>::get_func() [238]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::root_exec_func<{lambda()#2}>({lambda()#2}&&) [344]
[401]    0.0    0.00    0.00       1         async::detail::func_base<main::{lambda()#2}, void>::func_base<{lambda()#2}>({lambda()#2}&&) [401]
                0.00    0.00       1/7           main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&) [118]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::~root_exec_func() [345]
[402]    0.0    0.00    0.00       1         async::detail::func_base<main::{lambda()#2}, void>::~func_base() [402]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda()#2}, void>::get_func() [239]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::root_exec_func<{lambda()#1}>({lambda()#1}&&) [339]
[403]    0.0    0.00    0.00       1         async::detail::func_base<main::{lambda()#1}, void>::func_base<{lambda()#1}>({lambda()#1}&&) [403]
                0.00    0.00       1/7           main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&) [120]
                0.00    0.00       1/24          operator new(unsigned long, void*) [29]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::~root_exec_func() [340]
[404]    0.0    0.00    0.00       1         async::detail::func_base<main::{lambda()#1}, void>::~func_base() [404]
                0.00    0.00       1/2           async::detail::func_base<main::{lambda()#1}, void>::get_func() [240]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [343]
[405]    0.0    0.00    0.00       1         async::detail::func_base<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>::get_func() [405]
-----------------------------------------------
                0.00    0.00       1/1           _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEC1ISI_EEOSD_ [342]
[406]    0.0    0.00    0.00       1         _ZN5async6detail9func_baseIZNS0_24parallel_invoke_internalILm0ELm2EE3runINS_20threadpool_schedulerESt5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_vEC2ISH_EEOSC_ [406]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&) [121]
-----------------------------------------------
                                   1             async::task_run_handle::run() <cycle 2> [216]
[407]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [407]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func() [223]
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
[408]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [408]
                0.00    0.00       1/7           async::detail::task_base::operator delete(void*) [112]
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [411]
-----------------------------------------------
                                   1             async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
[409]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [409]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                                   1             void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&) <cycle 2> [243]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
[410]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [410]
                0.00    0.00       1/9           async::detail::task_result<async::detail::fake_void>::task_result() [79]
                0.00    0.00       1/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&) [117]
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [326]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [408]
[411]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [411]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/8           async::detail::task_result<async::detail::fake_void>::~task_result() [88]
-----------------------------------------------
                                   1             async::task_run_handle::run() <cycle 2> [216]
[412]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) <cycle 2> [412]
                0.00    0.00       1/2           async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func() [224]
                                   1             async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
[413]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [413]
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [416]
                0.00    0.00       1/7           async::detail::task_base::operator delete(void*) [112]
-----------------------------------------------
                                   1             async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
[414]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) <cycle 2> [414]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                                   1             void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&) <cycle 2> [243]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
[415]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [415]
                0.00    0.00       1/9           async::detail::task_result<async::detail::fake_void>::task_result() [79]
                0.00    0.00       1/9           async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&) [84]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&) [116]
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [328]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [413]
[416]    0.0    0.00    0.00       1         async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [416]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/8           async::detail::task_result<async::detail::fake_void>::~task_result() [88]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
[417]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [417]
                0.00    0.00       1/7           async::detail::task_base::operator delete(void*) [112]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [419]
-----------------------------------------------
                0.00    0.00       1/1           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [309]
[418]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::task_func<{lambda()#1}>({lambda()#1}&&) [418]
                0.00    0.00       1/9           async::detail::task_result<async::detail::fake_void>::task_result() [79]
                0.00    0.00       1/7           main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&) [120]
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::init_func<{lambda()#1}>({lambda()#1}&&) [320]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [417]
[419]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [419]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/8           async::detail::task_result<async::detail::fake_void>::~task_result() [88]
-----------------------------------------------
                0.00    0.00       1/1           _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_ [279]
[420]    0.0    0.00    0.00       1         _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEES4_EC1IJSJ_EEEDpOT_ [420]
                0.00    0.00       1/9           async::detail::task_result<async::detail::fake_void>::task_result() [79]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&) [121]
                0.00    0.00       1/1           _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS3_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEEvE9init_funcIJSJ_EEEvDpOT_ [322]
-----------------------------------------------
                0.00    0.00       1/1           async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::~local_task() [280]
[421]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [421]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/8           async::detail::task_result<async::detail::fake_void>::~task_result() [88]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
[422]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::destroy(async::detail::task_base*) [422]
                0.00    0.00       1/7           async::detail::task_base::operator delete(void*) [112]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::~task_func() [424]
-----------------------------------------------
                0.00    0.00       1/1           async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [308]
[423]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::task_func<{lambda()#2}>({lambda()#2}&&) [423]
                0.00    0.00       1/5           async::detail::task_result<int>::task_result() [137]
                0.00    0.00       1/7           main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&) [118]
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::init_func<{lambda()#2}>({lambda()#2}&&) [324]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::destroy(async::detail::task_base*) [422]
[424]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::~task_func() [424]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/5           async::detail::task_result<int>::~task_result() [138]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
[425]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [425]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::~task_func() [428]
                0.00    0.00       1/7           async::detail::task_base::operator delete(void*) [112]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
[426]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void> >) [426]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       1/2           void async::detail::task_base::run_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>&&) [244]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
[427]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::task_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [427]
                0.00    0.00       1/9           async::detail::task_result<async::detail::fake_void>::task_result() [79]
                0.00    0.00       1/4           async::task<std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::task<std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > > >::type&) [177]
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [330]
                0.00    0.00       1/8           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&) [104]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [425]
[428]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::~task_func() [428]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/8           async::detail::task_result<async::detail::fake_void>::~task_result() [88]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_base_deleter::do_delete(async::detail::task_base*) <cycle 1> [110]
[429]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::destroy(async::detail::task_base*) [429]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::~task_func() [432]
                0.00    0.00       1/7           async::detail::task_base::operator delete(void*) [112]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const <cycle 2> [86]
[430]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int> >) [430]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/58          std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&) [19]
                0.00    0.00       1/2           void async::detail::task_base::run_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>&&) [244]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
[431]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::task_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [431]
                0.00    0.00       1/5           async::detail::task_result<int>::task_result() [137]
                0.00    0.00       1/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       1/8           main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&) [105]
                0.00    0.00       1/1           void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [332]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::destroy(async::detail::task_base*) [429]
[432]    0.0    0.00    0.00       1         async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::~task_func() [432]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
                0.00    0.00       1/5           async::detail::task_result<int>::~task_result() [138]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[433]    0.0    0.00    0.00       1         async::int_range<std::common_type<int, int>::type> async::irange<int, int>(int, int) [433]
                0.00    0.00       1/1           async::int_range<int>::int_range(int, int) [435]
-----------------------------------------------
                0.00    0.00       1/1           main [8]
[434]    0.0    0.00    0.00       1         async::task<std::tuple<std::decay<async::task<void>&>::type, std::decay<async::task<int>&>::type> > async::when_all<async::task<void>&, async::task<int>&>(async::task<void>&, async::task<int>&) [434]
                0.00    0.00       1/1           async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::when_all_state(unsigned long) [347]
                0.00    0.00       1/2           async::task<int>& std::forward<async::task<int>&>(std::remove_reference<async::task<int>&>::type&) [268]
                0.00    0.00       1/1           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task() [316]
                0.00    0.00       1/1           async::task<void>& std::forward<async::task<void>&>(std::remove_reference<async::task<void>&>::type&) [480]
                0.00    0.00       1/1           void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [365]
-----------------------------------------------
                0.00    0.00       1/1           async::int_range<std::common_type<int, int>::type> async::irange<int, int>(int, int) [433]
[435]    0.0    0.00    0.00       1         async::int_range<int>::int_range(int, int) [435]
-----------------------------------------------
                                   1             async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::~when_all_state() <cycle 2> [348]
[436]    0.0    0.00    0.00       1         async::event_task<std::tuple<async::task<void>, async::task<int> > >::set(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [436]
                0.00    0.00       1/3           std::remove_reference<std::tuple<async::task<void>, async::task<int> >&>::type&& std::move<std::tuple<async::task<void>, async::task<int> >&>(std::tuple<async::task<void>, async::task<int> >&) [208]
                                   1             bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [295]
[437]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [437]
                0.00    0.00       3/11          async::task<void>::internal_task_type* async::detail::get_internal_task<async::task<void> >(async::task<void> const&) [70]
                0.00    0.00       2/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       1/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/8           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&) [104]
                0.00    0.00       1/10          async::task<void>::task() [74]
                0.00    0.00       1/4           async::task<std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::task<std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > > >::type&) [177]
                0.00    0.00       1/7           async::detail::task_base::operator new(unsigned long) [113]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::task_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [427]
                0.00    0.00       1/4           void async::detail::set_internal_task<async::task<void> >(async::task<void>&, async::detail::ref_count_ptr<async::detail::task_base>) [156]
                0.00    0.00       1/14          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00       1/2           async::threadpool_scheduler* std::addressof<async::threadpool_scheduler>(async::threadpool_scheduler&) [271]
                0.00    0.00       1/2           void async::detail::task_base::add_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [242]
-----------------------------------------------
                0.00    0.00       1/1           async::task<int>::get() [299]
[438]    0.0    0.00    0.00       1         async::detail::basic_task<int>::get_internal() const [438]
                0.00    0.00       1/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00       1/1           async::detail::basic_task<int>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<int> >(async::detail::basic_task<int> const&) [361]
                0.00    0.00       1/4           async::detail::task_result<int>::wait_and_throw() [150]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<int>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [301]
[439]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [439]
                0.00    0.00       3/11          async::task<void>::internal_task_type* async::detail::get_internal_task<async::task<void> >(async::task<void> const&) [70]
                0.00    0.00       2/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       1/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/10          async::task<void>::task() [74]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&) [117]
                0.00    0.00       1/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       1/7           async::detail::task_base::operator new(unsigned long) [113]
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [410]
                0.00    0.00       1/4           void async::detail::set_internal_task<async::task<void> >(async::task<void>&, async::detail::ref_count_ptr<async::detail::task_base>) [156]
                0.00    0.00       1/14          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00       1/2           async::detail::inline_scheduler_impl* std::addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&) [272]
                0.00    0.00       1/2           void async::detail::task_base::add_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) [241]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<async::threadpool_scheduler, main::{lambda(int)#3}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [300]
[440]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [440]
                0.00    0.00       3/7           async::task<int>::internal_task_type* async::detail::get_internal_task<async::task<int> >(async::task<int> const&) [109]
                0.00    0.00       2/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       1/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/6           async::task<int>::task() [123]
                0.00    0.00       1/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       1/8           main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&) [105]
                0.00    0.00       1/7           async::detail::task_base::operator new(unsigned long) [113]
                0.00    0.00       1/1           async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::task_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [431]
                0.00    0.00       1/2           void async::detail::set_internal_task<async::task<int> >(async::task<int>&, async::detail::ref_count_ptr<async::detail::task_base>) [233]
                0.00    0.00       1/14          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00       1/2           async::threadpool_scheduler* std::addressof<async::threadpool_scheduler>(async::threadpool_scheduler&) [271]
                0.00    0.00       1/2           void async::detail::task_base::add_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [242]
-----------------------------------------------
                0.00    0.00       1/1           async::task<void>::get() [304]
[441]    0.0    0.00    0.00       1         async::detail::basic_task<void>::get_internal() const [441]
                0.00    0.00       1/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00       1/1           async::detail::basic_task<void>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<void> >(async::detail::basic_task<void> const&) [362]
                0.00    0.00       1/5           async::detail::task_result<async::detail::fake_void>::wait_and_throw() [136]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<void>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [305]
[442]    0.0    0.00    0.00       1         async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [442]
                0.00    0.00       3/11          async::task<void>::internal_task_type* async::detail::get_internal_task<async::task<void> >(async::task<void> const&) [70]
                0.00    0.00       2/30          async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [26]
                0.00    0.00       2/99          async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() <cycle 1> [14]
                0.00    0.00       1/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00       1/39          async::detail::ref_count_ptr<async::detail::task_base>::get() const [21]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&) [116]
                0.00    0.00       1/10          async::task<void>::task() [74]
                0.00    0.00       1/9           async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&) [84]
                0.00    0.00       1/7           async::detail::task_base::operator new(unsigned long) [113]
                0.00    0.00       1/1           async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [415]
                0.00    0.00       1/4           void async::detail::set_internal_task<async::task<void> >(async::task<void>&, async::detail::ref_count_ptr<async::detail::task_base>) [156]
                0.00    0.00       1/14          async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [55]
                0.00    0.00       1/2           async::detail::inline_scheduler_impl* std::addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&) [272]
                0.00    0.00       1/2           void async::detail::task_base::add_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) [241]
-----------------------------------------------
                                   1             async::event_task<std::tuple<async::task<void>, async::task<int> > >::set(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [436]
[443]    0.0    0.00    0.00       1         bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
                0.00    0.00       2/18          async::detail::ref_count_ptr<async::detail::task_base>::operator->() const [34]
                0.00    0.00       1/23          async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [30]
                0.00    0.00       1/1           std::atomic<async::detail::task_state>::compare_exchange_strong(async::detail::task_state&, async::detail::task_state, std::memory_order, std::memory_order) [463]
                0.00    0.00       1/1           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > >(async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > const&) [363]
                0.00    0.00       1/3           std::tuple<async::task<void>, async::task<int> >&& std::forward<std::tuple<async::task<void>, async::task<int> > >(std::remove_reference<std::tuple<async::task<void>, async::task<int> > >::type&) [212]
                0.00    0.00       1/1           void async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::set_result<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) [369]
                                   1             async::detail::task_base::finish() <cycle 2> [45]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}::operator()() const [491]
[444]    0.0    0.00    0.00       1         async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<void>) const [444]
                0.00    0.00       1/8           std::remove_reference<async::task<void>&>::type&& std::move<async::task<void>&>(async::task<void>&) [102]
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<0ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&) [468]
                0.00    0.00       1/2           async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::operator->() const [247]
                0.00    0.00       1/1           async::task<void>::operator=(async::task<void>&&) [306]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}::operator()() const [492]
[445]    0.0    0.00    0.00       1         async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<int>) const [445]
                0.00    0.00       1/10          std::remove_reference<async::task<int>&>::type&& std::move<async::task<int>&>(async::task<int>&) [77]
                0.00    0.00       1/2           async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::operator->() const [247]
                0.00    0.00       1/2           std::tuple_element<1ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<1ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&) [262]
                0.00    0.00       1/1           async::task<int>::operator=(async::task<int>&&) [303]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::~basic_event() [318]
[446]    0.0    0.00    0.00       1         async::detail::task_base::ready() const [446]
                0.00    0.00       1/21          async::detail::is_finished(async::detail::task_state) [31]
                0.00    0.00       1/62          std::atomic<async::detail::task_state>::load(std::memory_order) const [18]
-----------------------------------------------
                0.00    0.00       1/1           int async::parallel_reduce<int, int, main::{lambda(int, int)#8}>(std::initializer_list<int>, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [291]
[447]    0.0    0.00    0.00       1         std::initializer_list<int>::end() const [447]
                0.00    0.00       1/2           std::initializer_list<int>::begin() const [250]
                0.00    0.00       1/1           std::initializer_list<int>::size() const [448]
-----------------------------------------------
                0.00    0.00       1/1           std::initializer_list<int>::end() const [447]
[448]    0.0    0.00    0.00       1         std::initializer_list<int>::size() const [448]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl() [455]
[449]    0.0    0.00    0.00       1         std::_Head_base<0ul, async::task<void>, false>::_Head_base() [449]
                0.00    0.00       1/10          async::task<void>::task() [74]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_M_head(main::{lambda()#6} const&) [456]
[450]    0.0    0.00    0.00       1         std::_Head_base<0ul, main::{lambda()#5}&&, false>::_M_head(main::{lambda()#5}&& const&) [450]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#5}, main::{lambda()#5}&&, void>({lambda()#5}&&, main::{lambda()#5}&&) [457]
[451]    0.0    0.00    0.00       1         std::_Head_base<0ul, main::{lambda()#5}&&, false>::_Head_base<{lambda()#5}>({lambda()#5}&&) [451]
                0.00    0.00       1/6           main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [131]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl() [458]
[452]    0.0    0.00    0.00       1         std::_Head_base<1ul, async::task<int>, false>::_Head_base() [452]
                0.00    0.00       1/6           async::task<int>::task() [123]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_M_head(main::{lambda()#6}&& const&) [459]
[453]    0.0    0.00    0.00       1         std::_Head_base<1ul, main::{lambda()#6}&&, false>::_M_head(main::{lambda()#6}&& const&) [453]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#6}>({lambda()#6}&&) [460]
[454]    0.0    0.00    0.00       1         std::_Head_base<1ul, main::{lambda()#6}&&, false>::_Head_base<{lambda()#6}>({lambda()#6}&&) [454]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&) [119]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<async::task<void>, async::task<int> >::tuple<async::task<void>, async::task<int>, true>() [461]
[455]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl() [455]
                0.00    0.00       1/1           std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl() [458]
                0.00    0.00       1/1           std::_Head_base<0ul, async::task<void>, false>::_Head_base() [449]
-----------------------------------------------
                0.00    0.00       1/1           main::{lambda()#5}&& const& std::__get_helper<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(std::_Tuple_impl<0ul, main::{lambda()#6}, main::{lambda()#6}&&> const&) [465]
[456]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_M_head(main::{lambda()#6} const&) [456]
                0.00    0.00       1/1           std::_Head_base<0ul, main::{lambda()#5}&&, false>::_M_head(main::{lambda()#5}&& const&) [450]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>::tuple<{lambda()#5}, main::{lambda()#5}&&, true>({lambda()#5}&&, main::{lambda()#5}&&) [462]
[457]    0.0    0.00    0.00       1         std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#5}, main::{lambda()#5}&&, void>({lambda()#5}&&, main::{lambda()#5}&&) [457]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&) [119]
                0.00    0.00       1/1           std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#6}>({lambda()#6}&&) [460]
                0.00    0.00       1/6           main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [131]
                0.00    0.00       1/1           std::_Head_base<0ul, main::{lambda()#5}&&, false>::_Head_base<{lambda()#5}>({lambda()#5}&&) [451]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl() [455]
[458]    0.0    0.00    0.00       1         std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl() [458]
                0.00    0.00       1/1           std::_Head_base<1ul, async::task<int>, false>::_Head_base() [452]
-----------------------------------------------
                0.00    0.00       1/1           main::{lambda()#6}&& const& std::__get_helper<1ul, main::{lambda()#6}&&>(std::_Tuple_impl<1ul, main::{lambda()#6}&&> const&) [466]
[459]    0.0    0.00    0.00       1         std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_M_head(main::{lambda()#6}&& const&) [459]
                0.00    0.00       1/1           std::_Head_base<1ul, main::{lambda()#6}&&, false>::_M_head(main::{lambda()#6}&& const&) [453]
-----------------------------------------------
                0.00    0.00       1/1           std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#5}, main::{lambda()#5}&&, void>({lambda()#5}&&, main::{lambda()#5}&&) [457]
[460]    0.0    0.00    0.00       1         std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#6}>({lambda()#6}&&) [460]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&) [119]
                0.00    0.00       1/1           std::_Head_base<1ul, main::{lambda()#6}&&, false>::_Head_base<{lambda()#6}>({lambda()#6}&&) [454]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::when_all_state(unsigned long) [347]
[461]    0.0    0.00    0.00       1         std::tuple<async::task<void>, async::task<int> >::tuple<async::task<void>, async::task<int>, true>() [461]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl() [455]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> std::forward_as_tuple<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#6}) [467]
[462]    0.0    0.00    0.00       1         std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>::tuple<{lambda()#5}, main::{lambda()#5}&&, true>({lambda()#5}&&, main::{lambda()#5}&&) [462]
                0.00    0.00       1/6           main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [131]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&) [119]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#5}, main::{lambda()#5}&&, void>({lambda()#5}&&, main::{lambda()#5}&&) [457]
-----------------------------------------------
                0.00    0.00       1/1           bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const <cycle 2> [443]
[463]    0.0    0.00    0.00       1         std::atomic<async::detail::task_state>::compare_exchange_strong(async::detail::task_state&, async::detail::task_state, std::memory_order, std::memory_order) [463]
                0.00    0.00       3/33          async::detail::task_state* std::__addressof<async::detail::task_state>(async::detail::task_state&) [22]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<0ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&) [468]
[464]    0.0    0.00    0.00       1         async::task<void>& std::__get_helper<0ul, async::task<void>, async::task<int> >(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&) [464]
                0.00    0.00       1/3           std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_head(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&) [204]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<0ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&) [469]
[465]    0.0    0.00    0.00       1         main::{lambda()#5}&& const& std::__get_helper<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(std::_Tuple_impl<0ul, main::{lambda()#6}, main::{lambda()#6}&&> const&) [465]
                0.00    0.00       1/1           std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_M_head(main::{lambda()#6} const&) [456]
-----------------------------------------------
                0.00    0.00       1/1           std::tuple_element<1ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<1ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&) [470]
[466]    0.0    0.00    0.00       1         main::{lambda()#6}&& const& std::__get_helper<1ul, main::{lambda()#6}&&>(std::_Tuple_impl<1ul, main::{lambda()#6}&&> const&) [466]
                0.00    0.00       1/1           std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_M_head(main::{lambda()#6}&& const&) [459]
-----------------------------------------------
                0.00    0.00       1/1           std::enable_if<async::detail::is_scheduler<async::threadpool_scheduler>::value, void>::type async::parallel_invoke<async::threadpool_scheduler, main::{lambda()#5}, main::{lambda()#6}>(async::detail&, main::{lambda()#5}&&, main::{lambda()#6}&&) [288]
[467]    0.0    0.00    0.00       1         std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> std::forward_as_tuple<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#6}) [467]
                0.00    0.00       1/7           main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&) [119]
                0.00    0.00       1/6           main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&) [131]
                0.00    0.00       1/1           std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>::tuple<{lambda()#5}, main::{lambda()#5}&&, true>({lambda()#5}&&, main::{lambda()#5}&&) [462]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<void>) const [444]
[468]    0.0    0.00    0.00       1         std::tuple_element<0ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<0ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&) [468]
                0.00    0.00       1/1           async::task<void>& std::__get_helper<0ul, async::task<void>, async::task<int> >(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&) [464]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [388]
[469]    0.0    0.00    0.00       1         std::tuple_element<0ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&) [469]
                0.00    0.00       1/1           main::{lambda()#5}&& const& std::__get_helper<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(std::_Tuple_impl<0ul, main::{lambda()#6}, main::{lambda()#6}&&> const&) [465]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<1ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [390]
[470]    0.0    0.00    0.00       1         std::tuple_element<1ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<1ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&) [470]
                0.00    0.00       1/1           main::{lambda()#6}&& const& std::__get_helper<1ul, main::{lambda()#6}&&>(std::_Tuple_impl<1ul, main::{lambda()#6}&&> const&) [466]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [381]
[471]    0.0    0.00    0.00       1         std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&) [471]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) <cycle 2> [378]
[472]    0.0    0.00    0.00       1         std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&) [472]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [384]
[473]    0.0    0.00    0.00       1         std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&>::type&& std::move<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&>(std::remove_reference&&) [473]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [387]
[474]    0.0    0.00    0.00       1         std::remove_reference<main::{lambda(int)#3}&>::type&& std::move<main::{lambda(int)#3}&>(std::remove_reference&&) [474]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::operator()(async::detail::task_base*) [346]
[475]    0.0    0.00    0.00       1         std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&) [475]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::operator()(async::detail::task_base*) [341]
[476]    0.0    0.00    0.00       1         std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&) [476]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [343]
[477]    0.0    0.00    0.00       1         std::remove_reference<main::{lambda()#6}&&>::type&& std::move<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}&>(main::{lambda()#6}&&) [477]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [388]
[478]    0.0    0.00    0.00       1         main::{lambda()#5}&& std::forward<main::{lambda()#5}&&>(std::remove_reference<main::{lambda()#5}&&>::type&) [478]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<1ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [390]
[479]    0.0    0.00    0.00       1         main::{lambda()#6}&& std::forward<main::{lambda()#6}&&>(std::remove_reference<main::{lambda()#6}&&>::type&) [479]
-----------------------------------------------
                0.00    0.00       1/1           async::task<std::tuple<std::decay<async::task<void>&>::type, std::decay<async::task<int>&>::type> > async::when_all<async::task<void>&, async::task<int>&>(async::task<void>&, async::task<int>&) [434]
[480]    0.0    0.00    0.00       1         async::task<void>& std::forward<async::task<void>&>(std::remove_reference<async::task<void>&>::type&) [480]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [356]
[481]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}&& std::forward<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}&&, async::task<void>&&)::{lambda()#1}>(std::remove_reference<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}>::type&) [481]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [357]
[482]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}&& std::forward<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}&&, async::task<int>&&)::{lambda()#1}>(std::remove_reference<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}>::type&) [482]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [358]
[483]    0.0    0.00    0.00       1         _ZSt7forwardIZN5async6detail16invoke_fake_voidIZ4mainEUlSt5tupleIJNS0_4taskIvEENS4_IiEEEEE2_S7_EENS1_17void_to_fake_voidIDTclcl7declvalIT_EEcl7declvalIT0_EEEEE4typeEOSA_OSB_EUlvE_ESF_RNSt16remove_referenceISA_E4typeE [483]
-----------------------------------------------
                0.00    0.00       1/1           decltype (((declval<async::detail::void_to_fake_void>)())()) async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [359]
[484]    0.0    0.00    0.00       1         _ZSt7forwardIZN5async6detail16invoke_fake_voidIZ4mainEUliE1_iEENS1_17void_to_fake_voidIDTclcl7declvalIT_EEcl7declvalIT0_EEEEE4typeEOS5_OS6_EUlvE_ESA_RNSt16remove_referenceIS5_E4typeE [484]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}::operator()() const [493]
[485]    0.0    0.00    0.00       1         main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}::operator()(std::tuple<async::task<void>, async::task<int> >) const [485]
                0.00    0.00       1/2           std::tuple_element<1ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<1ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&) [262]
                0.00    0.00       1/1           async::task<int>::get() [299]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}::operator()() const [494]
[486]    0.0    0.00    0.00       1         main::{lambda(int)#3}::operator()(int) const [486]
-----------------------------------------------
                0.00    0.00       1/1           decltype (((declval<main::{lambda()#2}>)())()) async::detail::invoke_fake_void<main::{lambda()#2}, void>(main::{lambda()#2}&&) [354]
[487]    0.0    0.00    0.00       1         main::{lambda()#2}::operator()() const [487]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<0ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [388]
[488]    0.0    0.00    0.00       1         main::{lambda()#5}::operator()() const [488]
-----------------------------------------------
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<1ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [390]
[489]    0.0    0.00    0.00       1         main::{lambda()#6}::operator()() const [489]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<main::{lambda()#1}, void>(main::{lambda()#1}&&) [355]
[490]    0.0    0.00    0.00       1         main::{lambda()#1}::operator()() const [490]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [356]
[491]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}::operator()() const [491]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&) [116]
                0.00    0.00       1/9           async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&) [84]
                0.00    0.00       1/4           async::task<void>::task(async::task<void>&&) [146]
                0.00    0.00       1/1           async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<void>) const [444]
                0.00    0.00       1/99          async::task<void>::~task() <cycle 1> [52]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [357]
[492]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}::operator()() const [492]
                0.00    0.00       1/7           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&) [117]
                0.00    0.00       1/13          async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&) [59]
                0.00    0.00       1/5           async::task<int>::task(async::task<int>&&) [134]
                0.00    0.00       1/1           async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<int>) const [445]
                0.00    0.00       1/99          async::task<int>::~task() <cycle 1> [68]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [358]
[493]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}::operator()() const [493]
                0.00    0.00       1/8           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&) [104]
                0.00    0.00       1/3           std::tuple<async::task<void>, async::task<int> >&& std::forward<std::tuple<async::task<void>, async::task<int> > >(std::remove_reference<std::tuple<async::task<void>, async::task<int> > >::type&) [212]
                0.00    0.00       1/2           std::tuple<async::task<void>, async::task<int> >::tuple(std::tuple<async::task<void>, async::task<int> >&&) [256]
                0.00    0.00       1/1           main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}::operator()(std::tuple<async::task<void>, async::task<int> >) const [485]
                0.00    0.00       1/99          std::tuple<async::task<void>, async::task<int> >::~tuple() <cycle 1> [207]
-----------------------------------------------
                0.00    0.00       1/1           decltype (((declval<async::detail::void_to_fake_void>)())()) async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [359]
[494]    0.0    0.00    0.00       1         async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}::operator()() const [494]
                0.00    0.00       1/8           main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&) [105]
                0.00    0.00       1/10          int&& std::forward<int>(std::remove_reference<int>::type&) [78]
                0.00    0.00       1/1           main::{lambda(int)#3}::operator()(int) const [486]
-----------------------------------------------
                0.00    0.00       1/1           async::detail::fake_void async::detail::invoke_fake_void<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>(main::{lambda()#6}&&) [360]
[495]    0.0    0.00    0.00       1         void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}::operator()() const [495]
                0.00    0.00       1/1           void async::detail::parallel_invoke_internal<1ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [390]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2016 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [273] _GLOBAL__sub_I_main   [358] async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [249] async::int_range<int>::begin() const
 [274] __static_initialization_and_destruction_0(int, int) [359] decltype (((declval<async::detail::void_to_fake_void>)())()) async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}, void>(async::detail::void_to_fake_void<decltype (((declval<async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}>)())((declval<void>)()))>::type) [165] async::int_range<int>::iterator::operator*() const
 [107] __gthread_self()      [193] async::detail::fake_void async::detail::invoke_fake_void<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>(main::{lambda(int)#7}&&) [166] std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::get() const
  [12] __gthread_yield()     [360] async::detail::fake_void async::detail::invoke_fake_void<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>(main::{lambda()#6}&&) [167] std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr() const
  [25] __gthread_active_p()  [194] _ZN5async6detail16invoke_fake_voidIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEEDTclcl7declvalISB_EEEEOSB_ [447] std::initializer_list<int>::end() const
  [60] __gthread_mutex_lock(pthread_mutex_t*) [127] async::detail::fake_void_to_void(async::detail::fake_void) [448] std::initializer_list<int>::size() const
  [61] __gthread_mutex_unlock(pthread_mutex_t*) [155] int async::detail::fake_void_to_void<int>(int&&) [250] std::initializer_list<int>::begin() const
 [275] async::event_task<std::tuple<async::task<void>, async::task<int> > >::event_task() [361] async::detail::basic_task<int>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<int> >(async::detail::basic_task<int> const&) [18] std::atomic<async::detail::task_state>::load(std::memory_order) const
 [276] async::event_task<std::tuple<async::task<void>, async::task<int> > >::~event_task() [362] async::detail::basic_task<void>::internal_task_type* async::detail::get_internal_task<async::detail::basic_task<void> >(async::detail::basic_task<void> const&) [23] std::atomic<async::detail::compressed_ptr<3ul, true> >::load(std::memory_order) const
 [181] async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::get() [363] async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > >(async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > > const&) [201] std::_Head_base<0ul, async::task<void>, false>::_M_head(std::_Head_base<0ul, async::task<void>, false>&)
 [182] async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::wait() [232] async::task<std::tuple<async::task<void>, async::task<int> > >::internal_task_type* async::detail::get_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&) [251] std::_Head_base<0ul, async::task<void>, false>::_Head_base<async::task<void> >(async::task<void>&&)
 [144] _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail21internal_parallel_forIS1_NS2_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_EC1ERS1_OSG_ [109] async::task<int>::internal_task_type* async::detail::get_internal_task<async::task<int> >(async::task<int> const&) [449] std::_Head_base<0ul, async::task<void>, false>::_Head_base()
 [183] async::local_task<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>::~local_task() [70] async::task<void>::internal_task_type* async::detail::get_internal_task<async::task<void> >(async::task<void> const&) [202] std::_Head_base<0ul, async::task<void>, false>::~_Head_base()
 [277] async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::get() [364] void async::detail::set_internal_task<async::task<std::tuple<async::task<void>, async::task<int> > > >(async::task<std::tuple<async::task<void>, async::task<int> > >&, async::detail::ref_count_ptr<async::detail::task_base>) [450] std::_Head_base<0ul, main::{lambda()#5}&&, false>::_M_head(main::{lambda()#5}&& const&)
 [278] async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::wait() [233] void async::detail::set_internal_task<async::task<int> >(async::task<int>&, async::detail::ref_count_ptr<async::detail::task_base>) [451] std::_Head_base<0ul, main::{lambda()#5}&&, false>::_Head_base<{lambda()#5}>({lambda()#5}&&)
 [279] _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail24parallel_invoke_internalILm0ELm2EE3runIS1_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_EC1ERS1_OSH_ [156] void async::detail::set_internal_task<async::task<void> >(async::task<void>&, async::detail::ref_count_ptr<async::detail::task_base>) [168] std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>::_M_head(std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false> const&)
 [280] async::local_task<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>::~local_task() [110] async::detail::task_base_deleter::do_delete(async::detail::task_base*) [95] std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>::_M_head(std::_Head_base<0ul, async::detail::continuation_vector::vector_data*, false>&)
 [184] async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::get() [365] void async::detail::when_all_variadic<0ul, std::tuple<async::task<void>, async::task<int> >, async::task<void>&, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<void>&, async::task<int>&) [169] std::_Head_base<1ul, async::task<int>, false>::_M_head(std::_Head_base<1ul, async::task<int>, false>&)
 [185] async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::wait() [366] void async::detail::when_all_variadic<1ul, std::tuple<async::task<void>, async::task<int> >, async::task<int>&>(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*, async::task<int>&) [452] std::_Head_base<1ul, async::task<int>, false>::_Head_base()
 [186] _ZN5async10local_taskINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EC1ERS1_OSK_ [367] void async::detail::when_all_variadic<2ul, std::tuple<async::task<void>, async::task<int> > >(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) [252] std::_Head_base<1ul, async::task<int>, false>::_Head_base<async::task<int> >(async::task<int>&&)
 [187] async::local_task<async::threadpool_scheduler, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}>::~local_task() [128] async::detail::fake_void async::detail::task_result_holder<async::detail::fake_void>::get_result<void>(async::task<void> const&) [203] std::_Head_base<1ul, async::task<int>, false>::~_Head_base()
 [281] async::range<int const*> async::make_range<int const*>(int const*, int const*) [81] async::detail::task_result_holder<async::detail::fake_void>::set_result(async::detail::fake_void) [453] std::_Head_base<1ul, main::{lambda()#6}&&, false>::_M_head(main::{lambda()#6}&& const&)
 [145] async::local_task<main::{lambda(int)#7}, async::threadpool_scheduler&> async::local_spawn<async::threadpool_scheduler, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(async::threadpool_scheduler, async::threadpool_scheduler&) [82] async::detail::task_result_holder<async::detail::fake_void>::task_result_holder() [454] std::_Head_base<1ul, main::{lambda()#6}&&, false>::_Head_base<{lambda()#6}>({lambda()#6}&&)
 [282] async::local_task<main::{lambda()#6}&&, async::threadpool_scheduler> async::local_spawn<async::threadpool_scheduler, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>, async::threadpool_scheduler&&) [89] async::detail::task_result_holder<async::detail::fake_void>::~task_result_holder() [170] std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::release()
 [188] _ZN5async11local_spawnINS_20threadpool_schedulerEZNS_6detail28internal_parallel_map_reduceIS1_NS2_21auto_partitioner_implIPKiEEiNS2_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EENS_10local_taskISB_SD_EESC_OSD_ [368] std::tuple<async::task<void>, async::task<int> >&& async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::get_result<std::tuple<async::task<void>, async::task<int> > >(async::task<std::tuple<async::task<void>, async::task<int> > > const&) [171] std::unique_ptr<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::~unique_ptr()
 [283] void async::parallel_for<async::threadpool_scheduler, async::int_range<int>&, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::int_range<int>&, main::{lambda(int)#7} const&) [369] void async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::set_result<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) [204] std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_head(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&)
 [284] void async::parallel_for<async::int_range<int>, main::{lambda(int)#7}>(async::int_range<int>&&, main::{lambda(int)#7} const&) [370] async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::task_result_holder() [253] std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_M_tail(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&)
 [285] std::enable_if<!async::detail::is_partitioner<std::decay<async::range<int const*>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> >::type async::to_partitioner<async::range<int const*>&>(async::range<int const*>&) [371] async::detail::task_result_holder<std::tuple<async::task<void>, async::task<int> > >::~task_result_holder() [254] std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&&)
 [286] std::enable_if<!async::detail::is_partitioner<std::decay<async::int_range<int>&>::type>::value, async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> >::type async::to_partitioner<async::int_range<int>&>(async::int_range<int>&) [139] int&& async::detail::task_result_holder<int>::get_result<int>(async::task<int> const&) [455] std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::_Tuple_impl()
 [287] void async::parallel_invoke<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#5}&&, main::{lambda()#6}&&) [140] void async::detail::task_result_holder<int>::set_result<int>(int&&) [205] std::_Tuple_impl<0ul, async::task<void>, async::task<int> >::~_Tuple_impl()
 [288] std::enable_if<async::detail::is_scheduler<async::threadpool_scheduler>::value, void>::type async::parallel_invoke<async::threadpool_scheduler, main::{lambda()#5}, main::{lambda()#6}>(async::detail&, main::{lambda()#5}&&, main::{lambda()#6}&&) [141] async::detail::task_result_holder<int>::task_result_holder() [456] std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_M_head(main::{lambda()#6} const&)
 [289] int async::parallel_reduce<async::threadpool_scheduler, async::range<int const*>&, int, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [142] async::detail::task_result_holder<int>::~task_result_holder() [457] std::_Tuple_impl<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#5}, main::{lambda()#5}&&, void>({lambda()#5}&&, main::{lambda()#5}&&)
 [290] int async::parallel_reduce<async::range<int const*>, int, main::{lambda(int, int)#8}>(async::range<int const*>&&, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [41] void async::detail::continuation_vector::flush_and_lock<async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}>(async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}&&) [172] std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&)
 [291] int async::parallel_reduce<int, int, main::{lambda(int, int)#8}>(std::initializer_list<int>, main::{lambda(int, int)#8}, main::{lambda(int, int)#8} const&) [157] async::detail::continuation_vector::try_add(async::detail::ref_count_ptr<async::detail::task_base>&&) [96] std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_head(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&)
 [216] async::task_run_handle::run() [42] async::detail::continuation_vector::continuation_vector() [173] std::_Tuple_impl<1ul, async::task<int> >::_M_head(std::_Tuple_impl<1ul, async::task<int> >&)
  [50] async::task_run_handle::task_run_handle(async::detail::ref_count_ptr<async::detail::task_base>) [56] async::detail::continuation_vector::~continuation_vector() [255] std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl(std::_Tuple_impl<1ul, async::task<int> >&&)
  [51] async::task_run_handle::~task_run_handle() [372] async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [458] std::_Tuple_impl<1ul, async::task<int> >::_Tuple_impl()
 [292] async::detail::auto_partitioner_impl<decltype (begin((declval<async::range<int const*>&>)()))> async::auto_partitioner<async::range<int const*>&>(async::range<int const*>&) [373] async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [206] std::_Tuple_impl<1ul, async::task<int> >::~_Tuple_impl()
 [293] async::detail::auto_partitioner_impl<decltype (begin((declval<async::int_range<int>&>)()))> async::auto_partitioner<async::int_range<int>&>(async::int_range<int>&) [234] async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() [459] std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_M_head(main::{lambda()#6}&& const&)
 [217] async::inline_scheduler() [374] async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >) [460] std::_Tuple_impl<1ul, main::{lambda()#6}&&>::_Tuple_impl<{lambda()#6}>({lambda()#6}&&)
 [108] async::default_scheduler() [375] async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::when_all_func_tuple(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [13] std::this_thread::yield()
 [294] int async::parallel_map_reduce<async::threadpool_scheduler, async::range<int const*>&, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::range<int const*>&, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [235] async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::~when_all_func_tuple() [114] std::this_thread::get_id()
 [295] async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [90] async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::split() [38] std::__atomic_base<unsigned long>::__atomic_base(unsigned long)
 [296] async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::task<std::tuple<async::task<void>, async::task<int> > >::then<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(async::detail::continuation_traits&&) [91] async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::auto_partitioner_impl(async::int_range<int>::iterator, async::int_range<int>::iterator, unsigned long) [97] std::__uniq_ptr_impl<async::detail::continuation_vector::vector_data, std::default_delete<async::detail::continuation_vector::vector_data> >::_M_ptr()
 [297] async::task<std::tuple<async::task<void>, async::task<int> > >::task(async::task<std::tuple<async::task<void>, async::task<int> > >&&) [111] async::detail::auto_partitioner_impl<int const*>::split() [65] std::mutex::lock()
 [298] async::task<std::tuple<async::task<void>, async::task<int> > >::task() [92] async::detail::auto_partitioner_impl<int const*>::auto_partitioner_impl(int const*, int const*, unsigned long) [66] std::mutex::unlock()
 [218] async::task<std::tuple<async::task<void>, async::task<int> > >::~task() [236] async::detail::inline_scheduler_impl::schedule(async::task_run_handle) [256] std::tuple<async::task<void>, async::task<int> >::tuple(std::tuple<async::task<void>, async::task<int> >&&)
 [299] async::task<int>::get() [158] void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&) [461] std::tuple<async::task<void>, async::task<int> >::tuple<async::task<void>, async::task<int>, true>()
 [300] async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<async::threadpool_scheduler, main::{lambda(int)#3}>(async::threadpool_scheduler&, async::detail::continuation_traits&&) [376] async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [207] std::tuple<async::task<void>, async::task<int> >::~tuple()
 [301] async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<int>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [377] async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() [462] std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&>::tuple<{lambda()#5}, main::{lambda()#5}&&, true>({lambda()#5}&&, main::{lambda()#5}&&)
 [302] async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::task<int>::then<main::{lambda(int)#3}>(async::detail::continuation_traits&&) [378] async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) [463] std::atomic<async::detail::task_state>::compare_exchange_strong(async::detail::task_state&, async::detail::task_state, std::memory_order, std::memory_order)
 [123] async::task<int>::task() [379] async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::continuation_exec_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [47] std::atomic<async::detail::task_state>::store(async::detail::task_state, std::memory_order)
 [134] async::task<int>::task(async::task<int>&&) [380] async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::~continuation_exec_func() [48] std::atomic<async::detail::task_state>::atomic(async::detail::task_state)
  [68] async::task<int>::~task() [381] async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>::operator()(async::detail::task_base*) [35] std::atomic<async::detail::compressed_ptr<3ul, true> >::compare_exchange_weak(async::detail::compressed_ptr<3ul, true>&, async::detail::compressed_ptr<3ul, true>, std::memory_order, std::memory_order)
 [303] async::task<int>::operator=(async::task<int>&&) [382] async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [49] std::atomic<async::detail::compressed_ptr<3ul, true> >::store(async::detail::compressed_ptr<3ul, true>, std::memory_order)
 [304] async::task<void>::get() [383] async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [39] std::atomic<unsigned long>::atomic(unsigned long)
 [305] async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::task<void>::then<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [384] async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [37] std::thread::id::id()
 [146] async::task<void>::task(async::task<void>&&) [385] async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::continuation_exec_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [129] std::thread::id::id(unsigned long)
  [74] async::task<void>::task() [386] async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::~continuation_exec_func() [98] std::iterator_traits<async::int_range<int>::iterator>::difference_type std::__distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator, std::random_access_iterator_tag)
  [52] async::task<void>::~task() [387] async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>::operator()(async::detail::task_base*) [99] std::iterator_traits<int const*>::difference_type std::__distance<int const*>(int const*, int const*, std::random_access_iterator_tag)
 [306] async::task<void>::operator=(async::task<void>&&) [388] void async::detail::parallel_invoke_internal<0ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [16] async::detail::task_state const* std::__addressof<async::detail::task_state const>(async::detail::task_state const&)
 [307] async::range<int const*>::range(int const*, int const*) [389] void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [24] async::detail::compressed_ptr<3ul, true> const* std::__addressof<async::detail::compressed_ptr<3ul, true> const>(async::detail::compressed_ptr<3ul, true> const&)
 [308] async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#2}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#2}>(async::threadpool_scheduler&, std::decay&&) [390] void async::detail::parallel_invoke_internal<1ul, 1ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&) [257] async::threadpool_scheduler* std::__addressof<async::threadpool_scheduler>(async::threadpool_scheduler&)
 [309] async::task<async::detail::remove_task<std::result_of<std::decay<main::{lambda()#1}>::type ()>::type>::type> async::spawn<async::threadpool_scheduler, main::{lambda()#1}>(async::threadpool_scheduler&, std::decay&&) [159] int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&) [22] async::detail::task_state* std::__addressof<async::detail::task_state>(async::detail::task_state&)
 [310] decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#2}>)())) async::spawn<main::{lambda()#2}>(main::{lambda()#2}&&) [391] async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::get_func() [15] async::detail::compressed_ptr<3ul, true>* std::__addressof<async::detail::compressed_ptr<3ul, true> >(async::detail::compressed_ptr<3ul, true>&)
 [311] decltype (spawn(async::default_scheduler(), (declval<main::{lambda()#1}>)())) async::spawn<main::{lambda()#1}>(main::{lambda()#1}&&) [392] async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [258] async::detail::inline_scheduler_impl* std::__addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&)
 [312] async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task(async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >&&) [393] async::detail::func_base<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() [464] async::task<void>& std::__get_helper<0ul, async::task<void>, async::task<int> >(std::_Tuple_impl<0ul, async::task<void>, async::task<int> >&)
 [313] async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::basic_task() [394] async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::get_func() [465] main::{lambda()#5}&& const& std::__get_helper<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(std::_Tuple_impl<0ul, main::{lambda()#6}, main::{lambda()#6}&&> const&)
 [219] async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::~basic_task() [395] async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [174] async::detail::continuation_vector::vector_data* const& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&)
 [124] async::detail::basic_task<int>::basic_task() [396] async::detail::func_base<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, void>::~func_base() [100] async::detail::continuation_vector::vector_data*& std::__get_helper<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::_Tuple_impl<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&)
 [135] async::detail::basic_task<int>::basic_task(async::detail::basic_task<int>&&) [237] async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::get_func() [259] async::task<int>& std::__get_helper<1ul, async::task<int>>(std::_Tuple_impl<1ul, async::task<int>>&)
  [69] async::detail::basic_task<int>::~basic_task() [397] async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::func_base<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&) [466] main::{lambda()#6}&& const& std::__get_helper<1ul, main::{lambda()#6}&&>(std::_Tuple_impl<1ul, main::{lambda()#6}&&> const&)
 [314] async::detail::basic_task<int>::operator=(async::detail::basic_task<int>&&) [398] async::detail::func_base<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, void>::~func_base() [467] std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> std::forward_as_tuple<main::{lambda()#5}, main::{lambda()#6}>(main::{lambda()#6})
 [147] async::detail::basic_task<void>::basic_task(async::detail::basic_task<void>&&) [238] async::detail::func_base<main::{lambda(int)#3}, void>::get_func() [58] std::iterator_traits<async::int_range<int>::iterator>::iterator_category std::__iterator_category<async::int_range<int>::iterator>(async::int_range<int>::iterator const&)
  [75] async::detail::basic_task<void>::basic_task() [399] async::detail::func_base<main::{lambda(int)#3}, void>::func_base<{lambda(int)#3}>({lambda(int)#3}&&) [73] std::iterator_traits<int const*>::iterator_category std::__iterator_category<int const*>(int const* const&)
  [53] async::detail::basic_task<void>::~basic_task() [400] async::detail::func_base<main::{lambda(int)#3}, void>::~func_base() [260] decltype (({parm#1}.end)()) std::end<async::range<int const*> >(async::range<int const*>&)
 [315] async::detail::basic_task<void>::operator=(async::detail::basic_task<void>&&) [239] async::detail::func_base<main::{lambda()#2}, void>::get_func() [261] decltype (({parm#1}.end)()) std::end<async::int_range<int> >(async::int_range<int>&)
 [316] async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::get_task() [401] async::detail::func_base<main::{lambda()#2}, void>::func_base<{lambda()#2}>({lambda()#2}&&) [468] std::tuple_element<0ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<0ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&)
 [317] async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::basic_event() [402] async::detail::func_base<main::{lambda()#2}, void>::~func_base() [469] std::tuple_element<0ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<0ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&)
 [318] async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::~basic_event() [240] async::detail::func_base<main::{lambda()#1}, void>::get_func() [175] std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type const& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > const&)
 [319] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::destroy_func() [403] async::detail::func_base<main::{lambda()#1}, void>::func_base<{lambda()#1}>({lambda()#1}&&) [101] std::tuple_element<0ul, std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> > >::type& std::get<0ul, async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >(std::tuple<async::detail::continuation_vector::vector_data*, std::default_delete<async::detail::continuation_vector::vector_data> >&)
 [220] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::get_func() [404] async::detail::func_base<main::{lambda()#1}, void>::~func_base() [262] std::tuple_element<1ul, std::tuple<async::task<void>, async::task<int> > >::type& std::get<1ul, async::task<void>, async::task<int> >(std::tuple<async::task<void>, async::task<int> >&)
 [320] void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, void>::init_func<{lambda()#1}>({lambda()#1}&&) [195] async::detail::func_base<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, void>::get_func() [470] std::tuple_element<1ul, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >::type const& std::get<1ul, main::{lambda()#5}&&, main::{lambda()#6}&&>(main::{lambda()#6}&& const&)
 [148] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, void>::destroy_func() [160] _ZN5async6detail9func_baseIZNS0_21internal_parallel_forINS_20threadpool_schedulerENS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_vEC2ISG_EEOSA_ [263] std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::task<std::tuple<async::task<void>, async::task<int> > >&>(async::task<std::tuple<async::task<void>, async::task<int> > >&)
  [87] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, void>::get_func() [405] async::detail::func_base<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, void>::get_func() [77] std::remove_reference<async::task<int>&>::type&& std::move<async::task<int>&>(async::task<int>&)
 [149] _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS3_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEEvE9init_funcIJSI_EEEvDpOT_ [406] _ZN5async6detail9func_baseIZNS0_24parallel_invoke_internalILm0ELm2EE3runINS_20threadpool_schedulerESt5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_vEC2ISH_EEOSC_ [102] std::remove_reference<async::task<void>&>::type&& std::move<async::task<void>&>(async::task<void>&)
 [321] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, void>::destroy_func() [196] async::detail::func_base<int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, void>::get_func() [264] std::remove_reference<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>::type&& std::move<async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&>(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&)
 [221] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, void>::get_func() [197] _ZN5async6detail9func_baseIZNS0_28internal_parallel_map_reduceINS_20threadpool_schedulerENS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_vEC2ISK_EEOSB_ [19] std::remove_reference<async::detail::ref_count_ptr<async::detail::task_base>&>::type&& std::move<async::detail::ref_count_ptr<async::detail::task_base>&>(async::detail::ref_count_ptr<async::detail::task_base>&)
 [322] _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS3_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEEvE9init_funcIJSJ_EEEvDpOT_ [241] void async::detail::task_base::add_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) [471] std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&)
 [323] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::destroy_func() [242] void async::detail::task_base::add_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [472] std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&>::type&& std::move<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&)
 [222] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::get_func() [243] void async::detail::task_base::run_continuation<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>&&) [115] std::remove_reference<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>::type&& std::move<async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&>(async::detail::auto_partitioner_impl<async::int_range<int>::iterator>&)
 [324] void async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, void>::init_func<{lambda()#2}>({lambda()#2}&&) [244] void async::detail::task_base::run_continuation<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>&&) [130] std::remove_reference<async::detail::auto_partitioner_impl<int const*>&>::type&& std::move<async::detail::auto_partitioner_impl<int const*>&>(async::detail::auto_partitioner_impl<int const*>&)
 [189] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, void>::destroy_func() [43] async::detail::task_base::run_continuations() [265] std::remove_reference<std::_Tuple_impl<1ul, async::task<int> >&>::type&& std::move<std::_Tuple_impl<1ul, async::task<int> >&>(std::_Tuple_impl<1ul, async::task<int> >&)
 [125] async::detail::func_holder<async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, void>::get_func() [44] async::detail::task_base::wait() [208] std::remove_reference<std::tuple<async::task<void>, async::task<int> >&>::type&& std::move<std::tuple<async::task<void>, async::task<int> >&>(std::tuple<async::task<void>, async::task<int> >&)
 [190] _ZN5async6detail11func_holderINS0_14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS3_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEvE9init_funcIJSL_EEEvDpOT_ [45] async::detail::task_base::finish() [473] std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&>::type&& std::move<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&>(std::remove_reference&&)
 [325] async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() [46] async::detail::task_base::task_base() [474] std::remove_reference<main::{lambda(int)#3}&>::type&& std::move<main::{lambda(int)#3}&>(std::remove_reference&&)
 [223] async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func() [57] async::detail::task_base::~task_base() [475] std::remove_reference<main::{lambda()#2}&>::type&& std::move<main::{lambda()#2}&>(std::remove_reference&&)
 [326] void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [112] async::detail::task_base::operator delete(void*) [476] std::remove_reference<main::{lambda()#1}&>::type&& std::move<main::{lambda()#1}&>(std::remove_reference&&)
 [327] async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::destroy_func() [113] async::detail::task_base::operator new(unsigned long) [209] std::remove_reference<main::{lambda(int)#7}>::type&& std::move<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}&>(main::{lambda(int)#7}&&)
 [224] async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::get_func() [407] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) [477] std::remove_reference<main::{lambda()#6}&&>::type&& std::move<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}&>(main::{lambda()#6}&&)
 [328] void async::detail::func_holder<async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, void>::init_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [408] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [210] _ZSt4moveIRZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EONSt16remove_referenceISB_E4typeEOSB_
 [329] async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::destroy_func() [409] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) [67] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [225] async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::get_func() [410] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [266] decltype (({parm#1}.begin)()) std::begin<async::range<int const*> >(async::range<int const*>&)
 [330] void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [411] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<int>, async::detail::fake_void, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [267] decltype (({parm#1}.begin)()) std::begin<async::int_range<int> >(async::int_range<int>&)
 [331] async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::destroy_func() [412] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::run(async::detail::task_base*) [176] void std::advance<async::int_range<int>::iterator, unsigned long>(async::int_range<int>::iterator&, unsigned long)
 [226] async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::get_func() [413] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [211] void std::advance<int const*, unsigned long>(int const*&, unsigned long)
 [332] void async::detail::func_holder<async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, void>::init_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [414] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_base>) [177] async::task<std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::task<std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::task<std::tuple<async::task<void>, async::task<int> > > >::type&)
  [31] async::detail::is_finished(async::detail::task_state) [415] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::task_func<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [59] async::task<int>&& std::forward<async::task<int> >(std::remove_reference<async::task<int> >::type&)
 [136] async::detail::task_result<async::detail::fake_void>::wait_and_throw() [416] async::detail::task_func<async::detail::inline_scheduler_impl, async::detail::continuation_exec_func<async::detail::inline_scheduler_impl, async::task<void>, async::detail::fake_void, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, std::integral_constant<bool, false>, false>, async::detail::fake_void>::~task_func() [84] async::task<void>&& std::forward<async::task<void> >(std::remove_reference<async::task<void> >::type&)
  [79] async::detail::task_result<async::detail::fake_void>::task_result() [417] async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [116] async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::type&)
  [88] async::detail::task_result<async::detail::fake_void>::~task_result() [418] async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::task_func<{lambda()#1}>({lambda()#1}&&) [117] async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&& std::forward<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >(std::remove_reference<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::type&)
 [333] async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::destroy(async::detail::task_base*) [419] async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [478] main::{lambda()#5}&& std::forward<main::{lambda()#5}&&>(std::remove_reference<main::{lambda()#5}&&>::type&)
 [334] async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::task_result() [161] _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEES4_EC1IJSI_EEEDpOT_ [479] main::{lambda()#6}&& std::forward<main::{lambda()#6}&&>(std::remove_reference<main::{lambda()#6}&&>::type&)
 [335] async::detail::task_result<std::tuple<async::task<void>, async::task<int> > >::~task_result() [198] async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [178] int&& std::forward<int&&>(std::remove_reference<int&&>::type&)
 [150] async::detail::task_result<int>::wait_and_throw() [420] _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_NS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEES4_EC1IJSJ_EEEDpOT_ [103] int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
 [137] async::detail::task_result<int>::task_result() [421] async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>, async::detail::fake_void>::~task_func() [268] async::task<int>& std::forward<async::task<int>&>(std::remove_reference<async::task<int>&>::type&)
 [138] async::detail::task_result<int>::~task_result() [422] async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::destroy(async::detail::task_base*) [480] async::task<void>& std::forward<async::task<void>&>(std::remove_reference<async::task<void>&>::type&)
 [151] async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >&&) [423] async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::task_func<{lambda()#2}>({lambda()#2}&&) [269] async::range<int const*>& std::forward<async::range<int const*>&>(std::remove_reference<async::range<int const*>&>::type&)
 [227] async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::ref_count_ptr(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) [424] async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>, int>::~task_func() [270] async::int_range<int>& std::forward<async::int_range<int>&>(std::remove_reference<async::int_range<int>&>::type&)
 [126] async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::~ref_count_ptr() [199] _ZN5async6detail9task_funcINS_20threadpool_schedulerENS0_14root_exec_funcIS2_iZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SB_RKT2_RKT3_EUlvE_Lb0EEEiEC1IJSL_EEEDpOT_ [212] std::tuple<async::task<void>, async::task<int> >&& std::forward<std::tuple<async::task<void>, async::task<int> > >(std::remove_reference<std::tuple<async::task<void>, async::task<int> > >::type&)
 [152] async::detail::ref_count_ptr<async::detail::task_base>::release() [200] async::detail::task_func<async::threadpool_scheduler, async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>, int>::~task_func() [104] main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&& std::forward<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>(std::remove_reference<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::type&)
  [26] async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::task_base*) [425] async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::destroy(async::detail::task_base*) [105] main::{lambda(int)#3}&& std::forward<main::{lambda(int)#3}>(std::remove_reference<main::{lambda(int)#3}>::type&)
  [20] async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base>&&) [426] async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void> >) [118] main::{lambda()#2}&& std::forward<main::{lambda()#2}>(std::remove_reference<main::{lambda()#2}>::type&)
 [336] async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr(async::detail::ref_count_ptr<async::detail::task_base> const&) [427] async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::task_func<{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >({lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&, async::task<std::tuple<async::task<void>, async::task<int> > >&&) [131] main::{lambda()#5}&& std::forward<main::{lambda()#5}>(std::remove_reference<main::{lambda()#5}>::type&)
  [36] async::detail::ref_count_ptr<async::detail::task_base>::ref_count_ptr() [428] async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<std::tuple<async::task<void>, async::task<int> > >, async::detail::fake_void, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::integral_constant<bool, true>, false>, async::detail::fake_void>::~task_func() [119] main::{lambda()#6}&& std::forward<main::{lambda()#6}>(std::remove_reference<main::{lambda()#6}>::type&)
  [14] async::detail::ref_count_ptr<async::detail::task_base>::~ref_count_ptr() [429] async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::destroy(async::detail::task_base*) [120] main::{lambda()#1}&& std::forward<main::{lambda()#1}>(std::remove_reference<main::{lambda()#1}>::type&)
 [228] async::detail::ref_count_ptr<async::detail::task_base>::operator=(decltype(nullptr)) [430] async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::schedule(async::detail::task_base*, async::detail::ref_count_ptr<async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int> >) [481] async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}&& std::forward<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}&&, async::task<void>&&)::{lambda()#1}>(std::remove_reference<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}>::type&)
  [80] async::detail::ref_count_ptr<async::detail::task_base>::operator=(async::detail::ref_count_ptr<async::detail::task_base>&&) [431] async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::task_func<{lambda(int)#3}, async::task<int> >({lambda(int)#3}&&, async::task<int>&&) [482] async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}&& std::forward<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}&&, async::task<int>&&)::{lambda()#1}>(std::remove_reference<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}>::type&)
 [229] void async::detail::schedule_task<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&, async::detail::ref_count_ptr<async::detail::task_base>) [432] async::detail::task_func<async::threadpool_scheduler, async::detail::continuation_exec_func<async::threadpool_scheduler, async::task<int>, int, main::{lambda(int)#3}, std::integral_constant<bool, true>, false>, int>::~task_func() [483] _ZSt7forwardIZN5async6detail16invoke_fake_voidIZ4mainEUlSt5tupleIJNS0_4taskIvEENS4_IiEEEEE2_S7_EENS1_17void_to_fake_voidIDTclcl7declvalIT_EEcl7declvalIT0_EEEEE4typeEOSA_OSB_EUlvE_ESF_RNSt16remove_referenceISA_E4typeE
  [62] void async::detail::schedule_task<async::threadpool_scheduler>(async::threadpool_scheduler&, async::detail::ref_count_ptr<async::detail::task_base>) [433] async::int_range<std::common_type<int, int>::type> async::irange<int, int>(int, int) [484] _ZSt7forwardIZN5async6detail16invoke_fake_voidIZ4mainEUliE1_iEENS1_17void_to_fake_voidIDTclcl7declvalIT_EEcl7declvalIT0_EEEEE4typeEOS5_OS6_EUlvE_ESA_RNSt16remove_referenceIS5_E4typeE
  [54] async::detail::compressed_ptr<3ul, true>::set_flags(unsigned long) [434] async::task<std::tuple<std::decay<async::task<void>&>::type, std::decay<async::task<int>&>::type> > async::when_all<async::task<void>&, async::task<int>&>(async::task<void>&, async::task<int>&) [28] main::{lambda(int)#7}&& std::forward<void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}>(std::remove_reference<main::{lambda(int)#7}>::type&)
  [33] async::detail::compressed_ptr<3ul, true>::compressed_ptr(void*, unsigned long) [162] async::int_range<int>::iterator::iterator(int) [121] main::{lambda()#6}&& std::forward<void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}>(std::remove_reference<main::{lambda()#6}&&>::type&)
 [230] async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::remove_ref(unsigned long) [163] async::int_range<int>::iterator::operator+=(long) [32] _ZSt7forwardIZN5async6detail28internal_parallel_map_reduceINS0_20threadpool_schedulerENS1_21auto_partitioner_implIPKiEEiNS1_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_EOSB_RNSt16remove_referenceISB_E4typeE
 [337] async::detail::ref_count_base<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >, async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > > >::ref_count_base(unsigned long) [143] async::int_range<int>::iterator::operator++() [78] int&& std::forward<int>(std::remove_reference<int>::type&)
  [76] async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::remove_ref(unsigned long) [435] async::int_range<int>::int_range(int, int) [85] std::iterator_traits<async::int_range<int>::iterator>::difference_type std::distance<async::int_range<int>::iterator>(async::int_range<int>::iterator, async::int_range<int>::iterator)
  [11] async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::is_unique_ref(std::memory_order) [93] async::operator==(async::int_range<int>::iterator, async::int_range<int>::iterator) [106] std::iterator_traits<int const*>::difference_type std::distance<int const*>(int const*, int const*)
  [55] async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref_unlocked() [94] async::operator-(async::int_range<int>::iterator, async::int_range<int>::iterator) [179] void std::__advance<async::int_range<int>::iterator, long>(async::int_range<int>::iterator&, long, std::random_access_iterator_tag)
 [338] async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::add_ref(unsigned long) [83] async::operator!=(async::int_range<int>::iterator, async::int_range<int>::iterator) [213] void std::__advance<int const*, long>(int const*&, long, std::random_access_iterator_tag)
  [40] async::detail::ref_count_base<async::detail::task_base, async::detail::task_base_deleter>::ref_count_base(unsigned long) [436] async::event_task<std::tuple<async::task<void>, async::task<int> > >::set(std::tuple<async::task<void>, async::task<int> >&&) const [271] async::threadpool_scheduler* std::addressof<async::threadpool_scheduler>(async::threadpool_scheduler&)
 [339] async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::root_exec_func<{lambda()#1}>({lambda()#1}&&) [245] async::range<int const*>::end() const [272] async::detail::inline_scheduler_impl* std::addressof<async::detail::inline_scheduler_impl>(async::detail::inline_scheduler_impl&)
 [340] async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::~root_exec_func() [246] async::range<int const*>::begin() const [10] std::operator&(std::memory_order, std::__memory_order_modifier)
 [341] async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, main::{lambda()#1}, false>::operator()(async::detail::task_base*) [437] async::detail::continuation_traits<async::task<std::tuple<async::task<void>, async::task<int> > >, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>::task_type async::detail::basic_task<std::tuple<async::task<void>, async::task<int> > >::then_internal<async::threadpool_scheduler, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, async::task<std::tuple<async::task<void>, async::task<int> > > >(async::threadpool_scheduler&, async::task<std::tuple<async::task<void>, async::task<int> > >&&, async::detail::continuation_traits&&) const [132] std::operator==(std::thread::id, std::thread::id)
 [153] _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_21internal_parallel_forIS2_NS0_21auto_partitioner_implINS_9int_rangeIiE8iteratorEEEZ4mainEUliE5_EEvRT_T0_RKT1_EUlvE_Lb0EEC1ISH_EEOSB_ [438] async::detail::basic_task<int>::get_internal() const [133] std::operator!=(std::thread::id, std::thread::id)
 [154] async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [439] async::detail::continuation_traits<async::task<int>, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<int>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) const [485] main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}::operator()(std::tuple<async::task<void>, async::task<int> >) const
 [342] _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerENS0_9fake_voidEZNS0_24parallel_invoke_internalILm0ELm2EE3runIS2_St5tupleIJOZ4mainEUlvE3_OZ4mainEUlvE4_EEEEvRT_RKT0_EUlvE_Lb0EEC1ISI_EEOSD_ [440] async::detail::continuation_traits<async::task<int>, main::{lambda(int)#3}>::task_type async::detail::basic_task<int>::then_internal<async::threadpool_scheduler, main::{lambda(int)#3}, async::task<int> >(async::threadpool_scheduler&, async::task<int>&&, async::detail::continuation_traits&&) const [486] main::{lambda(int)#3}::operator()(int) const
 [343] async::detail::root_exec_func<async::threadpool_scheduler, async::detail::fake_void, void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [441] async::detail::basic_task<void>::get_internal() const [180] main::{lambda(int)#7}::operator()(int) const
 [344] async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::root_exec_func<{lambda()#2}>({lambda()#2}&&) [442] async::detail::continuation_traits<async::task<void>, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >::task_type async::detail::basic_task<void>::then_internal<async::detail::inline_scheduler_impl, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::inline_scheduler_impl&, async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) const [122] main::{lambda(int, int)#8}::operator()(int, int) const
 [345] async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::~root_exec_func() [443] bool async::detail::basic_event<std::tuple<async::task<void>, async::task<int> > >::set_internal<std::tuple<async::task<void>, async::task<int> > >(std::tuple<async::task<void>, async::task<int> >&&) const [487] main::{lambda()#2}::operator()() const
 [346] async::detail::root_exec_func<async::threadpool_scheduler, int, main::{lambda()#2}, false>::operator()(async::detail::task_base*) [164] int const& async::detail::default_map::operator()<int const&>(int const&) const [488] main::{lambda()#5}::operator()() const
 [191] _ZN5async6detail14root_exec_funcINS_20threadpool_schedulerEiZNS0_28internal_parallel_map_reduceIS2_NS0_21auto_partitioner_implIPKiEEiNS0_11default_mapEZ4mainEUliiE6_EET1_RT_T0_SA_RKT2_RKT3_EUlvE_Lb0EEC1ISK_EEOSB_ [247] async::detail::ref_count_ptr<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::operator->() const [489] main::{lambda()#6}::operator()() const
 [192] async::detail::root_exec_func<async::threadpool_scheduler, int, int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}, false>::operator()(async::detail::task_base*) [21] async::detail::ref_count_ptr<async::detail::task_base>::get() const [490] main::{lambda()#1}::operator()() const
 [347] async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::when_all_state(unsigned long) [30] async::detail::ref_count_ptr<async::detail::task_base>::operator bool() const [491] async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}::operator()() const
 [348] async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >::~when_all_state() [34] async::detail::ref_count_ptr<async::detail::task_base>::operator->() const [492] async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}::operator()() const
 [231] async::detail::auto_grain_size(unsigned long) [27] async::detail::task_base* async::detail::compressed_ptr<3ul, true>::get_ptr<async::detail::task_base>() const [493] async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&)::{lambda()#1}::operator()() const
 [349] async::detail::default_deleter<async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > > >::do_delete(async::detail::when_all_state<std::tuple<async::task<void>, async::task<int> > >*) [17] async::detail::compressed_ptr<3ul, true>::get_flags() const [494] async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&)::{lambda()#1}::operator()() const
 [350] async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&) [444] async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<void>) const [214] void async::detail::internal_parallel_for<async::threadpool_scheduler, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<async::int_range<int>::iterator>, main::{lambda(int)#7} const&)::{lambda()#1}::operator()() const
 [351] async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&) [445] async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >::operator()(async::task<int>) const [495] void async::detail::parallel_invoke_internal<0ul, 2ul>::run<async::threadpool_scheduler, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> >(async::threadpool_scheduler&, std::tuple<main::{lambda()#5}&&, main::{lambda()#6}&&> const&)::{lambda()#1}::operator()() const
 [352] async::detail::void_to_fake_void<decltype (((declval<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}>)())((declval<std::tuple<async::task<void>, async::task<int> > >)()))>::type async::detail::invoke_fake_void<main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}, std::tuple<async::task<void>, async::task<int> > >(async::detail::void_to_fake_void&&, main::{lambda(std::tuple<async::task<void>, async::task<int> >)#4}&&) [63] async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::end() const [215] int async::detail::internal_parallel_map_reduce<async::threadpool_scheduler, async::detail::auto_partitioner_impl<int const*>, int, async::detail::default_map, main::{lambda(int, int)#8}>(async::threadpool_scheduler&, async::detail::auto_partitioner_impl<int const*>, main::{lambda(int, int)#8}, async::detail::default_map const&, main::{lambda(int, int)#8} const&)::{lambda()#1}::operator()() const
 [353] async::detail::void_to_fake_void<decltype (((declval<main::{lambda(int)#3}>)())((declval<int>)()))>::type async::detail::invoke_fake_void<main::{lambda(int)#3}, int>(async::detail::void_to_fake_void&&, main::{lambda(int)#3}&&) [64] async::detail::auto_partitioner_impl<async::int_range<int>::iterator>::begin() const [86] async::detail::task_base::run_continuations()::{lambda(async::detail::ref_count_ptr<async::detail::task_base>)#1}::operator()(async::detail::ref_count_ptr<async::detail::task_base>) const
 [354] decltype (((declval<main::{lambda()#2}>)())()) async::detail::invoke_fake_void<main::{lambda()#2}, void>(main::{lambda()#2}&&) [71] async::detail::auto_partitioner_impl<int const*>::end() const [29] operator new(unsigned long, void*)
 [355] async::detail::fake_void async::detail::invoke_fake_void<main::{lambda()#1}, void>(main::{lambda()#1}&&) [72] async::detail::auto_partitioner_impl<int const*>::begin() const [1] <cycle 1>
 [356] async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<void> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >, async::task<void> >(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<void>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<0ul, async::task<void>, std::tuple<async::task<void>, async::task<int> > >&&) [446] async::detail::task_base::ready() const [2] <cycle 2>
 [357] async::detail::fake_void async::detail::invoke_fake_void<async::detail::void_to_fake_void<decltype (((declval<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > > >)())((declval<async::task<int> >)()))>::type async::detail::invoke_fake_void<async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >, async::task<int> >(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&, async::task<int>&&)::{lambda()#1}, void>(async::detail::when_all_func_tuple<1ul, async::task<int>, std::tuple<async::task<void>, async::task<int> > >&&) [248] async::int_range<int>::end() const
